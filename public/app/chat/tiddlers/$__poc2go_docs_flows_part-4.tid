caption: Show rooms
created: 20240220161248671
modified: 20240302134950887
tags: $:/poc2go/docs/flows
title: $:/poc2go/docs/flows/part-4
type: text/vnd.tiddlywiki

!! Show Rooms

'Show rooms' generates the tiddler which is displayed as the first item in the TOC macro. The other items in the TOC are the joined rooms which are generated by [[Display room|$:/poc2go/docs/flows/part-2]] node.

The node is processed when a user joins, leaves, or requests a list of the rooms they have currently joined.

[img[$:/poc2go/docs/images/chat-03.png]]

The `Rooms...` item in the TOC tree is tiddler `$:/poc2go/rooms/show`. The tiddler allows creating a new room and has a button that requests a refresh of the joined rooms  (The button is not actually needed as the room list will update automatically). 

A room list is generated which allows the user to check to rooms to join which will then show the room as an item in the TOC.

[img[$:/poc2go/docs/images/chat-flows-05.png]]


'Show rooms' node generates the `$:/poc2go/rooms/show` tiddler in the tiddler editor. The mustache field informs TW5-Node-RED to do field substitution when generating the tiddler.

The 'joined' field holds the list of rooms which the user has checked. Caption is the item name displayed by the TOC macro. The 'TableOfContents' tag assigns the tiddler as an item in the root of the TOC.

```
title: $:/poc2go/rooms/show
mustache: yes
joined: {% network.user.joined %}
caption: Rooms...
tags: TableOfContents

<div style="float: right;">
<$button actions="<<node-red 'rooms,reload'>>" class="flow-editor-btn tc-btn-invisible tc-tiddlylink"> Reload rooms </$button>
</div>

<$edit-text field="createroom"/>
<$button actions="<<node-red 'rooms,create'>>"> Create </$button>

<hr class="poc2go-hr">

{%# payload.roomnames %}
<span class="room-titles"><$checkbox listField="joined" checked="{%.%}" checkactions="<<node-red 'rooms,join,{%.%}'>>" uncheckactions="<<node-red 'rooms,leave,{%.%}'>>"> {%.%} </$checkbox></span>
{%/ payload.roomnames %}
```

!!! Header

The field values are followed by the reload room button and text input / button to create a new room. The new room name is placed in the 'createroom' field as required by the JavaScript logic on the server.

!!! Room name checkboxes

The header is followed by the room list. The third character pound-sign (`#`) in `{%# payload.roomnames %}` tells Mustache to loop through the array of rooms. `{%.%}` is the value of the element in the array (ie: room name).

The TiddlyWiki `<$checkbox>` widget is generated to place the checked room name(s) in the 'joined' field. When checked, a request to join the room is sent to the server. When unchecked a request to leave the room is sent.

