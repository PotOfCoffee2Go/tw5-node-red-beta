caption: Sessions
created: 20240404095707028
modified: 20240405032641903
tags: TableOfContents
title: Sessions
type: text/vnd.tiddlywiki

TW5-Node-RED maintains objects to provide the current status of the clients connected to the server.

These 'session' controls are a combination of 'clientIds' and two twiki databases 'Users' and 'ConnectionDb'. A session is unique to each connection to the server. An application developer can add fields to these data structures to hold custom session information.

!!! clientIds
A clientId is generated by the client and unique to the web page (or client) connected to the server. When a client connects it sends the id. The client id remains the same until the user closes or re-loads the web page.

If the clientId is not in the clientIds object the user will be asked to log in which updates the clientIds object with the user and the success or failure of the users authorization.

If the id already exists on the server - more than likely is due to a communications hiccup where the socketId has changed due to the page reconnecting. While the client id does not change, the socketId should not be relied upon as it can change.

The information of the first client id stored by the server:

```js
$tnr-repl> Object.keys(clientIds)
[ 'bdc448f0f692a99c', 'a6dfad9742ded081' ]

$tnr-repl> clientIds['bdc448f0f692a99c']
{
  clientId: 'bdc448f0f692a99c',
  userid: '',
  socketId: 'iseq5OH5SsTyC7trAAAB',
  auth: {
    _id: 'bdc448f0f692a99c',
    _token: 'eyJhbGciOiJIUz · · · JtxeDrsjPxu8I',
    authorized: false
  }
}

```

 * userid - id of the user logged onto this session
 * socketId - socket.io socket id used by the communications system
 * auth - authorization status
 ** _id - clientId (again)
 ** _token - the JWT bearer token for this connection
 ** authorized - is this connection currently authorized server access?
 *** single flag indicates the user has been authenticated, authorized, and passed any permissions required of the server. If set to false at any time - the user will be logged off upon receiving the next message.

 The example above indicates a connection has been established, but the user has not logged in. This second example below indicates the userid 'poc' is logged on and authorized.

```js
$tnr-repl> clientIds['a6dfad9742ded081']
{
  clientId: 'a6dfad9742ded081',
  userid: 'poc',
  socketId: 'u7YUaT0nfcYygMEiAAAK',
  auth: {
    _id: 'a6dfad9742ded081',
    _token: 'eyJhbGciOiJIUz · · · JtxeDrsjPxu8I',
    authorized: true
  }
}
```

---

!!! Users
The Users twiki database is populated when a user registers for a new account. The tiddler titles are the userid. 

```js
$tnr-repl> twikis.Users.allTitles().sort()
[
  'demo',
  'eee',
  'poc',
  'pocc',
  'ppp',
]

$tnr-repl> twikis.Users.getTiddler('demo').fields
[Object: null prototype] {
  created: 2024-02-12T11:04:57.956Z,
  modified: 2024-02-12T11:05:40.641Z,
  title: 'demo',
  userid: 'demo',
  username: 'Demo',
  email: 'demo@example.com',
  fetched: '20240212110457956',
  tags: [ '·node-red·' ],
  pwHash: '$2b$08$NRbYUbXxi · · · tQZkzYJiHa',
  joined: 'color-blind flexible',
  palette: '$:/palettes/Twilight-Node-Red'
}
$tnr-repl> 

```

Fields of interest are:

 * userid - id entered by the user
 * username - name presented to other users
 * email - optional email address
 * pwHash - a bcrypt Hash of the typed password
 * joined - a field added by the Chat system
 * palette - users requested palette

---

!!! ConnectionDb

The twiki database 'ConnectionDb' contains communication information maintained by the uiBuilder package. Info stored in tiddlers with the title based on the socketId. It is possible for the socketId to change if there is a communications issue - all of this is under the hood and should not be of concern to application developers. However, if debugging comm stuff this database contains information which might be helpful.

```js
$tnr-repl> twikis.ConnectionDb.allTitles()
[ 'iseq5OH5SsTyC7trAAAB', 'u7YUaT0nfcYygMEiAAAK' ]

$tnr-repl> twikis.ConnectionDb.getTiddler('iseq5OH5SsTyC7trAAAB').fields
[Object: null prototype] {
  uibuilderCtrl: 'client connect',
  from: 'server',
  _socketId: 'iseq5OH5SsTyC7trAAAB',
  version: '6.4.1-iife.min',
  ip: '127.0.0.1',
  tabId: 't352761',
  url: 'svr',
  pageName: 'wiki/nodered.html',
  connections: '0',
  lastNavType: 'navigate',
  tls: 'false',
  connectedTimestamp: '2024-04-04T09:30:49.098Z',
  referer: 'http://localhost:1880/svr/wiki/nodered.html?mws=chat',
  recovered: 'false',
  _msgid: '7393fccc9410965f',
  _event: 'node:379f3550af8b837e',
  title: 'iseq5OH5SsTyC7trAAAB',
  uibclientid: 'xUqnMCpr60Ex2WsgG0Mp-',
  tw5clientid: 'bdc448f0f692a99c',
  tags: [ 'bdc448f0f692a99c' ]
}
```

The last four fields can be used to access other information about this communications session. The 

 * title - title of the tiddler containing this info
 ** is the socket.io socketId
 * uibclientid - the connection clientid within the communications system
 * tw5clientid - the id that is in 'clientIds' object
 * tags - can be used to find tiddler record using TW filters

