caption: Meta data
created: 20240223102305598
modified: 20240312034858255
tags: $:/poc2go/docs/msg
title: $:/poc2go/docs/msg/meta
type: text/vnd.tiddlywiki

!! msg.network.meta

|msg |>|>| |>|>|h
| |network |>|>|>| |h
| | |meta |>| |Meta Data |>|h
| | | |source | string |Source of message - TW5/Node-red/HTML|
| | | |version | string |Version of source|
| | | |location | object |Browser 'window.location' object|
| | | |_clientid | string |Client-side generated ID|
| | | |tiddlers | array |Data-tiddlers sent with every msg|

!!! source
The source can be TiddlyWiki (TW5), Node-RED (Node-Red) or web page (HTML).

!!! version
The version is the version of the source. If the version of the source can not be determined this field is empty string.

!!! location
This field is the browser '[[windows.location|https://developer.mozilla.org/en-US/docs/Web/API/Location]]' object. If the source is 'Node-Red' the field (if present) is an empty object.

Example:

```
      "location": {
        "ancestorOrigins": {},
        "href": "http://localhost:1880/svr/wiki/notebook.html?app=chat",
        "origin": "http://localhost:1880",
        "protocol": "http:",
        "host": "localhost:1880",
        "hostname": "localhost",
        "port": "1880",
        "pathname": "/svr/wiki/notebook.html",
        "search": "?app=chat",
        "hash": ""
      },

```

!!! _clientid
A client ID is generated by the client. The ID remains the same until the page is reloaded, which will generate a different ID. For a Node-RED source is the Node-RED node ID. This ID is instrumental in keeping track of the communications link between the server and the client. 

!!! tiddlers

The meta tiddlers are sent with every message. By default there are two tiddlers; `$:/temp/tw5-node-red/store` (type application/json) and `$:/temp/tw5-node-red/data` (type application/x-tiddler-dictionary). The meta data tiddlers are stored client-side and can be updated by either the server or client (note that a race condition can occur if the server makes a change at the same time the client is changing the meta tiddlers).

Application developers are welcome to use and add fields or values in the text of these tiddlers for status and session controls of their application.

The system uses fields in `$:/temp/tw5-node-red/store` to hold the JWT bearer token (JSON Web Token), socketId, and clientid.

Example:

```
      "tiddlers": [
        {
          "created": "20240223025603203",
          "modified": "20240223025603203",
          "title": "$:/temp/tw5-node-red/store",
          "type": "application/json",
          "text": "{ \"title\": \"$:/temp/tw5-node-red/store\" }",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.· · ·
          "socketId": "QqcVUUmI5b-X2WisAAAT",
          "clientid": "879d5d9b5f4b667a",
          "fetched": "20240223025603203",
          "tags": "·node-red·",
          "palette": "$:/palettes/Twilight-Node-Red"
        },
        {
          "created": "20240223025603203",
          "modified": "20240223025603204",
          "title": "$:/temp/tw5-node-red/data",
          "type": "application/x-tiddler-dictionary",
          "text": "title: $:/temp/tw5-node-red/data",
          "fetched": "20240223025603204",
          "tags": "·node-red·"
        }
      ]

```
