[
    {
        "id": "c58e1993cab59996",
        "type": "tab",
        "label": "Topics",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eb845b8cbc7ac49a",
        "type": "tab",
        "label": "Network",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb90098a1998250c",
        "type": "tab",
        "label": "Security",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "304338a4b9f89088",
        "type": "tab",
        "label": "onConnect",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ab56271e77c6f866",
        "type": "tab",
        "label": "Databases",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3a98d4a7cc479175",
        "type": "tab",
        "label": "TW Multi Wiki",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "127607a6bb274a18",
        "type": "tab",
        "label": "Utilities",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "48bfd625e1f82a45",
        "type": "tab",
        "label": "Tools",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2e264bd071bbb666",
        "type": "tab",
        "label": "Webpages",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8f4c8042c34e6b26",
        "type": "tab",
        "label": "Dice",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e659339e762fe7e5",
        "type": "tab",
        "label": "Chat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0481506d69936f4f",
        "type": "tab",
        "label": "Applications",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2bd9fbf5969d4ef",
        "type": "tab",
        "label": "tiddler nodes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6034e62004ab9088",
        "type": "tab",
        "label": "Redrum",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9e01fcb7c734b8a9",
        "type": "tab",
        "label": "Store by Tag",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "785334168b65be6b",
        "type": "tab",
        "label": "$tw functions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9434cba69ba3166b",
        "type": "tab",
        "label": "Experiments",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d1d824ed77b66140",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "name": "Server Inquiry: \\n Call to request tiddlers from client \\n Place TiddlyWiki filter in 'msg.filter' to select desired tiddlers \\n For Example: \\n ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "43382dce74b3010a",
            "fde1fed6e12b5da0",
            "9b88d3454bec6454"
        ],
        "x": 28,
        "y": 2235,
        "w": 644,
        "h": 252
    },
    {
        "id": "01567b9b6b2e01a1",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "name": "Starter Template for TiddlyWiki Client flow \\n Click here to select, \\n  Copy (ctrl-c). \\n Go to a different tab \\n Paste (ctrl-v),  \\n ≣ → Groups → Ungroup selection \\n ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "9da0d9942e6c2fc1",
            "22dee6fb410a27bf",
            "a28b92d7f528218f",
            "7cbca5f5615be00e",
            "681513f781f27975"
        ],
        "x": 244,
        "y": 501,
        "w": 652,
        "h": 202
    },
    {
        "id": "e4c2719e30c99637",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "name": " TiddlyWiki Client Interface  (msg)",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "c2642e3fa442ca65",
            "e0350dac670bea64",
            "cc84a8e59d36a284",
            "379f3550af8b837e",
            "8a0eb26ebf7e9961"
        ],
        "x": 14,
        "y": 33,
        "w": 1212,
        "h": 430
    },
    {
        "id": "3d9daca2a6f68b44",
        "type": "group",
        "z": "c58e1993cab59996",
        "name": "TiddlyWiki Book - Chapter 1",
        "style": {
            "label": true
        },
        "nodes": [
            "0d0209599f37e5fd",
            "a04cbaa536c3e91d"
        ],
        "x": 128,
        "y": 738,
        "w": 564,
        "h": 274
    },
    {
        "id": "b37cb4ef8029f994",
        "type": "group",
        "z": "c58e1993cab59996",
        "name": "Send a sample tiddler of a topic",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "90ab04c3ce5393e8",
            "b210f724bebd1948",
            "68553a08235eb1d7",
            "54f166a7f4f3a368",
            "704002cca88ec103"
        ],
        "x": 84,
        "y": 379,
        "w": 652,
        "h": 82
    },
    {
        "id": "5de81872ac658de0",
        "type": "group",
        "z": "127607a6bb274a18",
        "name": "Hide Sidebar",
        "style": {
            "label": true,
            "stroke": "#ffff00"
        },
        "nodes": [
            "dee53a18f9af7b3c",
            "1d23e008fde4d932",
            "5cb34faaf5e14207",
            "7fd5bbf53ae9558b",
            "49e8ade023549ff5"
        ],
        "x": 44,
        "y": 479,
        "w": 662,
        "h": 82
    },
    {
        "id": "d57af1ba9d807a6e",
        "type": "group",
        "z": "304338a4b9f89088",
        "name": "Sent by client when single flie wiki is connected and autherized",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "2318b06227765245",
            "20bdec5d39a32ed9",
            "cdcb7e61e457aacb",
            "80f6cc12c651bec8",
            "e3621e319e0136b6",
            "628aab7aaefe715e",
            "e4714903c559cb33",
            "edc0b050e5af6de4",
            "f384e29897040b4b",
            "f69ecb30fb65d53c",
            "e9c96a17d3f117a8",
            "5888fc4a0550ddd7"
        ],
        "x": 104,
        "y": 39,
        "w": 672,
        "h": 272
    },
    {
        "id": "c118b47258277fd0",
        "type": "group",
        "z": "c58e1993cab59996",
        "name": "These two flows produce same results \\n First sends a single reply \\n Second sends two replies",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "190f4b09096d84e9",
            "a69da9a11fa9944c",
            "dc550f72fb4b0b99",
            "679c15ceb725216c",
            "593346b7484e719c",
            "8f6b83391a5e5c61",
            "8c99b04967d79353",
            "f4eab1f49fbefa04",
            "5c712f0ce8dca9b2",
            "822afd14ac7a2985"
        ],
        "x": 104,
        "y": 492,
        "w": 612,
        "h": 214
    },
    {
        "id": "b69ab7ee9538fda9",
        "type": "group",
        "z": "0481506d69936f4f",
        "name": "TW5-Node-RED application",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "1a53e1db7536049c",
            "75ec1021e1b97a17",
            "1a0a7904264b6dd3",
            "821955a316a5b4d1",
            "2b699ce7937556b8"
        ],
        "x": 64,
        "y": 219,
        "w": 692,
        "h": 82
    },
    {
        "id": "47b83acc6a54da80",
        "type": "group",
        "z": "127607a6bb274a18",
        "name": "Set field 'msg.twikis' to all twikis and tiddlers they contain",
        "style": {
            "label": true,
            "stroke": "#ffff00"
        },
        "nodes": [
            "1c83c2ba47bdb96a",
            "2ffe59e5768f9620",
            "e5c2695061c28c3d"
        ],
        "x": 44,
        "y": 599,
        "w": 532,
        "h": 82
    },
    {
        "id": "7d0cda13723c5e21",
        "type": "group",
        "z": "2e264bd071bbb666",
        "name": "Web page layouts",
        "style": {
            "stroke": "#ffff00",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "ed5874185a4d04b9",
            "3641f98bb5b86807"
        ],
        "x": 524,
        "y": 119,
        "w": 362,
        "h": 82
    },
    {
        "id": "e1daf0a769b923c0",
        "type": "group",
        "z": "0481506d69936f4f",
        "name": "Load TW5-Node-RED Plugin \\n The plugin contains General information about TW5-Node-RED \\n ",
        "style": {
            "fill": "#3f93cf",
            "label": true,
            "label-position": "n",
            "color": "#ffff00"
        },
        "nodes": [
            "1d4bc70456acd7ba",
            "b79d45a9b7037362"
        ],
        "x": 98,
        "y": 561,
        "w": 684,
        "h": 326
    },
    {
        "id": "e914aaa12d0aa24e",
        "type": "group",
        "z": "2e264bd071bbb666",
        "name": " \\n Fiona Solutions prototype \\n /web/page/fiona \\n See ./uibulder/web/src/pages/index.html",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "ad42a88ed21e5660",
            "3016b1c70c0454f5",
            "2187d045fd511912",
            "8fcad8f983b1ff60",
            "52bd7eda399c5b06",
            "3a66d6960b195fe4",
            "d7cea583cbe3fea9",
            "7add3e3ed518c8bf",
            "2bc27304b1b0ee44",
            "0a13840cbd5684fe",
            "8c82e7455a92d9d0"
        ],
        "x": 64,
        "y": 311,
        "w": 712,
        "h": 300
    },
    {
        "id": "768d32daf0185aaa",
        "type": "group",
        "z": "2e264bd071bbb666",
        "name": "Runs sample page in an iframe",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "9bc1f269acde9ac9",
            "30d1b206b8634711",
            "7b9e83c8c7bad25c",
            "e6a464527b5ef777"
        ],
        "x": 149,
        "y": 659,
        "w": 462,
        "h": 82
    },
    {
        "id": "1e53b7521065bd3a",
        "type": "group",
        "z": "c58e1993cab59996",
        "name": "Switch TOC between external/internal nav ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "7c6ac8311b11bc2a",
            "d1764b3bc58cf21d",
            "91fad1e91044c358",
            "cdaca8e53cf91ee8",
            "e503947ca0703e79"
        ],
        "x": 94,
        "y": 1389,
        "w": 552,
        "h": 122
    },
    {
        "id": "022d52b9f38c8589",
        "type": "group",
        "z": "0481506d69936f4f",
        "name": "Documentaion Guides - is not ready yet",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "dd5ea46f096963b9",
            "f0f050fbab58af8a",
            "e667374203ebd5d1",
            "79eeb0034ac1c223",
            "9d1770651abfe79c",
            "0d798af067a77746",
            "879d7ea39eccc475",
            "991c9c3a178ad4a2",
            "9fa8762795ec4e5b",
            "afd0070808d7b77f"
        ],
        "x": 4,
        "y": 339,
        "w": 972,
        "h": 162
    },
    {
        "id": "a6dd4e060820914b",
        "type": "group",
        "z": "0481506d69936f4f",
        "name": "Node-Red Flow Editor and Docsify documents in a tiddler iframe",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "57c7e27a6d3f23bd",
            "93753a81a1769fdc",
            "436833639fa5f502",
            "c138fe252fda56df",
            "1bb0c6fc5d4b21c0",
            "b943f50af5e3f0df",
            "95871cedf9ff64b7"
        ],
        "x": 44,
        "y": 59,
        "w": 762,
        "h": 122
    },
    {
        "id": "3cefbe58652ddd1b",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "name": " \\n SyncServer \\n Create tiddlers of your application",
        "style": {
            "label": true,
            "fill": "#3f93cf",
            "color": "#ffff00",
            "label-position": "n"
        },
        "nodes": [
            "edee491ab307e8f4"
        ],
        "x": 288,
        "y": 1051,
        "w": 564,
        "h": 226
    },
    {
        "id": "04304cacc22dfd2b",
        "type": "group",
        "z": "304338a4b9f89088",
        "name": "Delivery of application sites \\n Sites are normally created with sync server \\n or Multi Wiki Server",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "fb747f122378fdb3",
            "2980cdfa0cd44104",
            "e7370f616716a124",
            "55476bca421eb07a",
            "62c3e92ae0762df5"
        ],
        "x": 58,
        "y": 327,
        "w": 754,
        "h": 386
    },
    {
        "id": "a24216bd24717c1e",
        "type": "group",
        "z": "fb90098a1998250c",
        "name": " Security System",
        "style": {
            "label": true,
            "label-position": "n",
            "stroke": "#a4a4a4"
        },
        "nodes": [
            "bfac12ca49095e92",
            "530c27cac770eeb4",
            "581538b733302aa5"
        ],
        "x": 28,
        "y": 41,
        "w": 904,
        "h": 806
    },
    {
        "id": "b900c252078e7f0f",
        "type": "group",
        "z": "ab56271e77c6f866",
        "name": "The second output on 'to-twiki' nodes triggers whenever that twiki \\n is updated regardless of where in the workspace. \\n These flows load database on startup and automatically write updates to disk. \\n ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "9dcb2db358986f60",
            "07eb4d33e36ca78e",
            "2f72cdcf6cc06e2d",
            "d86914de295534cb",
            "c8ec67c0de0b50e2",
            "378b62111965fdec",
            "befe33e64a70264a",
            "03ebfda3187b4bce",
            "a2ae9a08fd4b0a90"
        ],
        "x": 64,
        "y": 141,
        "w": 632,
        "h": 469
    },
    {
        "id": "7854aca21984899b",
        "type": "group",
        "z": "ab56271e77c6f866",
        "name": "Tracking of socket.io socket id changes \\n Low-level stuff \\n Change with caution",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "48c4eb692312c061",
            "a03e67d3c6af9466",
            "6caff008aa37f65b",
            "5d85994367fc1ef4",
            "c88f50c805560073",
            "d8d9252f34c0e3a9"
        ],
        "x": 34,
        "y": 637,
        "w": 682,
        "h": 154
    },
    {
        "id": "068e97372887ec43",
        "type": "group",
        "z": "e659339e762fe7e5",
        "name": "Flow to update Chat System Db - change function as required.",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "911eeb7fcf10b4b8",
            "a271d8c1c1865344",
            "824a0e2f6149e974",
            "ce217325ac5781bf",
            "6e07db47e20f3499"
        ],
        "x": 54,
        "y": 319,
        "w": 832,
        "h": 82
    },
    {
        "id": "a98914fa33e8fcce",
        "type": "group",
        "z": "127607a6bb274a18",
        "name": "Show server-side '$tw' object in debug panel",
        "style": {
            "label": true
        },
        "nodes": [
            "a07af28ade3a49a2",
            "c1e23170a15882f7"
        ],
        "x": 54,
        "y": 29,
        "w": 482,
        "h": 82
    },
    {
        "id": "f89444a08d4ee71f",
        "type": "group",
        "z": "e2bd9fbf5969d4ef",
        "name": "Examples displayed to debug panel \\n of all 'tiddler' nodes",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "ade20181c7188aac",
            "1b2a0af6555deff5",
            "4ec155b2a42b63ac",
            "daabecefdfa8ef8c",
            "acdd64069d2ce74f",
            "2c2ac8fc7793332b",
            "355bc4ad4fab0d98",
            "4bae07537883976f",
            "5166c7a97c16c913",
            "88b0d2c8cff6fdb6",
            "92a14e0025f46ad4",
            "1ae4c97d2ec295ea",
            "ec9f46b29cb3b56b",
            "8f2bf0ad406da0c3"
        ],
        "x": 34,
        "y": 23,
        "w": 772,
        "h": 298
    },
    {
        "id": "d793a3fa098d8768",
        "type": "group",
        "z": "6034e62004ab9088",
        "name": "Work in progress - markdown document to/from TW TOC",
        "style": {
            "label": true
        },
        "nodes": [
            "f15b36736dfbab83",
            "ba2b1aab05d32cb7",
            "e3433e90b1d5cb91",
            "2ec6b7b7c3a25a61",
            "d9c0a347dbd33f43",
            "b4e52cdc03846635",
            "2819f3aae80b6379",
            "f308c5ab3c55d2f8",
            "b42caa0cfba51278"
        ],
        "x": 4,
        "y": 33,
        "w": 1082,
        "h": 268
    },
    {
        "id": "6e5e3d9538e30809",
        "type": "group",
        "z": "9e01fcb7c734b8a9",
        "name": "Store and read from disk tiddlers with given tag \\n ",
        "style": {
            "label": true
        },
        "nodes": [
            "cf4153896f871479",
            "e5eea88792642a29",
            "8c341caadf2b0cc0",
            "e70e9b4d0880f940",
            "6ef39770387b1bdd",
            "85ee9376fbe6a6b5",
            "741d3bbd4ffac838",
            "c4f19a643eb92bae",
            "9342e556d12f66b0",
            "08f69536c913074b",
            "745cc5fba5bd593a",
            "78ab404cb9f85fe4"
        ],
        "x": 58,
        "y": 43,
        "w": 838,
        "h": 389
    },
    {
        "id": "063ca7e46ddb41d4",
        "type": "group",
        "z": "785334168b65be6b",
        "name": "Dispaly tiddlers decscribing commonly used $tw functions",
        "style": {
            "label": true
        },
        "nodes": [
            "4ec0d7b66168e23c",
            "6b267aa825f4adda",
            "523606ec1f3e89e9",
            "25346a7b039bf61e",
            "17fc885857ea061f",
            "b475506f1c04a454",
            "2c1f3f9583e66a3b"
        ],
        "x": 24,
        "y": 19,
        "w": 832,
        "h": 122
    },
    {
        "id": "4e3f07be3be3818f",
        "type": "group",
        "z": "ab56271e77c6f866",
        "name": "Show all clientIds &  twiki databases in debug panel",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "588e7321eef68b14",
            "a93b0937257cf944",
            "0bb01e40dbeddabe"
        ],
        "x": 104,
        "y": 19,
        "w": 552,
        "h": 82
    },
    {
        "id": "dc295cd74b452cfb",
        "type": "group",
        "z": "e659339e762fe7e5",
        "name": "Flow to update Chat System Db - change function as required.",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "1364cdc4760a5182",
            "5488295da0fa5e05",
            "d476630a3668de5e",
            "1536ecba8f7ece1a",
            "5fb8a1d0bfbb9bc5"
        ],
        "x": 54,
        "y": 419,
        "w": 832,
        "h": 82
    },
    {
        "id": "06a7cfc21197c2d2",
        "type": "group",
        "z": "48bfd625e1f82a45",
        "name": "Misc dev utilities",
        "style": {
            "label": true
        },
        "nodes": [
            "7e1d28042993ee2d",
            "53cfba302a93975f",
            "b1d22b6ea5af6c8c",
            "8e0b5380e71a239e",
            "dad041e7b0ba1a66",
            "05f53b0ba8804b02",
            "123b82e57831527e",
            "db3503f6c6d0f5ea",
            "d6becbc1eb1981a5",
            "8b2f8fcaf3696a2b",
            "e4bc7258380d7124",
            "5bde851593e32438",
            "7a077d0de73446be",
            "dc7833dc679fadd0",
            "dcd45e6966cda24d",
            "52ac23d6fd69ca75",
            "de29b90b6878e330",
            "605736a10c443a62",
            "0f24b35ddd5713d5",
            "384b3178b58d75a3",
            "53fb3fedf84a21e5",
            "0a43a979cb79ba2e",
            "42a9532b8df72e2c"
        ],
        "x": 14,
        "y": 59,
        "w": 872,
        "h": 322
    },
    {
        "id": "6fc117d699260e4c",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "name": " \\n MultiWikiServer \\n Create recipes/bags of your tiddlers",
        "style": {
            "label": true,
            "fill": "#3f93cf",
            "color": "#ffff00",
            "label-position": "n"
        },
        "nodes": [
            "e58841decd532a3e"
        ],
        "x": 268,
        "y": 1301,
        "w": 604,
        "h": 226
    },
    {
        "id": "f501ab278a37529f",
        "type": "group",
        "z": "127607a6bb274a18",
        "name": "TW Instances - Commanders",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "49f363e05e815a85",
            "1fe9f0e2147a2011",
            "2987d0b55f0f6a01"
        ],
        "x": 28,
        "y": 133,
        "w": 574,
        "h": 334
    },
    {
        "id": "1b95b4adfdeca38e",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "name": " \\n TW REPL \\n Interactive access from console",
        "style": {
            "label": true,
            "fill": "#3f93cf",
            "color": "#ffff00",
            "label-position": "n"
        },
        "nodes": [
            "759dce2ea0c90c1e",
            "8549cd6c5c10aa65"
        ],
        "x": 258,
        "y": 731,
        "w": 624,
        "h": 296
    },
    {
        "id": "e277a3352b39ab18",
        "type": "group",
        "z": "304338a4b9f89088",
        "name": "TW5-Node-RED Core",
        "style": {
            "label": true,
            "stroke": "#ffff00"
        },
        "nodes": [
            "ac177abd18a30b02",
            "8a6999c14f732048",
            "c9bbe0f3f12e859e",
            "47d0e6a8f8415aa2",
            "99b7abd4d3bc5b40",
            "844b316ad04edad7",
            "d6df3e42a1c72910"
        ],
        "x": 144,
        "y": 759,
        "w": 602,
        "h": 142
    },
    {
        "id": "4cf17dc99028c6b1",
        "type": "group",
        "z": "3a98d4a7cc479175",
        "name": "Load ./public/app 'server' \\n editions into MWS SQLite \\n database as recipes",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "5287aee91ed80f4a"
        ],
        "x": 584,
        "y": 37,
        "w": 172,
        "h": 114
    },
    {
        "id": "2cc580ac14991c18",
        "type": "group",
        "z": "8f4c8042c34e6b26",
        "name": "Send dice icons to client",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "ade0933a3cb3ad67",
            "cbaa14bc051e3edb",
            "ea95423b40b2db5f",
            "19d2ef07636bdc78",
            "3913261e623baa65"
        ],
        "x": 114,
        "y": 49,
        "w": 502,
        "h": 122
    },
    {
        "id": "2384ad651173ae9e",
        "type": "group",
        "z": "8f4c8042c34e6b26",
        "name": "Roll number of dice requested \\n and display in story",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "510dc6f6e07f9be4",
            "3c3235632a2801e6",
            "64b77433f374854a",
            "33134899afe62741",
            "387d1976fbad2871",
            "f1ef5a7e371b1c7c",
            "131aeb785c805e96",
            "c6fe024d027e224d"
        ],
        "x": 74,
        "y": 193,
        "w": 582,
        "h": 268
    },
    {
        "id": "49f363e05e815a85",
        "type": "group",
        "z": "127607a6bb274a18",
        "g": "f501ab278a37529f",
        "name": "Execute array of TW Command strings",
        "style": {
            "stroke": "#ffff00",
            "label": true
        },
        "nodes": [
            "d679dc2c7fb5ad4c",
            "e40c0cb505cd4bfb",
            "3891c3049d5ff01d"
        ],
        "x": 54,
        "y": 159,
        "w": 442,
        "h": 82
    },
    {
        "id": "1fe9f0e2147a2011",
        "type": "group",
        "z": "127607a6bb274a18",
        "g": "f501ab278a37529f",
        "name": "Execute array of Sync server TW Command strings",
        "style": {
            "stroke": "#ffff00",
            "label": true
        },
        "nodes": [
            "c76e9202971136a2",
            "30ce9f775e65e57d",
            "3f8dbc7f474d68d8"
        ],
        "x": 54,
        "y": 259,
        "w": 522,
        "h": 82
    },
    {
        "id": "2987d0b55f0f6a01",
        "type": "group",
        "z": "127607a6bb274a18",
        "g": "f501ab278a37529f",
        "name": "Execute array of MWS server TW Command strings",
        "style": {
            "stroke": "#ffff00",
            "label": true
        },
        "nodes": [
            "7aac22e295d4e0f1",
            "45d54f170e388b66",
            "edf7669fe4924d86"
        ],
        "x": 54,
        "y": 359,
        "w": 522,
        "h": 82
    },
    {
        "id": "78ab404cb9f85fe4",
        "type": "group",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "Handle file does not exist error ",
        "style": {
            "label": true
        },
        "nodes": [
            "c960798368e59ec0",
            "5bd75dd5d231b5ea",
            "d069a2d240ff1c0b",
            "de96b2156186f8ff",
            "3298074f282c2dbb",
            "7c48a995b12f0315",
            "90a649b2382b649c"
        ],
        "x": 84,
        "y": 219,
        "w": 512,
        "h": 187
    },
    {
        "id": "f308c5ab3c55d2f8",
        "type": "group",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "Create TiddlyWiki 'TOC' from a Markdown document ",
        "style": {
            "stroke": "none",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "5f5c6b5f9a960ac0",
            "cc6035c4afc521dd",
            "f19c3572b6a925db",
            "b7d587070cb34dd6",
            "97a964d117e03b3d"
        ],
        "x": 104,
        "y": 59,
        "w": 772,
        "h": 82
    },
    {
        "id": "b42caa0cfba51278",
        "type": "group",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "Create  Markdown document from TiddlyWiki 'TOC'",
        "style": {
            "stroke": "none",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "b75c78df1df07729",
            "4a07fb4c38b509c2",
            "1aa79f40276ef4a7",
            "5bfebf877cb6658a",
            "a68d43c7b4646604"
        ],
        "x": 104,
        "y": 159,
        "w": 772,
        "h": 82
    },
    {
        "id": "a2ae9a08fd4b0a90",
        "type": "group",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Do not want to automatically write the TiddlyWiki twiki database \\n to disk with every update? \\n  just disconnect the wire \\n \\n This includes updates done in the 'function' nodes too! \\n ",
        "style": {
            "label": true,
            "label-position": "s"
        },
        "nodes": [
            "8741680a85a43754",
            "60af93695972cb17"
        ],
        "x": 164,
        "y": 444,
        "w": 422,
        "h": 140
    },
    {
        "id": "e0350dac670bea64",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "e4c2719e30c99637",
        "name": "Heartbeats track client IDs (a new ID / token occurs when web page reloaded)",
        "style": {
            "label": true,
            "label-position": "n",
            "stroke": "#777777"
        },
        "nodes": [
            "c7aae36c394ac57c",
            "3fa65bfb3f190977",
            "9956e8251c2b37a6",
            "eb3460001d69b98d",
            "2906f48e265052e9",
            "dbfa021da3dc04ca",
            "9ec5ea4d8d2b2542",
            "85f96a4f808488c5",
            "17659a42281ba3f7",
            "96d69fda963f66a2",
            "7393e531a0f6d08e",
            "bf9dc7fbfb3b1106"
        ],
        "x": 234,
        "y": 59,
        "w": 802,
        "h": 362
    },
    {
        "id": "9b88d3454bec6454",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "d1d824ed77b66140",
        "name": "Request client tiddlers",
        "style": {
            "label": true,
            "stroke": "#ffff00"
        },
        "nodes": [
            "2d16349559e708d1",
            "d6044d2db5c9a352",
            "3c2141c2e87ad46a"
        ],
        "x": 54,
        "y": 2379,
        "w": 592,
        "h": 82
    },
    {
        "id": "0d0209599f37e5fd",
        "type": "group",
        "z": "c58e1993cab59996",
        "g": "3d9daca2a6f68b44",
        "name": "Select tiddlers from twiki using filter",
        "style": {
            "label": true
        },
        "nodes": [
            "7f3dc513caf95a47",
            "f863a67c056367c1",
            "68a113f373cb6891",
            "bc00d1525b9d48e3",
            "325145ba78e22609"
        ],
        "x": 154,
        "y": 864,
        "w": 512,
        "h": 122
    },
    {
        "id": "a04cbaa536c3e91d",
        "type": "group",
        "z": "c58e1993cab59996",
        "g": "3d9daca2a6f68b44",
        "name": "Load 'TW Book' twiki with the books content tiddlers on startup",
        "style": {
            "label": true
        },
        "nodes": [
            "bacb619cec794e97",
            "666befd3477d7aba"
        ],
        "x": 194,
        "y": 764,
        "w": 402,
        "h": 82
    },
    {
        "id": "1d4bc70456acd7ba",
        "type": "group",
        "z": "0481506d69936f4f",
        "g": "e1daf0a769b923c0",
        "name": "",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "0c32555e2c9829c1",
            "d1cb8f6bba82cf91",
            "45b27da691ddd601",
            "4e810fa7d9a7b1c4"
        ],
        "x": 144,
        "y": 619,
        "w": 612,
        "h": 82
    },
    {
        "id": "b79d45a9b7037362",
        "type": "group",
        "z": "0481506d69936f4f",
        "g": "e1daf0a769b923c0",
        "name": "Generate TW5-Node-RED plugin",
        "style": {
            "label": true,
            "stroke": "#ffff00"
        },
        "nodes": [
            "732bf9ecdfc9df63",
            "0f50d74a1682b4e9",
            "da7b525e9244bad9",
            "05fe6cb33e33ae93",
            "205fb0492ffcd399",
            "f491cc3db92cc626",
            "35b92a1440e5cc09"
        ],
        "x": 124,
        "y": 719,
        "w": 622,
        "h": 142
    },
    {
        "id": "edee491ab307e8f4",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "3cefbe58652ddd1b",
        "name": "Start 'server' edition on port 8100",
        "style": {
            "label": true,
            "color": "#ffffff",
            "label-position": "n"
        },
        "nodes": [
            "243c87ee76a56c34",
            "b1144c89e281a90e",
            "e2019f74cf4c285b",
            "2cc16f6fae2a05c8"
        ],
        "x": 314,
        "y": 1109,
        "w": 512,
        "h": 142
    },
    {
        "id": "bfac12ca49095e92",
        "type": "group",
        "z": "fb90098a1998250c",
        "g": "a24216bd24717c1e",
        "name": " \\n Bearer token, Authentication, and Authorization \\n ",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "54d80eaa9d3610c7",
            "ac5ce25a67192096",
            "3acd500998d87b22",
            "b58a5472ed70d8b5",
            "86514e0ce0668cbe",
            "750bd45bece7449a",
            "bd6c95b1f4f345ec",
            "362f3c37d0b16030",
            "cfee1305fe93f1c8",
            "509b906f53cc0bc2",
            "cac2c9295125e3b0"
        ],
        "x": 99,
        "y": 67,
        "w": 767,
        "h": 384
    },
    {
        "id": "530c27cac770eeb4",
        "type": "group",
        "z": "fb90098a1998250c",
        "g": "a24216bd24717c1e",
        "name": "On-line Requests",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "49d895b99b92ec84",
            "4187e021402a55de",
            "7396102619538ddb",
            "4cd957658dc2bd9c",
            "98189b2afd7d3e72"
        ],
        "x": 54,
        "y": 467,
        "w": 852,
        "h": 154
    },
    {
        "id": "581538b733302aa5",
        "type": "group",
        "z": "fb90098a1998250c",
        "g": "a24216bd24717c1e",
        "name": "Users - TW Database",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "502c174b58244c46",
            "210019cdd0a834d4",
            "24927d6a4e6c3c1a",
            "9b0a95db2e9194f2",
            "1872fb3e9892e498",
            "d24091429b7ee2fe"
        ],
        "x": 94,
        "y": 669,
        "w": 767,
        "h": 152
    },
    {
        "id": "e58841decd532a3e",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "6fc117d699260e4c",
        "name": "Start 'server' edition on port 8200",
        "style": {
            "label": true,
            "color": "#ffffff",
            "label-position": "n"
        },
        "nodes": [
            "587ddba2eb229948",
            "7f9494f20c905686",
            "3c37f635abd563e8",
            "96147524c86cc1d8"
        ],
        "x": 294,
        "y": 1359,
        "w": 552,
        "h": 142
    },
    {
        "id": "759dce2ea0c90c1e",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "1b95b4adfdeca38e",
        "name": "Start 'twrepl' with access to codebase of the complete system",
        "style": {
            "label": true,
            "color": "#ffffff",
            "label-position": "n"
        },
        "nodes": [
            "265506fdf2a603b4",
            "939ecaec38f87e99",
            "6f8d6020ac601508"
        ],
        "x": 284,
        "y": 789,
        "w": 572,
        "h": 82
    },
    {
        "id": "e7370f616716a124",
        "type": "group",
        "z": "304338a4b9f89088",
        "g": "04304cacc22dfd2b",
        "name": "",
        "style": {
            "label": true,
            "color": "#ffffff",
            "stroke": "#ffff00"
        },
        "nodes": [
            "1ae4b7850095e251",
            "21d435e3c4987e1a",
            "14477b22c78480b3",
            "ae33c705716b22fa",
            "407b772f0f144186",
            "7d2e58723eb09955"
        ],
        "x": 84,
        "y": 459,
        "w": 702,
        "h": 228
    },
    {
        "id": "8549cd6c5c10aa65",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "1b95b4adfdeca38e",
        "name": "! ! ! SECURITY RISK ! ! ! \\n Submit commands to REPL \\n Disable in production",
        "style": {
            "label": true,
            "color": "#ffffff",
            "stroke": "#ff7f7f",
            "fill": "#ff0000",
            "fill-opacity": "0.86",
            "label-position": "n"
        },
        "nodes": [
            "771666859c98bac6",
            "d1b258d56658a434"
        ],
        "x": 394,
        "y": 887,
        "w": 382,
        "h": 114
    },
    {
        "id": "17659a42281ba3f7",
        "type": "group",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "",
        "style": {
            "stroke": "#7f7f7f",
            "label": true
        },
        "nodes": [
            "4c9c46b76b72965f",
            "5f3f98f37ba41eb1"
        ],
        "x": 424,
        "y": 239,
        "w": 362,
        "h": 82
    },
    {
        "id": "7d2e58723eb09955",
        "type": "group",
        "z": "304338a4b9f89088",
        "g": "e7370f616716a124",
        "name": "When MWS - Starts watching MWS recipe",
        "style": {
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "654ee70ffdb7a36c",
            "c0d81093110cbce5"
        ],
        "x": 134,
        "y": 579,
        "w": 532,
        "h": 82
    },
    {
        "id": "7c48a995b12f0315",
        "type": "junction",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "e5eea88792642a29"
            ]
        ]
    },
    {
        "id": "90a649b2382b649c",
        "type": "junction",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "x": 370,
        "y": 380,
        "wires": [
            [
                "7c48a995b12f0315"
            ]
        ]
    },
    {
        "id": "afd0070808d7b77f",
        "type": "junction",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "x": 710,
        "y": 380,
        "wires": [
            [
                "0d798af067a77746"
            ]
        ]
    },
    {
        "id": "768032b1dcfcd148",
        "type": "junction",
        "z": "e659339e762fe7e5",
        "x": 280,
        "y": 230,
        "wires": [
            [
                "7ebdfee5ed0fbe70"
            ]
        ]
    },
    {
        "id": "8741680a85a43754",
        "type": "junction",
        "z": "ab56271e77c6f866",
        "g": "a2ae9a08fd4b0a90",
        "x": 190,
        "y": 470,
        "wires": [
            []
        ]
    },
    {
        "id": "60af93695972cb17",
        "type": "junction",
        "z": "ab56271e77c6f866",
        "g": "a2ae9a08fd4b0a90",
        "x": 560,
        "y": 470,
        "wires": [
            []
        ]
    },
    {
        "id": "7ebdfee5ed0fbe70",
        "type": "junction",
        "z": "e659339e762fe7e5",
        "x": 650,
        "y": 230,
        "wires": [
            [
                "d3ae53f445977d03"
            ]
        ]
    },
    {
        "id": "409781d734b49ba9",
        "type": "junction",
        "z": "e659339e762fe7e5",
        "x": 420,
        "y": 140,
        "wires": [
            [
                "9a19c39ceaa81097"
            ]
        ]
    },
    {
        "id": "e9c96a17d3f117a8",
        "type": "junction",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "628aab7aaefe715e",
                "f69ecb30fb65d53c"
            ]
        ]
    },
    {
        "id": "2eca80b06e50c439",
        "type": "switch",
        "z": "c58e1993cab59996",
        "name": "select \\n palette",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dark",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "light",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "fire",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "ff71c81f060c1616"
            ],
            [
                "2a2120ce0bec323d"
            ],
            [
                "c31d25fb62ca326f"
            ]
        ]
    },
    {
        "id": "e49174688546a04d",
        "type": "link in",
        "z": "c58e1993cab59996",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 175,
        "y": 280,
        "wires": [
            [
                "2eca80b06e50c439"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "ff71c81f060c1616",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "Dark",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/palette\n\n$:/palettes/Twilight",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "f80060ac36d89c4b"
            ]
        ]
    },
    {
        "id": "2a2120ce0bec323d",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "Light",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/palette\n\n$:/palettes/SolarizedLight",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "f80060ac36d89c4b"
            ]
        ]
    },
    {
        "id": "c31d25fb62ca326f",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "Dev Fire",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/palettes/Dev Fire\ncreated: 20160302142923732\ncreator: Stephen\ndescription: Dark and Bold\nmodified: 20160427120948086\nmodifier: Stephen\nname: Dev Fire\ntags: $:/tags/Palette\ntype: application/x-tiddler-dictionary\n\nalert-background: #9d7d00\nalert-border: #8e7924\nalert-highlight: #881122\nalert-muted-foreground: #b99e2f\nbackground: #000000\nblockquote-bar: <<colour muted-foreground>>\nbutton-background: #3a2f2f\nbutton-foreground: #ffbf00\nbutton-border: #666666\ncode-background: #3a2f2f\ncode-border: #ffbf00\ncode-foreground: #fdf3d9\ndirty-indicator: #ff0000\ndownload-background: #34c734\ndownload-foreground: <<colour foreground>>\ndragger-background: <<colour foreground>>\ndragger-foreground: <<colour background>>\ndropdown-background: <<colour background>>\ndropdown-border: <<colour muted-foreground>>\ndropdown-tab-background-selected: #ffffff\ndropdown-tab-background: #ececec\ndropzone-background: rgba(0,200,0,0.7)\nexternal-link-background-hover: inherit\nexternal-link-background-visited: inherit\nexternal-link-background: inherit\nexternal-link-foreground-hover: inherit\nexternal-link-foreground-visited: #ff0000\nexternal-link-foreground: #ffbf00\nforeground: #ffdfaa\nmessage-background: #ecf2ff\nmessage-border: #cfd6e6\nmessage-foreground: #547599\nmodal-backdrop: <<colour pre-background>>\nmodal-background: <<colour background>>\nmodal-border: #999999\nmodal-footer-background: <<colour muted-background>>\nmodal-footer-border: #dddddd\nmodal-header-border: #eeeeee\nmuted-foreground: #Ffbf00\nnotification-background: <<colour pre-background>>\nnotification-border: #999999\npage-background: #000000\npre-background: #3a2f2f\npre-border: #cccccc\nprimary: #5778b8\nsidebar-button-foreground: #Ffbf00\nsidebar-controls-foreground-hover: <<colour sidebar-button-foreground>>\nsidebar-controls-foreground: #aaaaaa\nsidebar-foreground-shadow: \nsidebar-foreground: #ffbf00\nsidebar-muted-foreground-hover: #444444\nsidebar-muted-foreground: #c0c0c0\nsidebar-tab-background-selected: #ffbf00\nsidebar-tab-background: #604800\nsidebar-tab-border-selected: <<colour tab-border-selected>>\nsidebar-tab-border: #ab0318\nsidebar-tab-divider: #ab0318\nsidebar-tab-foreground-selected: #000000\nsidebar-tab-foreground: #ffd964\nsidebar-tiddler-link-foreground-hover: #464646\nsidebar-tiddler-link-foreground: #ffbf00\nsite-title-foreground: #ffca95\nstatic-alert-foreground: #aaaaaa\ntab-background-selected: #ffbf00\ntab-background: #604800\ntab-border-selected: #ffbf00\ntab-border: #ff9b6a\ntab-divider: #ff9b6a\ntab-foreground-selected: #000000\ntab-foreground: #ffd964\ntable-border: #ab0318\ntable-footer-background: #a8a8a8\ntable-header-background: #710210\ntag-background: #ec6\ntag-foreground: #ffffff\ntiddler-background: <<colour background>>\ntiddler-border: #b08500\ntiddler-controls-foreground-hover: <<colour sidebar-button-foreground>>\ntiddler-controls-foreground-selected: #2d2d2d\ntiddler-controls-foreground: <<colour tiddler-border>>\ntiddler-editor-background: <<colour background>>\ntiddler-editor-border-image: #ffffff\ntiddler-editor-border: #cccccc\ntiddler-editor-fields-even: #85a585\ntiddler-editor-fields-odd: #5f815f\ntiddler-info-background: #710210\ntiddler-info-border: #dddddd\ntiddler-info-tab-background: #f8f8f8\ntiddler-link-background: <<colour background>>\ntiddler-link-foreground: #fe9901\ntiddler-subtitle-foreground: #ffbf00\ntiddler-title-foreground: <<colour site-title-foreground>>\ntoolbar-new-button: \ntoolbar-options-button: \ntoolbar-save-button: \ntoolbar-info-button: \ntoolbar-edit-button: \ntoolbar-close-button: \ntoolbar-delete-button: \ntoolbar-cancel-button: \ntoolbar-done-button: \nuntagged-background: #999999\nvery-muted-foreground: #888888\n\n+======+\ntitle: $:/palette\n\n$:/palettes/Dev Fire",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "f80060ac36d89c4b"
            ]
        ]
    },
    {
        "id": "f80060ac36d89c4b",
        "type": "link out",
        "z": "c58e1993cab59996",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 575,
        "y": 280,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "44e066ca088db659",
        "type": "switch",
        "z": "c58e1993cab59996",
        "name": "hello",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^hello$",
                "vt": "str",
                "case": true
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 60,
        "wires": [
            [
                "4d1fe7705b6bdeeb"
            ]
        ]
    },
    {
        "id": "b13da77f6d60b38f",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 520,
        "y": 60,
        "wires": [
            [
                "425a72841789949c"
            ]
        ]
    },
    {
        "id": "4d1fe7705b6bdeeb",
        "type": "edit-tiddlers",
        "z": "c58e1993cab59996",
        "name": "",
        "topic": "",
        "tofield": "payload",
        "template": "title: Hello World!\ntags: hello\nmustache: yes\n\nHi {% network.user.username %} - This tiddler is from the server ;)\n",
        "x": 370,
        "y": 60,
        "wires": [
            [
                "b13da77f6d60b38f"
            ]
        ]
    },
    {
        "id": "3bfcedbc0435c9c3",
        "type": "switch",
        "z": "c58e1993cab59996",
        "name": "better hello",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "better hello",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "34faacb22d67d2b0"
            ]
        ]
    },
    {
        "id": "34faacb22d67d2b0",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Hello {% network.user.username %}!\ntags: hello\nmustache: yes\n\nThis 'Hello World' uses less Nodes!\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 480,
        "y": 100,
        "wires": [
            [
                "425a72841789949c"
            ]
        ]
    },
    {
        "id": "d6ea0c2ee9926639",
        "type": "link in",
        "z": "c58e1993cab59996",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 125,
        "y": 60,
        "wires": [
            [
                "44e066ca088db659",
                "3bfcedbc0435c9c3"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "425a72841789949c",
        "type": "link out",
        "z": "c58e1993cab59996",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 665,
        "y": 60,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "7f3dc513caf95a47",
        "type": "switch",
        "z": "c58e1993cab59996",
        "g": "0d0209599f37e5fd",
        "name": "book",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "book",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 925,
        "wires": [
            [
                "68a113f373cb6891",
                "325145ba78e22609"
            ]
        ]
    },
    {
        "id": "f863a67c056367c1",
        "type": "link in",
        "z": "c58e1993cab59996",
        "g": "0d0209599f37e5fd",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 195,
        "y": 925,
        "wires": [
            [
                "7f3dc513caf95a47"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "68a113f373cb6891",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "0d0209599f37e5fd",
        "name": "Chapter 1 tiddlers",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "TW Book",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 470,
        "y": 945,
        "wires": [
            [
                "bc00d1525b9d48e3"
            ]
        ]
    },
    {
        "id": "bc00d1525b9d48e3",
        "type": "link out",
        "z": "c58e1993cab59996",
        "g": "0d0209599f37e5fd",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 625,
        "y": 925,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "325145ba78e22609",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "0d0209599f37e5fd",
        "name": "[[1. Introduction]]",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "TW Book",
        "filter": "[[1. Introduction]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: TiddlyWiki Book\n\n> [[TiddlyWiki Book Introduction|1. Introduction]]\n@@color:pink;\n> The book is published by Luis Javier González Caballero [[kewapoon|https://github.com/kewapo]] on GitHub at https://github.com/kewapo/The-Book-Wiki. There are more chapters for those interested. TW5-Node-RED is not associated with the package - full credits to Luis Javier González Caballero for sharing.\n@@\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 470,
        "y": 905,
        "wires": [
            [
                "bc00d1525b9d48e3"
            ]
        ]
    },
    {
        "id": "bacb619cec794e97",
        "type": "inject",
        "z": "c58e1993cab59996",
        "g": "a04cbaa536c3e91d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": ".1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 805,
        "wires": [
            [
                "666befd3477d7aba"
            ]
        ]
    },
    {
        "id": "666befd3477d7aba",
        "type": "to-twiki",
        "z": "c58e1993cab59996",
        "g": "a04cbaa536c3e91d",
        "name": "",
        "twikiName": "TW Book",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "public/tiddlers/book/chapter01",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.server.tiddlers",
        "useListener": false,
        "filter": "[[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": true,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 500,
        "y": 805,
        "wires": [
            []
        ]
    },
    {
        "id": "90ab04c3ce5393e8",
        "type": "link in",
        "z": "c58e1993cab59996",
        "g": "b37cb4ef8029f994",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 125,
        "y": 420,
        "wires": [
            [
                "b210f724bebd1948"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "b210f724bebd1948",
        "type": "switch",
        "z": "c58e1993cab59996",
        "g": "b37cb4ef8029f994",
        "name": "sample",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^sample .*",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 420,
        "wires": [
            [
                "68553a08235eb1d7"
            ]
        ]
    },
    {
        "id": "68553a08235eb1d7",
        "type": "change",
        "z": "c58e1993cab59996",
        "g": "b37cb4ef8029f994",
        "name": "get topic name",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$replace(msg.topic, 'sample ', '')\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 420,
        "wires": [
            [
                "54f166a7f4f3a368"
            ]
        ]
    },
    {
        "id": "54f166a7f4f3a368",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "b37cb4ef8029f994",
        "name": "Generate sample",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Topic '{%topic%}'\nmustache: yes\ntopicbtn: <$button actions=\"<<node-red '{%topic%}'>>\"> {%topic%} </$button>\ntopic: {%topic%}\n\n<$button actions=\"<<node-red '{%topic%}'>>\"> {%topic%} </$button>\n\n<$macrocall $name=\"copy-to-clipboard\" src={{!!topicbtn}}/>\n\n```\n<$button actions=\"<<node-red '{%topic%}'>>\"> {%topic%} </$button>\n```\n\n---\n\nTopic: <$edit-text field=topic class=poc2go-edit-text />\n\n<$set name=topic value={{!!topic}}>\n<$button actions=\"<<node-red 'sample $(topic)$'>>\"> Generate Sample </$button>\n</$set>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "704002cca88ec103"
            ]
        ]
    },
    {
        "id": "704002cca88ec103",
        "type": "link out",
        "z": "c58e1993cab59996",
        "g": "b37cb4ef8029f994",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 695,
        "y": 420,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "190f4b09096d84e9",
        "type": "switch",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "some pics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "some pics",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 565,
        "wires": [
            [
                "a69da9a11fa9944c"
            ]
        ]
    },
    {
        "id": "a69da9a11fa9944c",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "About some pics",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: About some pics\ntags: pics\n\n> These images were from an EARLY design of TW5-Node-RED prior to many features and custom nodes. Keep them around for sentimental reasons - If updated with the new nodes these flows would still work ;)\n\nOnly a single `wiki in` node is required to get all the messages from TiddlyWiki clients:\n\n<div style=\"max-width: 600px\">{{single wiki in.png}}</div>\n\nAnother method is to use multiple `wiki in` nodes, which can in some cases can make the\nflows more natural looking and easier to understand. Exporting a flow is also easier and more reliable as can include the `wiki in` node with the export.\n\n<div style=\"max-width: 600px\">{{multi wiki in.png}}</div>\n\nWhen using multiple `wiki in` nodes, care should be taken not to connect two `wiki in` nodes to the same flow. It would still work but the flow would be executed by Node-Red twice - impacting performance.\n\n<div style=\"max-width: 600px\">{{wrong wiki in.png}}</div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 420,
        "y": 565,
        "wires": [
            [
                "dc550f72fb4b0b99"
            ]
        ]
    },
    {
        "id": "dc550f72fb4b0b99",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "images",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "public/tiddlers/images/wikiin",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": true,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 580,
        "y": 565,
        "wires": [
            [
                "8c99b04967d79353"
            ]
        ]
    },
    {
        "id": "679c15ceb725216c",
        "type": "switch",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "same pics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "same pics",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 645,
        "wires": [
            [
                "593346b7484e719c",
                "8f6b83391a5e5c61"
            ]
        ]
    },
    {
        "id": "593346b7484e719c",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "About same pics",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: About same pics\ntags: pics\n\n> These images were from an EARLY design of TW5-Node-RED prior to many features and custom nodes. Keep them around for sentimental reasons - If updated with the new nodes these flows would still work ;)\n\nOnly a single `wiki in` node is required to get all the messages from TiddlyWiki clients:\n\n<div style=\"max-width: 600px\">{{single wiki in.png}}</div>\n\nAnother method is to use multiple `wiki in` nodes, which can in some cases can make the\nflows more natural looking and easier to understand. Exporting a flow is also easier and more reliable as can include the `wiki in` node with the export.\n\n<div style=\"max-width: 600px\">{{multi wiki in.png}}</div>\n\nWhen using multiple `wiki in` nodes, care should be taken not to connect two `wiki in` nodes to the same flow. It would still work but the flow would be executed by Node-Red twice - impacting performance.\n\n<div style=\"max-width: 600px\">{{wrong wiki in.png}}</div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 625,
        "wires": [
            [
                "f4eab1f49fbefa04"
            ]
        ]
    },
    {
        "id": "8f6b83391a5e5c61",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "images",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "public/tiddlers/images/wikiin",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": true,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 665,
        "wires": [
            [
                "f4eab1f49fbefa04"
            ]
        ]
    },
    {
        "id": "8c99b04967d79353",
        "type": "link out",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 675,
        "y": 565,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "f4eab1f49fbefa04",
        "type": "link out",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 575,
        "y": 645,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "5c712f0ce8dca9b2",
        "type": "link in",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 145,
        "y": 565,
        "wires": [
            [
                "190f4b09096d84e9"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "822afd14ac7a2985",
        "type": "link in",
        "z": "c58e1993cab59996",
        "g": "c118b47258277fd0",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 145,
        "y": 645,
        "wires": [
            [
                "679c15ceb725216c"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "e97790cf02ddb28d",
        "type": "debug",
        "z": "c58e1993cab59996",
        "name": "debug msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1120,
        "wires": []
    },
    {
        "id": "247774e5f3ec1d76",
        "type": "get-network",
        "z": "c58e1993cab59996",
        "name": "",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "payload",
        "file": "public/testit/test.tid",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 430,
        "y": 1070,
        "wires": [
            [
                "cda87663ace72d4b",
                "e97790cf02ddb28d"
            ]
        ]
    },
    {
        "id": "432685b6a22a9f0c",
        "type": "link in",
        "z": "c58e1993cab59996",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 95,
        "y": 1070,
        "wires": [
            [
                "a9df6e178df88c8c"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "ac5a5c0c6c3c6c8a",
        "type": "link out",
        "z": "c58e1993cab59996",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 715,
        "y": 1070,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "cda87663ace72d4b",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: test network nodes\nmustache: yes\n\nThe tiddlers sent from client are:\n\n{%#payload%}\n[[{% &title %}]]<br>\n{%/payload%}",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 600,
        "y": 1070,
        "wires": [
            [
                "ac5a5c0c6c3c6c8a"
            ]
        ]
    },
    {
        "id": "a9df6e178df88c8c",
        "type": "switch",
        "z": "c58e1993cab59996",
        "name": "test network nodes",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "test network nodes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 1070,
        "wires": [
            [
                "247774e5f3ec1d76"
            ]
        ]
    },
    {
        "id": "01b3f687e63b3e4b",
        "type": "to-twiki",
        "z": "c58e1993cab59996",
        "name": "client.tiddlers to twiki",
        "twikiName": "Testit",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": true,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": true,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 400,
        "y": 1210,
        "wires": [
            [
                "c4207496ef76b641"
            ]
        ]
    },
    {
        "id": "9755a151d273ca6a",
        "type": "switch",
        "z": "c58e1993cab59996",
        "name": "test to-twiki",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "test to-twiki",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 1210,
        "wires": [
            [
                "01b3f687e63b3e4b"
            ]
        ]
    },
    {
        "id": "033ee6c5fd9b2921",
        "type": "link in",
        "z": "c58e1993cab59996",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 85,
        "y": 1210,
        "wires": [
            [
                "9755a151d273ca6a"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "b396fbd59ee28476",
        "type": "link out",
        "z": "c58e1993cab59996",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 715,
        "y": 1270,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "e2449bdf9e7bed88",
        "type": "debug",
        "z": "c58e1993cab59996",
        "name": "show twikis in debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "twikis",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1330,
        "wires": []
    },
    {
        "id": "c4207496ef76b641",
        "type": "link call",
        "z": "c58e1993cab59996",
        "name": "",
        "links": [
            "2ffe59e5768f9620"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 380,
        "y": 1270,
        "wires": [
            [
                "e2449bdf9e7bed88",
                "c37198328f45e1b8"
            ]
        ]
    },
    {
        "id": "c37198328f45e1b8",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: test to twiki\nmustache: yes\n\nThe tiddlers in 'testit' twiki from client are:\n\n{%#twikis.Testit%}\n[[{% &title %}]]<br>\n{%/twikis.Testit%}",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 580,
        "y": 1270,
        "wires": [
            [
                "b396fbd59ee28476"
            ]
        ]
    },
    {
        "id": "41c6e64f58978218",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "name": "$:/SiteSubtitle",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/SiteSubtitle\n\n{{$:/temp/tw5-node-red/netstat}}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "9630213056cdc89a"
            ]
        ]
    },
    {
        "id": "b4d03f179184dc54",
        "type": "switch",
        "z": "c58e1993cab59996",
        "name": "get subtitle",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get subtitle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "41c6e64f58978218"
            ]
        ]
    },
    {
        "id": "f3bc83f894bc836e",
        "type": "link in",
        "z": "c58e1993cab59996",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 175,
        "y": 180,
        "wires": [
            [
                "b4d03f179184dc54"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "9630213056cdc89a",
        "type": "link out",
        "z": "c58e1993cab59996",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 585,
        "y": 180,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "7c6ac8311b11bc2a",
        "type": "link in",
        "z": "c58e1993cab59996",
        "g": "1e53b7521065bd3a",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 135,
        "y": 1450,
        "wires": [
            [
                "91fad1e91044c358"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "d1764b3bc58cf21d",
        "type": "link out",
        "z": "c58e1993cab59996",
        "g": "1e53b7521065bd3a",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 605,
        "y": 1450,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "91fad1e91044c358",
        "type": "switch",
        "z": "c58e1993cab59996",
        "g": "1e53b7521065bd3a",
        "name": "welcome toc",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "welcome toc internal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "welcome toc external",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 1450,
        "wires": [
            [
                "cdaca8e53cf91ee8"
            ],
            [
                "e503947ca0703e79"
            ]
        ]
    },
    {
        "id": "cdaca8e53cf91ee8",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "1e53b7521065bd3a",
        "name": "internal-nav TOC",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: Intro\n\n<$macrocall\n\t$name=\"toc-tabbed-internal-nav\"\n\ttag=\"TableOfContents\"\n\ttemplate=\"$:/poc2go/ui/ViewTemplate/body\"\n\tselectedTiddler=\"$:/poc2go/toc/selectedTiddler\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>Missing tiddler.</p>\"\n/>\n+======+\ntitle: TOC buttons\n\n<$button style=\"font-size: .8em; border-radius: 8px;\" actions=\"<<node-red 'twsync site'>>\"> Refresh </$button>\n<$button style=\"font-size: .8em; border-radius: 8px;\" actions=\"<<node-red 'welcome toc external'>>\"> external nav </$button>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 450,
        "y": 1430,
        "wires": [
            [
                "d1764b3bc58cf21d"
            ]
        ]
    },
    {
        "id": "e503947ca0703e79",
        "type": "set-network",
        "z": "c58e1993cab59996",
        "g": "1e53b7521065bd3a",
        "name": "external-nav TOC",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: Intro\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"TableOfContents\"\n\ttemplate=\"$:/poc2go/ui/ViewTemplate/body\"\n\tselectedTiddler=\"$:/poc2go/toc/selectedTiddler\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>Missing tiddler.</p>\"\n/>\n+======+\ntitle: TOC buttons\n\n<$button style=\"font-size: .8em; border-radius: 8px;\" actions=\"<<node-red 'twsync site'>>\"> Refresh </$button>\n<$button style=\"font-size: .8em; border-radius: 8px;\" actions=\"<<node-red 'welcome toc internal'>>\"> internal nav </$button>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 450,
        "y": 1470,
        "wires": [
            [
                "d1764b3bc58cf21d"
            ]
        ]
    },
    {
        "id": "c2642e3fa442ca65",
        "type": "uibuilder",
        "z": "eb845b8cbc7ac49a",
        "g": "e4c2719e30c99637",
        "name": "Inbound \\n ",
        "topic": "",
        "url": "svr",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.4.1",
        "showMsgUib": false,
        "x": 100,
        "y": 134,
        "wires": [
            [
                "3fa65bfb3f190977"
            ],
            [
                "379f3550af8b837e"
            ]
        ]
    },
    {
        "id": "4c9c46b76b72965f",
        "type": "link out",
        "z": "eb845b8cbc7ac49a",
        "g": "17659a42281ba3f7",
        "name": "From Client",
        "mode": "link",
        "links": [
            "24408524e1d4766d",
            "4d92fe16a1cdc7af",
            "953ae984b4f4c06e",
            "9da0d9942e6c2fc1",
            "b6d912c02aed86c4",
            "cf4153896f871479",
            "d1cb8f6bba82cf91",
            "d6ea0c2ee9926639",
            "de29b90b6878e330",
            "e1182f32882a4acc",
            "e49174688546a04d",
            "f863a67c056367c1",
            "5c712f0ce8dca9b2",
            "822afd14ac7a2985",
            "f3bc83f894bc836e",
            "90ab04c3ce5393e8",
            "30c77c05be7866f3",
            "dd5ea46f096963b9",
            "f15b36736dfbab83",
            "7d181c09e1cbb823",
            "20bdec5d39a32ed9",
            "1bb0c6fc5d4b21c0",
            "b475506f1c04a454",
            "fb747f122378fdb3",
            "821955a316a5b4d1",
            "b3f3017b726e9d6d",
            "432685b6a22a9f0c",
            "033ee6c5fd9b2921",
            "6264a9cb314478e8",
            "30d1b206b8634711",
            "4bfb1be4b8167a4b",
            "7df426b3cbeb4f44",
            "3ba672d713e44792",
            "082166158d46af41",
            "7c6ac8311b11bc2a",
            "f24e0c3fe3980b8a",
            "e368bd6862eeba29",
            "4187e021402a55de",
            "9321e75d118ca4af",
            "b27ea02bc203e5f5",
            "a5a15f950dcbf5eb",
            "1f09a9e28b57b394",
            "8c82e7455a92d9d0",
            "b3f1b086fcd9e11d",
            "9e04bbecb2bb7c33",
            "cbaa14bc051e3edb",
            "3c3235632a2801e6",
            "193b99040d04db3d",
            "6f22ba451b7f1160"
        ],
        "x": 520,
        "y": 280,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg",
        "l": true
    },
    {
        "id": "5f3f98f37ba41eb1",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "17659a42281ba3f7",
        "name": "To Client",
        "links": [
            "0ce5729373969295",
            "123b82e57831527e",
            "22dee6fb410a27bf",
            "35b7aaedbbb217c4",
            "425a72841789949c",
            "45b27da691ddd601",
            "6a40ed1c79cf46ea",
            "7b92b0207a3e0740",
            "8c341caadf2b0cc0",
            "8c99b04967d79353",
            "bc00d1525b9d48e3",
            "f4eab1f49fbefa04",
            "f71b3b25d6865f7c",
            "f80060ac36d89c4b",
            "9630213056cdc89a",
            "8a0a947dc3743e87",
            "704002cca88ec103",
            "f0f050fbab58af8a",
            "ba2b1aab05d32cb7",
            "192c839a1476110a",
            "80f6cc12c651bec8",
            "b943f50af5e3f0df",
            "b4e52cdc03846635",
            "2c1f3f9583e66a3b",
            "e90ca709ace454ef",
            "2b699ce7937556b8",
            "70e704d96f1c9db8",
            "ac5a5c0c6c3c6c8a",
            "b396fbd59ee28476",
            "a786cadcaaebc48c",
            "7b9e83c8c7bad25c",
            "34a39a844e51115d",
            "965579dd498a4131",
            "3439dbc165a1862f",
            "c0f8a521d6440031",
            "d1764b3bc58cf21d",
            "036335366159e325",
            "961d509e5c6ff471",
            "7ad2abd9eaa5de87",
            "ac5ce25a67192096",
            "d24091429b7ee2fe",
            "e131c5283f01c093",
            "d768dd2a6fd581b5",
            "ad4f9aefd31ecdb2",
            "c1667f9bd1181880",
            "5652efdb88423597",
            "2bda46117159af2a",
            "e8d74aa808633faa",
            "7301de8d5d4d39eb",
            "ea95423b40b2db5f",
            "c46b10628a2229d2"
        ],
        "x": 700,
        "y": 280,
        "wires": [
            [
                "dbfa021da3dc04ca"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg",
        "l": true
    },
    {
        "id": "c7aae36c394ac57c",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "Connect & \\n Bearer token",
        "func": "// Client connection info gathered during heartbeat processing\nconst $tw = global.get('$tw');\nconst connectionDb = global.get('twikis').ConnectionDb;\n\n// Generates a JWT token\nfunction genToken(text) {\n    let sweet = { spot: text };\n    const jwt = global.get('jwt');\n    return jwt.sign(sweet, 'shhhhh');\n}\n\n// if wish to decode the token would use:\n// var decoded = jwt.verify(token, 'shhhhh');\n// console.dir(decoded); // bar\n\n// Client Id remains the same until browser reloads page\nvar clientIds = global.get('clientIds');\nvar cId = msg.network.meta._clientid;\n\n// Set the token to be stored by the client\nconst clientStore = msg.network.meta.tiddlers.find((tiddler) => tiddler.title === '$:/temp/tw5-node-red/store');\nif (!clientStore) {\n    throw new Error('Tiddler $:/temp/tw5-node-red/store not present for bearer token')\n}\n\n// Initial connection so generate default values\n// Send msg for further processing of new connections\nif (cId && !clientIds[cId]) {\n    const randomtext = cId;\n    clientIds[cId] = {\n        clientId: cId,\n        userid: '', // Set when authenticated\n        socketId: msg._socketId,\n        auth: {\n            _id: randomtext,\n            _token: genToken(randomtext),\n            authorized: false,\n        }\n    }\n\n    // the server's socket id for this connection\n    var connectDbTiddler = JSON.parse(connectionDb.getTiddlersAsJson(`[[${msg._socketId}]]`));\n    if (connectDbTiddler.length === 0) {\n        throw new Error('Connect ConnectionDb Tiddler not present for updates');\n    }\n\n    clientStore.token = clientIds[cId].auth._token;\n    clientStore.socketId = msg._socketId;\n    clientStore.clientid = cId;\n\n    connectDbTiddler[0].tw5clientid = cId;\n    connectDbTiddler[0].tags = cId;\n    connectionDb.addTiddler(connectDbTiddler[0]);\n    // Send to security system to finish processing first message\n    node.send([null, msg]);\n}\n\n// Insure socket Id is correct (due to reconnects)\nif (clientIds[cId].socketId !== msg._socketId) {\n//   node.log(`Client switching from socket ${clientIds[cId].socketId}`);\n//   node.log(` to socket ${msg._socketId}`);\n    // Remove stale ConnectionDb tiddler with old socket id\n    connectionDb.deleteTiddler(clientIds[cId].socketId);\n    \n    // Get the new ConnectionDb tiddler - created by tab 'Databases' -> 'ConnectionDb' flow \n    var connectDbTiddler = JSON.parse(connectionDb.getTiddlersAsJson(`[[${msg._socketId}]]`));\n    if (connectDbTiddler.length === 0) {\n        throw new Error('Reconnect ConnectionDb Tiddler not present for updates');\n    }\n\n    // Update all objects, server and client side\n    clientIds[cId].socketId = msg._socketId\n    clientStore.socketId = msg._socketId;\n    connectDbTiddler[0].tw5clientid = cId;\n    connectDbTiddler[0].tags = cId;\n    connectionDb.addTiddler(connectDbTiddler[0]);\n    // Send Heartbeat reply\n    if (msg.topic === 'heartbeat') {\n        node.send([msg, null]);\n    } else { // Send to security system\n        node.send([null, msg]);\n    }\n}\n\n// Send every msg for further processing\nnode.send([msg, null])\nnode.done()\nreturn;\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "9956e8251c2b37a6"
            ],
            [
                "2906f48e265052e9"
            ]
        ],
        "outputLabels": [
            "heartbeat",
            "get token"
        ],
        "icon": "font-awesome/fa-group"
    },
    {
        "id": "3fa65bfb3f190977",
        "type": "switch",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "heartbeat ping  \\n ⋯ else ⋯ \\n message",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "heartbeat",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 130,
        "wires": [
            [
                "c7aae36c394ac57c"
            ],
            [
                "eb3460001d69b98d"
            ]
        ]
    },
    {
        "id": "9956e8251c2b37a6",
        "type": "uib-sender",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "url": "svr",
        "uibId": "c2642e3fa442ca65",
        "name": "heartbeat pong",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 770,
        "y": 100,
        "wires": []
    },
    {
        "id": "9da0d9942e6c2fc1",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "01567b9b6b2e01a1",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 285,
        "y": 650,
        "wires": [
            [
                "a28b92d7f528218f"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "22dee6fb410a27bf",
        "type": "link out",
        "z": "eb845b8cbc7ac49a",
        "g": "01567b9b6b2e01a1",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 855,
        "y": 650,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "a28b92d7f528218f",
        "type": "switch",
        "z": "eb845b8cbc7ac49a",
        "g": "01567b9b6b2e01a1",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 650,
        "wires": [
            [
                "7cbca5f5615be00e"
            ]
        ]
    },
    {
        "id": "7cbca5f5615be00e",
        "type": "set-network",
        "z": "eb845b8cbc7ac49a",
        "g": "01567b9b6b2e01a1",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Simple Test\n\nThis is a simple test ;)\n\n<div><b>The 'topic' was blank!</b></div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 750,
        "y": 650,
        "wires": [
            [
                "22dee6fb410a27bf"
            ]
        ]
    },
    {
        "id": "681513f781f27975",
        "type": "comment",
        "z": "eb845b8cbc7ac49a",
        "g": "01567b9b6b2e01a1",
        "name": "<= Change the topic \\n               Change the tiddler =>",
        "info": "",
        "x": 550,
        "y": 650,
        "wires": []
    },
    {
        "id": "2d16349559e708d1",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "9b88d3454bec6454",
        "name": "Request client tiddlers",
        "links": [],
        "x": 180,
        "y": 2420,
        "wires": [
            [
                "d6044d2db5c9a352"
            ]
        ],
        "l": true
    },
    {
        "id": "d6044d2db5c9a352",
        "type": "uib-sender",
        "z": "eb845b8cbc7ac49a",
        "g": "9b88d3454bec6454",
        "url": "svr",
        "uibId": "c2642e3fa442ca65",
        "name": "Inquiry",
        "topic": "server.request",
        "passthrough": false,
        "return": true,
        "outputs": 1,
        "x": 370,
        "y": 2420,
        "wires": [
            [
                "3c2141c2e87ad46a"
            ]
        ]
    },
    {
        "id": "3c2141c2e87ad46a",
        "type": "link out",
        "z": "eb845b8cbc7ac49a",
        "g": "9b88d3454bec6454",
        "name": "Client response",
        "mode": "return",
        "links": [],
        "x": 540,
        "y": 2420,
        "wires": [],
        "l": true
    },
    {
        "id": "43382dce74b3010a",
        "type": "link call",
        "z": "eb845b8cbc7ac49a",
        "g": "d1d824ed77b66140",
        "name": "",
        "links": [
            "2d16349559e708d1"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 440,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "fde1fed6e12b5da0",
        "type": "change",
        "z": "eb845b8cbc7ac49a",
        "g": "d1d824ed77b66140",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter",
                "pt": "msg",
                "to": "[[GettingStarted]]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 2340,
        "wires": [
            [
                "43382dce74b3010a"
            ]
        ]
    },
    {
        "id": "9ec5ea4d8d2b2542",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "broadcast to msg.clientid",
        "func": "var clientIds = global.get('clientIds');\n\n// Setup meta data for broadcast and send msg\nif (msg.clientid) {\n     if (msg.clientid === 'all') {\n          var allIds = [];\n          for (let cid in clientIds) {\n               allIds.push(cid);\n          }\n          msg.clientid = allIds;\n     }\n     if (!Array.isArray(msg.clientid)) { msg.clientid = [msg.clientid] }\n\n     msg.network.meta.tiddlers = [];\n     msg.network.client.tiddlers = [];\n     msg.network.client.sender = [];\n     delete msg.network.user;\n     msg.clientid.forEach((id) => {\n          if (clientIds[id]) {\n               msg.network.meta._clientid = id;\n               msg._socketId = clientIds[id].socketId;\n               node.send(msg);\n          }\n     })\n}\nnode.done();\nreturn;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 380,
        "wires": [
            [
                "dbfa021da3dc04ca"
            ]
        ]
    },
    {
        "id": "dbfa021da3dc04ca",
        "type": "change",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "Remove cruft",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "network.user",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "temp",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 330,
        "wires": [
            [
                "bf9dc7fbfb3b1106"
            ]
        ]
    },
    {
        "id": "243c87ee76a56c34",
        "type": "inject",
        "z": "eb845b8cbc7ac49a",
        "g": "edee491ab307e8f4",
        "name": "Startup",
        "props": [
            {
                "p": "commands",
                "v": "[\"--listen\",\"port=8100\"]",
                "vt": "json"
            },
            {
                "p": "syncStartup",
                "v": "Sync Server Started",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 420,
        "y": 1150,
        "wires": [
            [
                "e2019f74cf4c285b"
            ]
        ]
    },
    {
        "id": "b1144c89e281a90e",
        "type": "link call",
        "z": "eb845b8cbc7ac49a",
        "g": "edee491ab307e8f4",
        "name": "",
        "links": [
            "30ce9f775e65e57d"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 700,
        "y": 1210,
        "wires": [
            []
        ]
    },
    {
        "id": "e2019f74cf4c285b",
        "type": "switch",
        "z": "eb845b8cbc7ac49a",
        "g": "edee491ab307e8f4",
        "name": "start sync server?",
        "property": "syncServer",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 1150,
        "wires": [
            [
                "2cc16f6fae2a05c8"
            ]
        ]
    },
    {
        "id": "2cc16f6fae2a05c8",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "edee491ab307e8f4",
        "name": "TiddlyWiki 'server' edition",
        "func": "node.log(`Startup - ${global.get('syncDir')}`);\nglobal.set('syncServer', false);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1210,
        "wires": [
            [
                "b1144c89e281a90e"
            ]
        ]
    },
    {
        "id": "cc84a8e59d36a284",
        "type": "uib-sender",
        "z": "eb845b8cbc7ac49a",
        "g": "e4c2719e30c99637",
        "url": "svr",
        "uibId": "c2642e3fa442ca65",
        "name": "Outboud \\n <svr>",
        "topic": "server.tiddlers",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 1140,
        "y": 410,
        "wires": []
    },
    {
        "id": "2906f48e265052e9",
        "type": "link out",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "to Security System",
        "mode": "link",
        "links": [
            "509b906f53cc0bc2"
        ],
        "x": 780,
        "y": 150,
        "wires": [],
        "l": true
    },
    {
        "id": "eb3460001d69b98d",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "Is authorized?",
        "func": "const $tw = global.get('$tw');\nconst usersDb = global.get('twikis').Users;\nconst allowAnon = global.get(\"allowAnon\");\nconst guestUser = [{\n\t\"title\": \"Guest\",\n\t\"created\": \"20240204032118657\",\n\t\"modified\": \"20240204032213393\",\n\t\"userid\": \"Guest\",\n\t\"username\": \"Guest\",\n\t\"email\": \"guest@example.com\",\n\t\"pwHash\": \"$2b$08$oxvoOGoMFhLiMUJOLdFtIe8xcQlPiXgyltVhEB/pMZMXQMaruniue\"\n}];\n\n// This client\nvar clientIds = global.get('clientIds');\nvar cId = msg.network.meta._clientid;\nvar allowGuest = msg.network.meta.source === 'HTML' || allowAnon ? true : false;\n\n// Set currentTiddler\nmsg.network.client.currentTiddler = msg.network.client.sender[0];\n// Get bearer token and must match\n//  (if server is rebooted or client reconnects - this will throw once\n//   but will be ok for requests thereafter)\nvar found = msg.network.meta.tiddlers.find((tiddler) => tiddler.title === '$:/temp/tw5-node-red/store');\nif (!found) { found = { token: 'this will fail' } }\nif (found.token !== clientIds[cId].auth._token) {\n    msg.error = 'Client/Server bearer token mismatch';\n\tnode.log(msg.error);\n\tnode.warn(msg.error);\n    node.done(); // do not forward the message to the next node\n    return;\n}\n\n// If not Web page and not allowing anonymous access and\n//  connection has not been authorized yet\n// Request a login\nif (!allowGuest && !clientIds[cId].auth.authorized) {\n    node.send(msg); node.done();\n    return;\n}\n\n// Get user from the Users database\nvar userDbTiddler = JSON.parse(usersDb.getTiddlersAsJson(`[[${clientIds[cId].userid}]]`));\n\n// Do not have a user\nif (!allowGuest && userDbTiddler.length === 0) {\n    msg.error = 'User ID Not Found';\n\tclientIds[cId].auth.authorized = false;\n\tnode.send(msg); node.done();\n\treturn;\n}\n\n// If allowing anonymous login\n//  get a copy of the generic 'Guest' tiddler and authorize it\nif (allowGuest && userDbTiddler.length === 0) {\n\tuserDbTiddler = JSON.parse(JSON.stringify(guestUser));   \n\tclientIds[cId].userid = userDbTiddler.userid;\n\tclientIds[cId].auth.authorized = true;\n}\n\n// Add user to message and send to the flows\nmsg.network.user = JSON.parse(JSON.stringify(userDbTiddler[0]));\nnode.send([null, msg]); node.done();\nreturn;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "2906f48e265052e9"
            ],
            [
                "4c9c46b76b72965f"
            ]
        ],
        "outputLabels": [
            "Not authorized",
            "Authorized"
        ]
    },
    {
        "id": "379f3550af8b837e",
        "type": "link out",
        "z": "eb845b8cbc7ac49a",
        "g": "e4c2719e30c99637",
        "name": "ConnectionDb",
        "mode": "link",
        "links": [
            "a03e67d3c6af9466"
        ],
        "x": 140,
        "y": 240,
        "wires": [],
        "l": true
    },
    {
        "id": "85f96a4f808488c5",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "Broadcast msg",
        "links": [
            "04895925eade208c",
            "761190764f5f719c",
            "8ecf386acefd8e7d",
            "f1ef5a7e371b1c7c"
        ],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "9ec5ea4d8d2b2542"
            ]
        ],
        "l": true
    },
    {
        "id": "587ddba2eb229948",
        "type": "inject",
        "z": "eb845b8cbc7ac49a",
        "g": "e58841decd532a3e",
        "name": "Startup",
        "props": [
            {
                "p": "commands",
                "v": "[\"--mws-listen\",\"port=8200\"]",
                "vt": "json"
            },
            {
                "p": "syncStartup",
                "v": "MultiWikiServer Started",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 440,
        "y": 1400,
        "wires": [
            [
                "3c37f635abd563e8"
            ]
        ]
    },
    {
        "id": "7f9494f20c905686",
        "type": "link call",
        "z": "eb845b8cbc7ac49a",
        "g": "e58841decd532a3e",
        "name": "",
        "links": [
            "45d54f170e388b66"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 720,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3c37f635abd563e8",
        "type": "switch",
        "z": "eb845b8cbc7ac49a",
        "g": "e58841decd532a3e",
        "name": "start MWS server?",
        "property": "mwsServer",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 1400,
        "wires": [
            [
                "96147524c86cc1d8"
            ]
        ]
    },
    {
        "id": "96147524c86cc1d8",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "e58841decd532a3e",
        "name": "TiddlyWiki 'multiwikiserver' edition",
        "func": "node.log(`Startup - ${global.get('mwsDir')}`);\nglobal.set('mwsServer', false);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "7f9494f20c905686"
            ]
        ]
    },
    {
        "id": "265506fdf2a603b4",
        "type": "inject",
        "z": "eb845b8cbc7ac49a",
        "g": "759dce2ea0c90c1e",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 390,
        "y": 830,
        "wires": [
            [
                "6f8d6020ac601508"
            ]
        ]
    },
    {
        "id": "939ecaec38f87e99",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "759dce2ea0c90c1e",
        "name": "Update REPL",
        "func": "const twrepl = global.get('twrepl');\ntwrepl.startup(global);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 830,
        "wires": [
            []
        ]
    },
    {
        "id": "6f8d6020ac601508",
        "type": "switch",
        "z": "eb845b8cbc7ac49a",
        "g": "759dce2ea0c90c1e",
        "name": "startup REPL?",
        "property": "startupRepl",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 560,
        "y": 830,
        "wires": [
            [
                "939ecaec38f87e99"
            ]
        ]
    },
    {
        "id": "771666859c98bac6",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "8549cd6c5c10aa65",
        "name": "To REPL",
        "links": [
            "134e6cf970918b0e"
        ],
        "x": 480,
        "y": 960,
        "wires": [
            [
                "d1b258d56658a434"
            ]
        ],
        "l": true
    },
    {
        "id": "d1b258d56658a434",
        "type": "function",
        "z": "eb845b8cbc7ac49a",
        "g": "8549cd6c5c10aa65",
        "name": "Command to REPL",
        "func": "const twrepl = global.get('twrepl');\ntwrepl.submit(msg.repl.cmd, msg.repl.text);\n\nreturn msg;",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 960,
        "wires": []
    },
    {
        "id": "96d69fda963f66a2",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "Message to flows",
        "links": [
            "185083fbec1aa799",
            "86514e0ce0668cbe",
            "9b0a95db2e9194f2",
            "dbf7e878fa564983",
            "edc0b050e5af6de4",
            "55476bca421eb07a",
            "c0d81093110cbce5"
        ],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "eb3460001d69b98d"
            ]
        ],
        "l": true
    },
    {
        "id": "7393e531a0f6d08e",
        "type": "link in",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "Web to flows",
        "links": [
            "76268e5a03d9efbf"
        ],
        "x": 330,
        "y": 280,
        "wires": [
            [
                "4c9c46b76b72965f"
            ]
        ],
        "l": true
    },
    {
        "id": "bf9dc7fbfb3b1106",
        "type": "switch",
        "z": "eb845b8cbc7ac49a",
        "g": "e0350dac670bea64",
        "name": "channel router",
        "property": "network.meta.location.pathname",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/web/page/",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 380,
        "wires": [
            [
                "8a0eb26ebf7e9961"
            ],
            [
                "cc84a8e59d36a284"
            ]
        ]
    },
    {
        "id": "8a0eb26ebf7e9961",
        "type": "uib-sender",
        "z": "eb845b8cbc7ac49a",
        "g": "e4c2719e30c99637",
        "url": "web",
        "uibId": "69aa7eb35d63cab7",
        "name": "Outbound \\n <web>",
        "topic": "server.tiddlers",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 1140,
        "y": 350,
        "wires": []
    },
    {
        "id": "509b906f53cc0bc2",
        "type": "link in",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Security System",
        "links": [
            "2906f48e265052e9",
            "98189b2afd7d3e72"
        ],
        "x": 205,
        "y": 140,
        "wires": [
            [
                "b58a5472ed70d8b5"
            ]
        ],
        "l": true
    },
    {
        "id": "54d80eaa9d3610c7",
        "type": "function",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Authenticate",
        "func": "// Authorize a sign-in from the login tiddler\nconst bcrypt = global.get('bcrypt');\nconst usersDb = global.get('twikis').Users;\nconst userdata = msg.network.client.sender[0];\n\n// Assume will be getting an error\nmsg.topic = 'login';\nmsg.network.user = JSON.parse(JSON.stringify(userdata));\ndelete msg.network.user.password;\n\n// Check for required fields\nif (!(userdata.userid && userdata.password)) {\n  msg.error = `All fields with '*' required.`;\n  node.send(msg); node.done();\n  return;\n}\n\nif (/[|[\\]{}].*$/.test(userdata.userid)) {\n  msg.error = `User ID can not contain \\`| [ ] { }\\` (vertical bar, square or curly brackets)`;\n  node.send(msg); node.done();\n  return;\n}\n\n// Look up userid from database\nvar userDbTiddler = JSON.parse(usersDb.getTiddlersAsJson(`[[${userdata.userid}]]`));\n\n// User ID is not found\nif (!userDbTiddler.length) {\n  msg.error = `User ID '${userdata.userid}' Not Found`;\n  node.send(msg); node.done();\n  return;\n}\n\n// Reference the stored user data\nuserDbTiddler = userDbTiddler[0];\n\n// Verify the password\nconst pwValid = await bcrypt.compare(userdata.password, userDbTiddler.pwHash);\nif (!pwValid) {\n  msg.error = 'Password Invalid!';\n  node.send(msg); node.done();\n  return;\n}\n\n\n// Authenticate this client\nvar clientIds = global.get('clientIds');\nvar cId = msg.network.meta._clientid;\nif (cId && clientIds[cId]) {\n  clientIds[cId].userid = userdata.userid;\n  clientIds[cId].auth.authorized = true;\n}\n\n// send authentication success\nmsg.network.user = userDbTiddler;\n\nnode.send([null, msg]);\nreturn;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 150,
        "wires": [
            [
                "86514e0ce0668cbe"
            ],
            [
                "362f3c37d0b16030"
            ]
        ]
    },
    {
        "id": "ac5ce25a67192096",
        "type": "link out",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 790,
        "y": 300,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "3acd500998d87b22",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Request account",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: $:/tw5-node-red/account\nmustache: yes\nuserid: {%network.user.userid%}\npassword: {%network.user.password%}\nusername: {%network.user.username%}\nemail: {%network.user.email%}\n\n!!! Register request\n\n{%#error%}\n<span style=\"color: red; font-size: 1.2em;\">{%.%}</span>\n{%/error%}\n\nThis registration request is a placeholder to be implemented by TW5-Node-RED application developers. See <$button actions=\"<<node-red 'login docs'>>\" class=\"tc-btn-invisible tc-tiddlylink\">Login documentation</$button>\n\n|User ID*|<$edit-text field=\"userid\"/>| Unique string used to sign on |\n|Password*|<$edit-text field=\"password\"/>| password used to sign on |\n|User name*|<$edit-text field=\"username\"/>| Name to display to other users |\n|Email|<$edit-text field=\"email\"/>| optional email address |\n\n<$button actions=\"<<node-red 'register user'>>\"> Create account </$button>\n\n---\n\n```\n{%&temp%}\n```\n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 580,
        "y": 245,
        "wires": [
            [
                "ac5ce25a67192096"
            ]
        ]
    },
    {
        "id": "b58a5472ed70d8b5",
        "type": "switch",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Authenticate \\n Register request \\n Register user \\n Login docs \\n Bearer token \\n otherwise Login request",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "authenticate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "register request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "register user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "login docs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "heartbeat",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 295,
        "y": 280,
        "wires": [
            [
                "54d80eaa9d3610c7"
            ],
            [
                "3acd500998d87b22"
            ],
            [
                "bd6c95b1f4f345ec"
            ],
            [
                "750bd45bece7449a"
            ],
            [
                "cfee1305fe93f1c8"
            ],
            [
                "cac2c9295125e3b0"
            ]
        ]
    },
    {
        "id": "86514e0ce0668cbe",
        "type": "link out",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Message to flows",
        "mode": "link",
        "links": [
            "96d69fda963f66a2",
            "9bda19b8b96ee73e"
        ],
        "x": 750,
        "y": 140,
        "wires": [],
        "l": true
    },
    {
        "id": "750bd45bece7449a",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Sign in help",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Login\nmustache: yes\nuserid: {%network.user.userid%}\nusername: {%network.user.username%}\nemail: {%network.user.email%}\n\n!!! Login documentation\n\n|''userid'':|{{!!userid}}|\n|''username'':|{{!!username}}|\n|''email'':|{{!!email}}|\n\n<$button actions=\"<<node-red 'register request'>>\"> Create Account </$button>\n<$button actions=\"<<node-red 'login'>>\"> Sign in </$button>\n<$button actions=\"<<node-red 'logout'>>\"> Sign off </$button>\n\n> The system is currently under construction - so currently allows a user to enter a username and will authorize them. Can see the system in the Network' and 'Connect' tabs of the flow editor.\n\nThe Authentication and Authorization system is a template for application developers. The flows have been wired  assuming the following steps will be used - but of course can be changed to match authorization requirements.\n\n * Login screen allowing a user to Sign in or Register\n\n * If user Registers - displays the registration screen\n   ** Verify the email - or whatever using to authenticate\n   ** Success - return to login screen\n   ** Fail - return to Registration screen\n * If user Signs in \n   ** Verify the user is Registered\n      ** Success - set the user as authorized\n      ** Fail - returns to Login screen\n\nWhen a user is logged in, user info is added to 'msg.network.user' for every message received and deleted from the message when responding to the user.\n\nif anonymous access is allowed set the allowAnon flag in <span class=\"poc2g-dir\">./settings.js</span> allowing all users to be initially logged in as 'Guest'. Use `<<node-red 'login'>>` to present a login screen.\n\n---\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 325,
        "wires": [
            [
                "ac5ce25a67192096"
            ]
        ]
    },
    {
        "id": "bd6c95b1f4f345ec",
        "type": "link out",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "To Create account",
        "mode": "link",
        "links": [
            "210019cdd0a834d4"
        ],
        "x": 585,
        "y": 285,
        "wires": [],
        "l": true
    },
    {
        "id": "362f3c37d0b16030",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Login success",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/temp/tw5-node-red/authenticated\n\nThis tiddler MUST BE FIRST!!\n\n+======+\ntitle: $:/tw5-node-red/logout\nmustache: yes\nuserid: {%network.user.userid%}\nusername: {%network.user.username%}\nemail: {%network.user.email%}\n\n\n!!! Logout request\n\n{%#error%}\n<span style=\"color: red; font-size: 1.2em;\">{%.%}</span>\n{%/error%}\n\nThis logout request is a placeholder to be implemented by TW5-Node-RED application developers. See <$button actions=\"<<node-red 'login docs'>>\" class=\"tc-btn-invisible tc-tiddlylink\">Login documentation</$button>\n\n|User ID|{{!!userid}}|\n|User name|{{!!username}}|\n\n<div style=\"\">\n<$button actions=\"<<node-red 'logout'>>\"> Sign off </$button>\n</div>\n\n---\n\n+======+\ntitle: $:/tw5-node-red/login\nmustache: yes\nuserid: {%network.user.userid%}\nusername: {%network.user.username%}\nemail: {%network.user.email%}\n\n!!! Authorized\n\nThis authorization success is a placeholder to be implemented by TW5-Node-RED application developers. See <$button actions=\"<<node-red 'login docs'>>\" class=\"tc-btn-invisible tc-tiddlylink\">Login documentation</$button>\n\n|User ID*|<$edit-text field=\"userid\"/>| Unique string used to sign on |\n|User name*|<$edit-text field=\"username\"/>| Name to display to other users |\n|Email|<$edit-text field=\"email\"/>| optional email address |\n\n<$button actions=\"<<node-red 'logout'>>\"> Sign off </$button>\n\n---\n\n```\n{%&temp%}\n```\n\n+======+\ntitle: $:/poc2go/ui/Buttons/logout\ntags: $:/tags/PageControls\ncaption: {{$:/poc2go/images/logout-button}} {{$:/language/Buttons/Logout/Caption}}\ndescription: {{$:/language/Buttons/Logout/Hint}}\n\n\\whitespace trim\n<$button to=\"$:/tw5-node-red/logout\" tooltip={{$:/language/Buttons/Logout/Hint}} aria-label={{$:/language/Buttons/Logout/Caption}} class=<<tv-config-toolbar-class>>>\n<$list filter=\"[<tv-config-toolbar-icons>match[yes]]\">\n{{$:/poc2go/images/logout-button}}\n</$list>\n<$list filter=\"[<tv-config-toolbar-text>match[yes]]\">\n<span class=\"tc-btn-text\">\n<$text text={{$:/language/Buttons/Logout/Caption}}/>\n</span>\n</$list>\n</$button>\n\n+======+\ntitle: $:/poc2go/images/logout-button\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 5.15.2\nlibrary: Font-Awesome\ncollection: Solid\ncaption: network\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-fa-network-wired tc-image-button\" viewBox=\"0 0 640 512\"><path d=\"M640 264v-16c0-8.84-7.16-16-16-16H344v-40h72c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H224c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h72v40H16c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h104v40H64c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h304v40h-56c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h104c8.84 0 16-7.16 16-16zM256 128V64h128v64H256zm-64 320H96v-64h96v64zm352 0h-96v-64h96v64z\"/></svg>\n\n+======+\ntitle: $:/language/Buttons/Logout/Caption\n\nSign off\n\n+======+\ntitle: $:/language/Buttons/Logout/Hint\n\nSign off from server\n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "ac5ce25a67192096"
            ]
        ]
    },
    {
        "id": "cfee1305fe93f1c8",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Bearer token",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/temp/tw5-node-red/token\n\nToken delivered to [[$:/temp/tw5-node-red/store]]\n\n+======+\ntitle: $:/plugins/multiwikiclient/SideBarSegment\ntags: $:/tags/SideBarSegment\nlist-before: $:/core/ui/SideBarSegments/page-controls\n\n{{$:/temp/tw5-node-red/netstat}}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 365,
        "wires": [
            [
                "cac2c9295125e3b0"
            ]
        ]
    },
    {
        "id": "49d895b99b92ec84",
        "type": "function",
        "z": "fb90098a1998250c",
        "g": "530c27cac770eeb4",
        "name": "Unauthorize",
        "func": "// This client\nvar clientIds = global.get('clientIds');\nvar cId = msg.network.meta._clientid;\n\nmsg.error = 'Logged out';\n\n//msg.topic = 'login';\nclientIds[cId].auth.authorized = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 550,
        "wires": [
            [
                "4cd957658dc2bd9c"
            ]
        ]
    },
    {
        "id": "4187e021402a55de",
        "type": "link in",
        "z": "fb90098a1998250c",
        "g": "530c27cac770eeb4",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 95,
        "y": 543,
        "wires": [
            [
                "7396102619538ddb"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "7396102619538ddb",
        "type": "switch",
        "z": "fb90098a1998250c",
        "g": "530c27cac770eeb4",
        "name": "Login docs \\n Register request \\n Login \\n Logout",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login docs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "register request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "logout",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 220,
        "y": 544,
        "wires": [
            [
                "750bd45bece7449a"
            ],
            [
                "49d895b99b92ec84"
            ],
            [
                "49d895b99b92ec84"
            ],
            [
                "49d895b99b92ec84"
            ]
        ]
    },
    {
        "id": "4cd957658dc2bd9c",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "530c27cac770eeb4",
        "name": "Clear story",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/StoryList\nlist: \n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 595,
        "y": 550,
        "wires": [
            [
                "98189b2afd7d3e72",
                "ac5ce25a67192096"
            ]
        ]
    },
    {
        "id": "98189b2afd7d3e72",
        "type": "link out",
        "z": "fb90098a1998250c",
        "g": "530c27cac770eeb4",
        "name": "to Security System",
        "mode": "link",
        "links": [
            "509b906f53cc0bc2"
        ],
        "x": 790,
        "y": 550,
        "wires": [],
        "l": true
    },
    {
        "id": "502c174b58244c46",
        "type": "function",
        "z": "fb90098a1998250c",
        "g": "581538b733302aa5",
        "name": "New User Authentication",
        "func": "const $tw = global.get('$tw');\nconst bcrypt = global.get('bcrypt');\nconst usersDb = global.get('twikis').Users;\nconst userdata = msg.network.client.sender[0];\n\n// Assume will be getting an error\nmsg.topic = 'register request';\nmsg.payload = userdata;\n\n// Required fields - send error node's first output\nif (!(userdata.userid && userdata.username && userdata.password)) {\n  msg.error = `All fields with '*' are required.`;\n  node.send(msg); node.done();\n  return;\n}\n\nif (/[|[\\]{}].*$/.test(userdata.userid)) {\n  msg.error = `User ID can not contain \\`| [ ] { }\\` (vertical bar, square or curly brackets)`;\n  node.send(msg); node.done();\n  return;\n}\n\n// See if userid already exists - send error node's first output\nconst userDbTiddler = JSON.parse(usersDb.getTiddlersAsJson(userdata.userid));\nif (userDbTiddler.length) {\n  msg.error = `'${userdata.userid}' already registered`;\n  node.send(msg); node.done();\n  return;\n}\n\n// Generate the encrypted hash of the password\nconst pwHash = await bcrypt.hash(userdata.password, 8);\n\n// Reply with information about the successful account registration\nmsg.typedpassword = userdata.password + ''\ndelete userdata.password;\ndelete userdata.mustache;\n\nuserdata.title = userdata.userid;\nuserdata.pwHash = pwHash;\n\n// payload will be stored on the Users twiki\nmsg.payload = userdata;\n// data to be displayed in the reply\nmsg.network.user = userdata;\n\n// Success comes out the node's second output \nreturn [null, msg];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 760,
        "wires": [
            [
                "9b0a95db2e9194f2"
            ],
            [
                "24927d6a4e6c3c1a"
            ]
        ],
        "outputLabels": [
            "Error",
            "Success"
        ]
    },
    {
        "id": "210019cdd0a834d4",
        "type": "link in",
        "z": "fb90098a1998250c",
        "g": "581538b733302aa5",
        "name": "Create account",
        "links": [
            "bd6c95b1f4f345ec"
        ],
        "x": 200,
        "y": 710,
        "wires": [
            [
                "502c174b58244c46"
            ]
        ],
        "l": true
    },
    {
        "id": "24927d6a4e6c3c1a",
        "type": "to-twiki",
        "z": "fb90098a1998250c",
        "g": "581538b733302aa5",
        "name": "New user to Db",
        "twikiName": "Users",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 475,
        "y": 780,
        "wires": [
            [
                "1872fb3e9892e498"
            ]
        ]
    },
    {
        "id": "9b0a95db2e9194f2",
        "type": "link out",
        "z": "fb90098a1998250c",
        "g": "581538b733302aa5",
        "name": "Message to flows",
        "mode": "link",
        "links": [
            "96d69fda963f66a2",
            "9bda19b8b96ee73e"
        ],
        "x": 485,
        "y": 740,
        "wires": [],
        "l": true
    },
    {
        "id": "1872fb3e9892e498",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "581538b733302aa5",
        "name": "Report success",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: $:/tw5-node-red/account\nmustache: yes\nuserid: {%network.user.userid%}\nemail: {%network.user.email%}\nusername: {%network.user.username%}\npassword: {%typedpassword%}\n\n!!! Account created\n\nThis registration success is a placeholder to be implemented by TW5-Node-RED application developers. See <$button actions=\"<<node-red 'login docs'>>\" class=\"tc-btn-invisible tc-tiddlylink\">Login documentation</$button>\n\nThis is the last time this password will be displayed\n\n@@ ''Copy to a safe place'' @@\n\n|''userid'':|{{!!userid}}|\n|''password'':|{{!!password}}|\n|''username'':|{{!!username}}|\n|''email'':|{{!!email}}|\n\n\n<$button actions=\"<<node-red 'authenticate'>>\"> Login </$button>\n\n---\n\n```\n{%&temp%}\n```\n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 675,
        "y": 780,
        "wires": [
            [
                "d24091429b7ee2fe"
            ]
        ]
    },
    {
        "id": "d24091429b7ee2fe",
        "type": "link out",
        "z": "fb90098a1998250c",
        "g": "581538b733302aa5",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 820,
        "y": 780,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "cac2c9295125e3b0",
        "type": "set-network",
        "z": "fb90098a1998250c",
        "g": "bfac12ca49095e92",
        "name": "Send login",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: $:/tw5-node-red/login\nmustache: yes\nuserid: {%&network.user.userid%}\nusername: {%&network.user.username%}\nemail: {%network.user.email%}\npassword: \n\n\\define signin()\n<<node-red 'authenticate'>>\n<$action-setfield $tiddler=\"$:/StoryList\" $field=\"list\" $value={{$:/DefaultTiddlers}}/>\n<!-- <$action-sendmessage $message=\"tm-home\"/>\n<$action-navigate $to={{$:/DefaultTiddlers}}/> -->\n\\end\n\n!!! Login request\n\n{%#error%}\n<span style=\"color: red; font-size: 1.2em;\">{%.%}</span>\n{%/error%}\n\nThis login request is a placeholder to be implemented by TW5-Node-RED application developers. See <$button actions=\"<<node-red 'login docs'>>\" class=\"tc-btn-invisible tc-tiddlylink\">Login documentation</$button>\n\n!!! Sign-in\n\n|User ID*|<$edit-text field=\"userid\" focus=\"no\"/>| Unique string used to identify you |\n|Password*|<$edit-text field=\"password\" type=\"password\"/>| Your password to sign in |\n\n<$button actions=\"<<signin>>\"> Sign in </$button> - Do not have an account? - <$button actions=\"<<node-red 'register request'>>\"> Create account </$button>\n\nWhen connecting to the server will need to sign-in. Can use ''demo'' with password ''demo'' but can get strange if multiple users are using the same 'user'. Is better to ''Create account'' - Only requires a user ID, password, and name. No other info is kept - other than optional email if given.\n\n---\n\n```\n{%&temp%}\n```\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 410,
        "wires": [
            [
                "ac5ce25a67192096"
            ]
        ]
    },
    {
        "id": "2318b06227765245",
        "type": "link call",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "",
        "links": [
            "ac177abd18a30b02"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "f384e29897040b4b"
            ]
        ]
    },
    {
        "id": "20bdec5d39a32ed9",
        "type": "link in",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 145,
        "y": 80,
        "wires": [
            [
                "cdcb7e61e457aacb"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "cdcb7e61e457aacb",
        "type": "switch",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "client.onload",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "client.onload",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "2318b06227765245"
            ]
        ]
    },
    {
        "id": "80f6cc12c651bec8",
        "type": "link out",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 695,
        "y": 140,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "e3621e319e0136b6",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "payload to client",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "80f6cc12c651bec8",
                "e9c96a17d3f117a8"
            ]
        ]
    },
    {
        "id": "fb747f122378fdb3",
        "type": "link in",
        "z": "304338a4b9f89088",
        "g": "04304cacc22dfd2b",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 185,
        "y": 400,
        "wires": [
            [
                "2980cdfa0cd44104"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "2980cdfa0cd44104",
        "type": "switch",
        "z": "304338a4b9f89088",
        "g": "04304cacc22dfd2b",
        "name": "twsync app",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^twsync app.*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 400,
        "wires": [
            [
                "62c3e92ae0762df5"
            ]
        ]
    },
    {
        "id": "628aab7aaefe715e",
        "type": "switch",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "chat app?",
        "property": "app",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "chat",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 270,
        "wires": [
            [
                "e4714903c559cb33"
            ]
        ]
    },
    {
        "id": "e4714903c559cb33",
        "type": "change",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "rooms,show",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "network.server.tiddlers",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 270,
        "wires": [
            [
                "edc0b050e5af6de4"
            ]
        ]
    },
    {
        "id": "edc0b050e5af6de4",
        "type": "link out",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "Message to flows",
        "mode": "link",
        "links": [
            "96d69fda963f66a2",
            "9bda19b8b96ee73e"
        ],
        "x": 660,
        "y": 270,
        "wires": [],
        "l": true
    },
    {
        "id": "1ae4b7850095e251",
        "type": "link in",
        "z": "304338a4b9f89088",
        "g": "e7370f616716a124",
        "name": "twsync site",
        "links": [],
        "x": 170,
        "y": 520,
        "wires": [
            [
                "14477b22c78480b3"
            ]
        ],
        "l": true
    },
    {
        "id": "21d435e3c4987e1a",
        "type": "link out",
        "z": "304338a4b9f89088",
        "g": "e7370f616716a124",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 745,
        "y": 520,
        "wires": []
    },
    {
        "id": "14477b22c78480b3",
        "type": "function",
        "z": "304338a4b9f89088",
        "g": "e7370f616716a124",
        "name": "Requested site to payload",
        "func": "const $tw = global.get('$twmws'); // MWS TiddlyWiki\nconst mustache = global.get('mustache');\nconst search = msg.network.meta.location.search;\n\nvar app, mws;\n\nvar connstat = {\n    title: '$:/plugins/multiwikiclient/SideBarSegment',\n    tags: '$:/tags/SideBarSegment',\n    'list-before': '$:/core/ui/SideBarSegments/page-controls',\n    text: '{{$:/temp/tw5-node-red/netstat}}'\n}\n\n// Check for app name in URL search param ie: ?app=appname or ?mws=appname\napp = /app=(\\w+)/.exec(search) ? /app=(\\w+)/.exec(search)[1] : '';\nmws = /mws=(\\w+)/.exec(search) ? /mws=(\\w+)/.exec(search)[1] : '';\n\n// No app requested in URL so run wiki without an app\nif (!app && !mws) {\n    msg.payload = [connstat];\n    node.send([msg, null]);\n    node.done();\n    return;\n}\n\nif (app) {\n    loadFromSync();\n} else {\n    loadFromMws();\n    \n}\nmsg.payload.push(connstat);\n\nnode.send([msg, null]);\nnode.done();\n\nfunction loadFromSync() {\n    var inputpath = `./public/app/${app}/tiddlers`;\n\n    if (!$tw.utils.isDirectory(inputpath)) {\n        msg.payload = [\n            {\n                title: 'Error: Application not found',\n                text: `The application '${app}' is not found\\n`\n            }\n        ];\n        node.debug(`msg.inputpath: ${inputpath} is not found.`, msg);\n        node.send([null, msg]);\n        node.done();\n        return;\n    }\n\n    const wiki = new $tw.Wiki;\n\n    var tiddlers = $tw.loadTiddlersFromPath(inputpath);\n\n    $tw.utils.each(tiddlers, (tiddlerInfo) => {\n        $tw.utils.each(tiddlerInfo.tiddlers, (tiddler) => {\n            wiki.importTiddler(new $tw.Tiddler(tiddler));\n        });\n    });\n\n    msg.payload = JSON.parse(wiki.getTiddlersAsJson('[all[]]'));\n\n    for (let i = 0; i < msg.payload.length; i++) {\n        if (msg.payload[i].text && msg.payload[i].mustache === 'yes') {\n            msg.payload[i].text = mustache.render(msg.payload[i].text, msg, {}, ['{%', '%}'])\n        }\n    }\n    msg.app = app;\n}\n\nfunction loadFromMws() {\n    var tiddlers = [];\n    var recipeTiddlerList = $tw.mws.store.getRecipeTiddlers(mws);\n    recipeTiddlerList.forEach(recipe => {\n        tiddlers.push($tw.mws.store.getRecipeTiddler(recipe.title, mws).tiddler)\n    })\n\n    // mustache substitution\n    for (let i = 0; i < tiddlers.length; i++) {\n        if (tiddlers[i].text && tiddlers[i].mustache === 'yes') {\n            tiddlers[i].text = mustache.render(tiddlers[i].text, msg, {}, ['{%', '%}'])\n        }\n    }\n    msg.app = mws;\n    node.send([null, null, msg]); // utimately start-watching-recipe  \n    msg.payload = tiddlers;\n}\n\nreturn;\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            [
                "407b772f0f144186"
            ],
            [
                "ae33c705716b22fa"
            ],
            [
                "654ee70ffdb7a36c"
            ]
        ],
        "outputLabels": [
            "Tiddlers loaded",
            "Error",
            "Is from MWS"
        ]
    },
    {
        "id": "ae33c705716b22fa",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "e7370f616716a124",
        "name": "Error",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 620,
        "y": 540,
        "wires": [
            [
                "21d435e3c4987e1a"
            ]
        ]
    },
    {
        "id": "407b772f0f144186",
        "type": "function",
        "z": "304338a4b9f89088",
        "g": "e7370f616716a124",
        "name": "User settings",
        "func": "/*\nvar found = msg.network.meta.tiddlers.findIndex((tiddler) => tiddler.title === '$:/temp/tw5-node-red/store');\nif (found > -1) {\n    msg.network.meta.tiddlers[found].palette = msg.network.user.palette;\n    msg.payload.push({\n        title: '$:/palette',\n        text: msg.network.user.palette\n    })\n}\n*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 500,
        "wires": [
            [
                "21d435e3c4987e1a"
            ]
        ]
    },
    {
        "id": "f384e29897040b4b",
        "type": "link call",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "",
        "links": [
            "1ae4b7850095e251"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 320,
        "y": 140,
        "wires": [
            [
                "e3621e319e0136b6"
            ]
        ]
    },
    {
        "id": "55476bca421eb07a",
        "type": "link out",
        "z": "304338a4b9f89088",
        "g": "04304cacc22dfd2b",
        "name": "Message to flows",
        "mode": "link",
        "links": [
            "96d69fda963f66a2",
            "9bda19b8b96ee73e"
        ],
        "x": 690,
        "y": 400,
        "wires": [],
        "l": true
    },
    {
        "id": "62c3e92ae0762df5",
        "type": "change",
        "z": "304338a4b9f89088",
        "g": "04304cacc22dfd2b",
        "name": "set topic: client.load",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "client.onload",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 400,
        "wires": [
            [
                "55476bca421eb07a"
            ]
        ]
    },
    {
        "id": "f69ecb30fb65d53c",
        "type": "switch",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "notebook.html?",
        "property": "network.meta.location.pathname",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "notebook.html",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "5888fc4a0550ddd7"
            ]
        ]
    },
    {
        "id": "5888fc4a0550ddd7",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "d57af1ba9d807a6e",
        "name": "remove page controls",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/poc2go/ui/PageTemplate/pagecontrols\ncreated: 20231115040521068\nfetched: 20240327073029843\nmodified: 20231230104304763\ntags: \ntype: text/vnd.tiddlywiki\n\n<div style=\"float: right;\">[[Notebook theme]] by saqimtiaz @ [[talk tiddlywiki|https://talk.tiddlywiki.org/]]</div>\n\n+======+\ntitle: $:/palette\n\n$:/themes/nico/notebook/palettes/palette-grey\n",
        "clear": true,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "80f6cc12c651bec8"
            ]
        ]
    },
    {
        "id": "ac177abd18a30b02",
        "type": "link in",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "TW5-Node-RED Core",
        "links": [],
        "x": 270,
        "y": 800,
        "wires": [
            [
                "8a6999c14f732048"
            ]
        ],
        "l": true
    },
    {
        "id": "8a6999c14f732048",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "Styles",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/tw5-node-red/styles\ntags: $:/tags/Stylesheet tw5-node-red\ntype: text/css\n\n\n/* wikilabs fix for 'navy' too blue */\n.uni-link {\n  color: inherit;\n}\n\ncode {\n  font-size: .93em;\n}\n\n.tc-edit-texteditor-body {\n\tfont-family: monospace;\n    font-size: 15px;\n    line-height: 25px;\n}\n\n.poc2go-center-img {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n.poc2go-edit-text {\n\twidth: 60%;\n}\n\n/* Documentation - both docsify & TiddlyWiki */\n.poc2go-details {   }\n.poc2go-summary {   }\n.poc2go-details-container {\n  background-color: #c34a000A;\n  border: 1px solid #888888;\n  border-radius: 20px;\n  margin-top: .8em;\n}\n.poc2go-details-content {\n  margin-left: 2em;\n  margin-right: 2em;\n}\n/* ------ */\n\n[data-tag-title^=\"·topic: \"] .tc-tag-label,\n[data-tag-title^=\"·topic: \"].tc-tag-label {\n  border-radius: 3px;\n}\n[data-tag-title^=\"·\"] .tc-tag-label,\n[data-tag-title^=\"·\"].tc-tag-label {\n   border-radius: 3px;\n}",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "c9bbe0f3f12e859e"
            ]
        ]
    },
    {
        "id": "c9bbe0f3f12e859e",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "Icons",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "[\n  {\n    \"title\":\"$:/favicon.ico\",\n    \"_canonical_uri\":\"/tw5-node-red-logo.png\",\n    \"text\":\"\",\n    \"type\":\"image/png\" \n  },\n {\n    \"title\": \"$:/temp/images/phosphor-icons/fill/heart-straight-fill\",\n    \"text\": \"<svg width=\\\"11pt\\\" height=\\\"11pt\\\" class=\\\"tc-image-phi-heart-straight-fill tc-image-button\\\" viewBox=\\\"0 0 256 256\\\"><rect width=\\\"256\\\" height=\\\"256\\\" fill=\\\"none\\\"/><path fill=\\\"red\\\" d=\\\"M224.627,51.90625a59.54956,59.54956,0,0,0-43.0625-19.89063,60.69786,60.69786,0,0,0-43.98437,17.55469L128.002,59.14844l-7.5-7.49219c-23.32812-23.35156-61.29687-25.3125-84.57812-4.29687a59.974,59.974,0,0,0-2.34375,87.07031l83.10937,83.10937a16.013,16.013,0,0,0,22.625,0l81.03125-81.03125C243.68945,113.15625,245.61133,75.20312,224.627,51.90625Z\\\"/></svg>\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.2.0\",\n    \"library\": \"Phosphor Icons\",\n    \"collection\": \"Fill\",\n    \"caption\": \"heart-straight-fill\"\n  },\n  {\n    \"title\": \"$:/temp/images/remix-icon/health/hearts-fill\",\n    \"text\": \"<svg width=\\\"11pt\\\" height=\\\"11pt\\\" class=\\\"tc-image-ri-hearts-fill tc-image-button\\\" viewBox=\\\"0 0 24 24\\\"><g><path fill=\\\"none\\\" d=\\\"M0 0H24V24H0z\\\"/><path fill=\\\"red\\\" d=\\\"M17.363 11.045c1.404-1.393 3.68-1.393 5.084 0 1.404 1.394 1.404 3.654 0 5.047L17 21.5l-5.447-5.408c-1.404-1.393-1.404-3.653 0-5.047 1.404-1.393 3.68-1.393 5.084 0l.363.36.363-.36zm1.88-6.288c.94.943 1.503 2.118 1.689 3.338-1.333-.248-2.739-.01-3.932.713-2.15-1.303-4.994-1.03-6.856.818-2.131 2.115-2.19 5.515-.178 7.701l.178.185 2.421 2.404L11 21.485 2.52 12.993C.417 10.637.496 7.019 2.757 4.757c2.265-2.264 5.888-2.34 8.244-.228 2.349-2.109 5.979-2.039 8.242.228z\\\"/></g></svg>\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"2.5.0\",\n    \"library\": \"Remix Icon\",\n    \"collection\": \"\",\n    \"category\": \"Health\",\n    \"caption\": \"hearts-fill\"\n  },\n  {\n    \"title\": \"$:/temp/images/font-awesome/solid/heart-broken\",\n    \"text\": \"<svg width=\\\"11pt\\\" height=\\\"11pt\\\" class=\\\"tc-image-fa-heart-broken tc-image-button\\\" viewBox=\\\"0 0 512 512\\\"><path fill=\\\"red\\\" d=\\\"M473.7 73.8l-2.4-2.5c-46-47-118-51.7-169.6-14.8L336 159.9l-96 64 48 128-144-144 96-64-28.6-86.5C159.7 19.6 87 24 40.7 71.4l-2.4 2.4C-10.4 123.6-12.5 202.9 31 256l212.1 218.6c7.1 7.3 18.6 7.3 25.7 0L481 255.9c43.5-53 41.4-132.3-7.3-182.1z\\\"/></svg>\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"5.15.2\",\n    \"library\": \"Font Awesome\",\n    \"collection\": \"Solid\",\n    \"caption\": \"heart-broken\"\n  }\n]",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 590,
        "y": 800,
        "wires": [
            [
                "d6df3e42a1c72910"
            ]
        ]
    },
    {
        "id": "47d0e6a8f8415aa2",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "Tiddlers",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: ·node-red·\ncolor: #8f0000\nlist: ·node-red·\ncreated: 19700102000000000\nmodified: 19700102000000000\n\n<div style=\"text-align: center;font-size: 4em;\">· · · · · </div>\n\nTiddlers tagged with `·node-red·` have been sent to this wiki by the Node-Red server.\n\nAny tags that begin with a middle-dot `·` will be removed in-flight when sent to the server.\nThink of it as a client side //temporary// tag.\n\nTags that start with a middle-dot will appear square-ish <<tag ·temp·>> instead of the normal round-ish <<tag tw5-node-red>>\n\n> Since most keyboards do not have a middle-dot key - click the <<tag ·node-red·>> pill and select top-most entry `·node-red·`. and copy/paste one from top or bottom of this tiddler.\n\n<div style=\"text-align: center;font-size: 4em;\">· · · · · </div>\n+======+\ntitle: TW5-Node-RED\ntags: tw5-node-red\nclientId: <%network.meta._clientid%>\ncreated: 19700102000000000\nmodified: 19700102000000000\n\n<!-- Connection status -->\n{{$:/temp/tw5-node-red/netstat}}\n\nCan load <$button actions=\"<<node-red 'plugin'>>\"> TW5-Node-RED  Plugin</$button>, which contains information about\nTW5-Node-RED and stays pretty much hidden away in the Control Panel.\n\nThe TW5-Node-RED ''application'' however changes the appearance, palette, adds a bunch of tiddlers, stuff like that.\nIf connecting to server with your own wiki then probably would not run the application.\nOf course can just reload the page to start over again. \n\nLoad <$button actions=\"<<node-red 'tw5-node-red app'>>\"> TW5-Node-RED  Application</$button>.\n\n+======+\ntitle: tw5-node-red\ncolor: #334e7e\nlist: tw5-node-red\ncreated: 19700102000000000\nmodified: 19700102000000000\n\nTW5-Node-RED allows building server APIs for single file TiddlyWikis using Node-RED flows.\nNodes have been designed to manage TiddlyWiki tiddlers and interface tiddlers to standard \n(and most third party) nodes.\n\nA TiddlyWiki macro provides TiddlyWiki's access to the server allowing tiddlers to be sent\nto and received from the server. Due to browser security concerns, the TiddlyWiki\nmust be delivered by the server. Any TiddlyWiki can access the Node-Red server by drag-n-drop\n[[$:/plugins/potofcoffee2go/tw5-node-red/network.js]] and saving the single file TiddlyWiki in server\ndirectory 'uibuilder/svr/tiddlywikis'.\n\nServer side tiddlers can be from the connected TiddlyWikis, web, files, msg.property, or stored in Node-Red\nflows. The TiddlyWiki Core is embedded into Node-Red allowing the Node-Red 'function' node full\naccess to the TiddlyWiki codebase (ie: $tw functions and objects). Tiddlers can be stored in\nserver side TiddlyWiki wikis (twikis) allowing the server to access databases of tiddlers\nusing standard TW filters.\n\n!! TiddlyWiki\n\nRequests contain a topic to inform the server which Node-Red flow is to be executed.\nClient TiddlyWiki tiddlers are sent to the server by providing a filter of the tiddlers to send.\n`<<node-red 'topic' '[[tiddlers to send]]'>>` would send topic 'topic' and the tiddler titled\n'tiddlers to send'.\n\n!! Node-RED\n\nTiddler exchange is managed using the `msg.network` property maintained by all \nthe nodes in the Node-Red 'Tiddler' category:\n\n * create tiddler, read tiddler, get network, set network, to twiki, from twiki.\n\nTiddlers can be in .tid or JSON format, the Mustache logic-less template\nsystem is available for content substitution. TW5-Node-RED allows multiple tiddlers in .tid format\nby separating them using the line `+======+`.  \n\nThe server can dynamically request tiddlers from client TiddlyWikis at any time using standard TW filters.\n\nTiddlers and plugins can be preloaded into the Node-Red embedded TiddlyWiki for additional\nor custom server side tiddler processing.\n\nSee <a href=\"https://tw5-node-red.poc2go.com\" target=\"_blank\"> TW5-Node-Red Documentation </a> for details\n\n---\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/credits/page\ntags: tw5-node-red\ncaption: TNR Credits\ntype: text/vnd.tiddlywiki\n\n<div><img style=\"float: left;width: 90px;margin: 0 1.5em .5em 1em;\" src=\"/tw5-node-red-logo.png\"></div>\n\n! TW5-Node-RED\n\nDesigned and initial commit by [ext[PotOfCoffee2Go|https://github.com/potofcoffee2go]]\n\n<hr style=\"clear: both;margin-bottom: 1em;\">\n\n<div class=\"poc2go-center-img\">\n<img style=\"width: 900px;\" src=\"/docs/main-packages.png\">\n</div>\n\nThe main packages are [ext[Node-RED|https://nodered.org]], \n [ext[TiddlyWiki|https://tiddlywiki.com]], and\n [ext[uibuilder|https://totallyinformation.github.io/node-red-contrib-uibuilder/#/]]\n (node-red-contrib-uibuilder).\n\n---\n\n<div class=\"poc2go-center-img\">\n<img style=\"width: 500px;\" src=\"/docs/helper-packages.png\">\n</div>\n\n[ext[node.js|https://nodejs.org]], [ext[GIMP|https://www.gimp.org]],\n [ext[GitHub|https://github.com]], [ext[inkscape|https://inkscape.org]],\n [ext[git|https://git-scm.com]], [ext[geany|https://www.geany.org]],\n [ext[docsify|https://docsify.js.org]], and [ext[nodemon|https://nodemon.io]]\n were used to develop the project.\n\n---\n\nMany online developer resources: \n\n [ext[Talk TiddlyWiki|https://talk.tiddlywiki.org/]],\n [ext[MDN|https://developer.mozilla.org/en-US/]],\n [ext[TW Icons v1.10|https://morosanuae.github.io/tw-icons/]],\n [ext[StackOverflow|https://stackoverflow.com/]],\n [ext[W3 Schools|https://www.w3schools.com/]],\n [ext[pixabay|https://pixabay.com/]],\n [ext[JSON Beautifier|https://jsonbeautifier.org/]],\n [ext[YouTube|https://www.youtube.com]]\n\n---\n\nDeveloped on:\n\n[ext[Raspberry|https://www.raspberrypi.com]] [ext[Pi 4B|https://datasheets.raspberrypi.com/rpi4/raspberry-pi-4-datasheet.pdf]],\n[ext[LXDE Desktop|https://www.lxde.org]], [ext[Raspberry Pi OS (32-bit)|https://www.raspberrypi.com/software/]]\n\n<span>TiddlyWiki</span>: v5.3.1, Node-RED: v3.0.2, Node.js: v14.21.3, Linux: 5.10.103-v7l+ arm LE\n\nChromium: 92.0.4515.98 (Official Build) Built on Raspbian\n\n---\n\n\nCopyright and Trademarks are property of respective packages.\n\nNo company is affiliated with or endorses TW5-Node-RED. \n\n+======+\ntitle: TW5-Node-RED Flow Editor\ncreated: 19700102000000000\nmodified: 19700102000000000\n\n<iframe src=\"/red\" style=\"width:100%; height:600px\"></iframe>\n+======+\ntitle: $:/language/Snippets/node-red-button\ncaption: TW5-Node-RED Button\ntags: $:/tags/TextEditor/Snippet\n\n<$button actions=\"<<node-red 'hello'>>\"> Hello </$button>\n+======+\ntitle: $:/tw5-node-red/username\ncaption: {% network.user.username %}\ntags: \nmustache: yes\n\n{% network.user.username %}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 580,
        "y": 860,
        "wires": [
            [
                "99b7abd4d3bc5b40"
            ]
        ]
    },
    {
        "id": "99b7abd4d3bc5b40",
        "type": "link out",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 705,
        "y": 860,
        "wires": []
    },
    {
        "id": "844b316ad04edad7",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "more icons",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/icons/tw-icons-01.tid",
        "updtostory": true,
        "tostory": "false",
        "template": "created: 20231025184554690\nmodified: 20231025185816847\ntitle: $:/images/bootstrap/journal-arrow-down\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: journal-arrow-down\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-journal-arrow-down tc-image-button\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 5a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5A.5.5 0 0 1 8 5z\"/><path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/><path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/></svg>\n+======+\ncreated: 20231025184554691\nmodified: 20231025185719670\ntitle: $:/images/bootstrap/journal-arrow-up\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: journal-arrow-up\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-journal-arrow-up tc-image-button\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 11a.5.5 0 0 0 .5-.5V6.707l1.146 1.147a.5.5 0 0 0 .708-.708l-2-2a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L7.5 6.707V10.5a.5.5 0 0 0 .5.5z\"/><path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/><path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/></svg>\n+======+\ncreated: 20231025184554692\nmodified: 20231025185657535\ntitle: $:/images/bootstrap/layout-text-window-reverse\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: layout-text-window-reverse\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-layout-text-window-reverse tc-image-button\" viewBox=\"0 0 16 16\"><path d=\"M13 6.5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5zm0 3a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5zm-.5 2.5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h5z\"/><path d=\"M14 0a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12zM2 1a1 1 0 0 0-1 1v1h14V2a1 1 0 0 0-1-1H2zM1 4v10a1 1 0 0 0 1 1h2V4H1zm4 0v11h9a1 1 0 0 0 1-1V4H5z\"/></svg>\n+======+\ncreated: 20231025184554693\nmodified: 20231025185849073\ntitle: $:/images/bootstrap/markdown\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: markdown\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-markdown tc-image-button\" viewBox=\"0 0 16 16\"><path d=\"M14 3a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12zM2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H2z\"/><path fill-rule=\"evenodd\" d=\"M9.146 8.146a.5.5 0 0 1 .708 0L11.5 9.793l1.646-1.647a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 0-.708z\"/><path fill-rule=\"evenodd\" d=\"M11.5 5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 1 .5-.5z\"/><path d=\"M3.56 11V7.01h.056l1.428 3.239h.774l1.42-3.24h.056V11h1.073V5.001h-1.2l-1.71 3.894h-.039l-1.71-3.894H2.5V11h1.06z\"/></svg>\n+======+\ncreated: 20231025184554697\nmodified: 20231025185916488\ntitle: $:/images/coreui-icons/free/cil-indent-increase\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 2.0.1\nlibrary: CoreUI Icons\ncollection: Free\ncaption: cil-indent-increase\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-cui-cil-indent-increase tc-image-button\" viewBox=\"0 0 512 512\"><rect width=\"424\" height=\"32\" x=\"72\" y=\"63.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"296\" height=\"32\" x=\"200\" y=\"151.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"296\" height=\"32\" x=\"200\" y=\"239.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"296\" height=\"32\" x=\"200\" y=\"327.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"424\" height=\"32\" x=\"72\" y=\"415.998\" fill=\"var(--ci-primary-color, currentColor)\"/><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M16,144.909V367.091L171.527,256Zm32,62.182L116.473,256,48,304.909Z\"/></svg>\n+======+\ncreated: 20231025184554698\nmodified: 20231025190032754\ntitle: $:/images/coreui-icons/free/cil-wrap-text\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 2.0.1\nlibrary: CoreUI Icons\ncollection: Free\ncaption: cil-wrap-text\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-cui-cil-wrap-text tc-image-button\" viewBox=\"0 0 512 512\"><rect width=\"160\" height=\"32\" x=\"16\" y=\"232\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"392\" height=\"32\" x=\"16\" y=\"392\" fill=\"var(--ci-primary-color, currentColor)\"/><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M408,72H16v32H408c30.878,0,56,28.71,56,64s-25.122,64-56,64H344.8V162.772L210,249l134.8,83.785V264H408c48.523,0,88-43.065,88-96S456.523,72,408,72ZM312.8,275.217,270,248.609,312.8,221.228Z\"/></svg>",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 270,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "c0d81093110cbce5",
        "type": "link out",
        "z": "304338a4b9f89088",
        "g": "7d2e58723eb09955",
        "name": "Message to flows",
        "mode": "link",
        "links": [
            "96d69fda963f66a2",
            "9bda19b8b96ee73e"
        ],
        "x": 550,
        "y": 620,
        "wires": [],
        "l": true
    },
    {
        "id": "654ee70ffdb7a36c",
        "type": "change",
        "z": "304338a4b9f89088",
        "g": "7d2e58723eb09955",
        "name": "set topic: start-watch-recipe",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$join(['mws','start-watch-recipe',msg.app],'/')\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "network.server.tiddlers",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 620,
        "wires": [
            [
                "c0d81093110cbce5"
            ]
        ]
    },
    {
        "id": "d6df3e42a1c72910",
        "type": "set-network",
        "z": "304338a4b9f89088",
        "g": "e277a3352b39ab18",
        "name": "Snippets",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/language/Snippets/node-red-macro\ntags: $:/tags/TextEditor/Snippet\ncaption: Node-RED macro\n\n<<node-red 'hello' '[[tiddlers_to_send]]'>>\n\n+======+\ntitle: $:/language/Snippets/node-red-button\ntags: $:/tags/TextEditor/Snippet\ncaption: Node-RED button\n\n<$button actions=\"<<node-red 'hello'>>\"> Hello </$button>\n\n+======+\ntitle: $:/language/Snippets/node-red-button-send\ntags: $:/tags/TextEditor/Snippet\ncaption: Node-RED button w/send tiddlers\n\n<$button actions=\"<<node-red 'hello' '[[tiddlers_to_send]]'>>\"> Hello </$button>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 860,
        "wires": [
            [
                "47d0e6a8f8415aa2"
            ]
        ]
    },
    {
        "id": "9dcb2db358986f60",
        "type": "to-twiki",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Users twiki",
        "twikiName": "Users",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": true,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 2,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 170,
        "y": 270,
        "wires": [
            [],
            [
                "07eb4d33e36ca78e"
            ]
        ]
    },
    {
        "id": "07eb4d33e36ca78e",
        "type": "from-twiki",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Save user info to ./tiddlywiki/db/users.json",
        "twikiName": "Users",
        "toTwikiName": "$tw.wiki",
        "resetOnDeploy": false,
        "inputTask": "no operation",
        "outputFormat": "tiddlers",
        "field": "",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "file": "tiddlywiki/db/users.json",
        "topic": "",
        "outputs": 1,
        "tostory": "false",
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "toIsOpen": true,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "2f72cdcf6cc06e2d",
        "type": "to-twiki",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Rooms twiki",
        "twikiName": "Rooms",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": true,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 2,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 160,
        "y": 390,
        "wires": [
            [],
            [
                "d86914de295534cb"
            ]
        ]
    },
    {
        "id": "d86914de295534cb",
        "type": "from-twiki",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Save chat roooms to  ./tiddlywiki/db/rooms.json",
        "twikiName": "Rooms",
        "toTwikiName": "$tw.wiki",
        "resetOnDeploy": false,
        "inputTask": "no operation",
        "outputFormat": "tiddlers",
        "field": "",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "file": "tiddlywiki/db/rooms.json",
        "topic": "",
        "outputs": 1,
        "tostory": "false",
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "toIsOpen": true,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 460,
        "y": 390,
        "wires": [
            []
        ]
    },
    {
        "id": "c8ec67c0de0b50e2",
        "type": "to-twiki",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Load User info from ./tiddlywiki/db/users.json",
        "twikiName": "Users",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "tiddlywiki/db/users.json",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 230,
        "wires": [
            []
        ]
    },
    {
        "id": "378b62111965fdec",
        "type": "inject",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Startup",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 230,
        "wires": [
            [
                "c8ec67c0de0b50e2"
            ]
        ]
    },
    {
        "id": "befe33e64a70264a",
        "type": "inject",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 350,
        "wires": [
            [
                "03ebfda3187b4bce"
            ]
        ]
    },
    {
        "id": "03ebfda3187b4bce",
        "type": "to-twiki",
        "z": "ab56271e77c6f866",
        "g": "b900c252078e7f0f",
        "name": "Load Chat rooms twiki from ./tiddlywiki/db/rooms.json",
        "twikiName": "Rooms",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "tiddlywiki/db/rooms.json",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "title: color-blind\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: flexible\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: floor\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: confront\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: restless\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: hypnothize\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: curl\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: ignore\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: navy\ncreator: PotOfCoffee2Go\n\n+======+\ntitle: peace\ncreator: PotOfCoffee2Go\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 470,
        "y": 350,
        "wires": [
            []
        ]
    },
    {
        "id": "a03e67d3c6af9466",
        "type": "link in",
        "z": "ab56271e77c6f866",
        "g": "7854aca21984899b",
        "name": "ConnectionDb",
        "links": [
            "379f3550af8b837e",
            "9509694b4769ea7a"
        ],
        "x": 130,
        "y": 750,
        "wires": [
            [
                "c88f50c805560073"
            ]
        ],
        "l": true
    },
    {
        "id": "6caff008aa37f65b",
        "type": "debug",
        "z": "ab56271e77c6f866",
        "g": "7854aca21984899b",
        "name": "Status to debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 710,
        "wires": []
    },
    {
        "id": "5d85994367fc1ef4",
        "type": "to-twiki",
        "z": "ab56271e77c6f866",
        "g": "7854aca21984899b",
        "name": "",
        "twikiName": "ConnectionDb",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 590,
        "y": 750,
        "wires": [
            [
                "6caff008aa37f65b"
            ]
        ]
    },
    {
        "id": "c88f50c805560073",
        "type": "function",
        "z": "ab56271e77c6f866",
        "g": "7854aca21984899b",
        "name": "Connect/Disconnect Client",
        "func": "// Works in conjunction with Network tab 'Inbound' node\nconst $tw = global.get('$tw');\n\n// Only interested in connects and disconnects\nif (msg.uibuilderCtrl !== 'client connect' &&\n        msg.uibuilderCtrl !== 'client disconnect') {\n    node.done();\n    return;\n}\n\nvar payload = msg;\nmsg = { payload };\nmsg.topic = msg.payload.uibuilderCtrl;\nmsg.payload.title = msg.payload._socketId;\nmsg.payload.uibclientid = msg.payload.clientId;\ndelete msg.payload.clientId;\n\n// Server's socket Id for this connection\nconst connectionDb = global.get('twikis').ConnectionDb;\nconst connectDbTiddler = JSON.parse(connectionDb.getTiddlersAsJson(`[[${msg.payload._socketId}]]`));\n\n// If needed - create the connection tiddler\nif (connectDbTiddler.length === 0) {\n    node.send(msg)\n    node.done()\n    return;\n}\n\n// Delete the entry in TW Db when disconnect occurs\nif (msg.payload.uibuilderCtrl === 'client disconnect') {\n    var clientIds = global.get('clientIds');\n    delete clientIds[connectDbTiddler[0].tw5clientid];\n    connectionDb.deleteTiddler(msg.payload._socketId);\n    node.done();\n    return;\n}\n\n// No action required\nnode.done();\nreturn;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 750,
        "wires": [
            [
                "5d85994367fc1ef4"
            ]
        ]
    },
    {
        "id": "d8d9252f34c0e3a9",
        "type": "inject",
        "z": "ab56271e77c6f866",
        "g": "7854aca21984899b",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 710,
        "wires": [
            [
                "48c4eb692312c061"
            ]
        ]
    },
    {
        "id": "48c4eb692312c061",
        "type": "to-twiki",
        "z": "ab56271e77c6f866",
        "g": "7854aca21984899b",
        "name": "Create ConnectionDb",
        "twikiName": "ConnectionDb",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": false,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 340,
        "y": 710,
        "wires": [
            []
        ]
    },
    {
        "id": "588e7321eef68b14",
        "type": "inject",
        "z": "ab56271e77c6f866",
        "g": "4e3f07be3be3818f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "0bb01e40dbeddabe"
            ]
        ]
    },
    {
        "id": "a93b0937257cf944",
        "type": "debug",
        "z": "ab56271e77c6f866",
        "g": "4e3f07be3be3818f",
        "name": "twikis » debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 60,
        "wires": []
    },
    {
        "id": "0bb01e40dbeddabe",
        "type": "link call",
        "z": "ab56271e77c6f866",
        "g": "4e3f07be3be3818f",
        "name": "",
        "links": [
            "2ffe59e5768f9620"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "a93b0937257cf944"
            ]
        ]
    },
    {
        "id": "747659894c7a96e7",
        "type": "switch",
        "z": "3a98d4a7cc479175",
        "name": "mws",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^mws\\/.*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 200,
        "y": 90,
        "wires": [
            [
                "5a16a0adef35c2c0"
            ]
        ]
    },
    {
        "id": "a5a15f950dcbf5eb",
        "type": "link in",
        "z": "3a98d4a7cc479175",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 95,
        "y": 90,
        "wires": [
            [
                "747659894c7a96e7"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "5652efdb88423597",
        "type": "link out",
        "z": "3a98d4a7cc479175",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 755,
        "y": 200,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "5a16a0adef35c2c0",
        "type": "switch",
        "z": "3a98d4a7cc479175",
        "name": "get-bag-all \\n get-recipe-tiddlers \\n get-bag-tiddler \\n save-recipe-tiddlers \\n stop-watch-recipe \\n start-watch-recipe",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^mws\\/get-bag-all\\/.*$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^mws\\/get-recipe-tiddlers\\/.*$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^mws\\/get-bag-tiddler\\/.*$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^mws\\/save-recipe-tiddlers\\/.*$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^mws\\/stop-watch-recipe\\/.*$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^mws\\/start-watch-recipe\\/.*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 160,
        "y": 190,
        "wires": [
            [
                "28a27f5b6c9508b4"
            ],
            [
                "317c61f2e976b9d5"
            ],
            [
                "3b18349a87ce690e"
            ],
            [
                "7f9069d458cc7269"
            ],
            [
                "d687858deb05c1b9"
            ],
            [
                "879aa07646a78267"
            ]
        ]
    },
    {
        "id": "28a27f5b6c9508b4",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "get-bag-all",
        "func": "const $tw = global.get('$twmws'); // MultiWikiServer TW instance\nconst bag = msg.topic.replace('mws/get-bag-all/', '');\n\nvar sqlTiddlers = [];\nvar tiddlers = $tw.mws.store.getBagTiddlers(bag);\n// Create a JSON tiddler of each tiddler from SQL database\ntiddlers.forEach((tiddler) => {\n    let sqlRec = $tw.mws.store.getBagTiddler(tiddler.title, bag);\n    let mwsTiddler = {\n        title: `mws/bag/${bag}/ ${sqlRec.tiddler.title}`,\n        tags: `mws/bag/${bag}`,\n        type: 'application/json',\n        text: JSON.stringify(sqlRec, null, 2)\n    }\n    \n    sqlTiddlers.push(mwsTiddler);\n});    \n\nmsg.payload = sqlTiddlers;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 110,
        "wires": [
            [
                "9163b93163fb2f63"
            ]
        ]
    },
    {
        "id": "9163b93163fb2f63",
        "type": "set-network",
        "z": "3a98d4a7cc479175",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "5652efdb88423597"
            ]
        ]
    },
    {
        "id": "3b18349a87ce690e",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "get-bag-tiddler",
        "func": "const $tw = global.get('$twmws'); // MultiWikiServer TW instance\nconst cmdparts = msg.topic.split('/');\n// [0] = 'mws', [1] = 'get-bag-tiddler'\nconst bag = cmdparts[2];\nconst title = cmdparts[3];\n\nvar sqlTiddlers = [];\n\n// Create a JSON tiddler from SQL database\n// also set fields in the tiddler using the field name but starts with '_' underbar\nlet sqlRec = $tw.mws.store.getBagTiddler(title, bag);\nlet mwsTiddler = {\n    title: `mws/bag/${bag}/ ${sqlRec.tiddler.title}`,\n    tags: `mws/bag/${bag}`,\n    type: 'application/json',\n    text: JSON.stringify(sqlRec, null, 2),\n    '_tiddler_id': sqlRec.tiddler_id,\n    '_attachment_blob': sqlRec.attachment_blob\n}\n\n// Create copy of fields - starts with an '_' \nObject.keys(sqlRec.tiddler).forEach(fld => {\n    mwsTiddler[`_${fld}`] = sqlRec.tiddler[fld];\n})\n\nsqlTiddlers.push(mwsTiddler);\n\nmsg.payload = sqlTiddlers;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 190,
        "wires": [
            [
                "9163b93163fb2f63"
            ]
        ]
    },
    {
        "id": "317c61f2e976b9d5",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "get-recipe-tiddlers",
        "func": "const $tw = global.get('$twmws');\nconst mustache = global.get('mustache');\nconst store = $tw.mws.store;\n\nconst cmdparts = msg.topic.split('/');\n// [0] = 'mws', [1] = 'get-recipe-tiddlers'\nconst reqRecipe = cmdparts[2];\n\nvar tiddlers = [];\n\nvar recipeTiddlerList = store.getRecipeTiddlers(reqRecipe);\nrecipeTiddlerList.forEach(recipe => {\n    tiddlers.push(store.getRecipeTiddler(recipe.title, reqRecipe).tiddler)\n})\nmsg.payload = tiddlers; \n\n// render with mustache\nfor (let i=0; i<msg.payload.length; i++) {\n    if (msg.payload[i].text && msg.payload[i].mustache === 'yes') {\n        msg.payload[i].text = mustache.render(msg.payload[i].text, msg, {}, ['{%', '%}'])\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 150,
        "wires": [
            [
                "9163b93163fb2f63"
            ]
        ]
    },
    {
        "id": "879aa07646a78267",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "start-watch-recipe",
        "func": "// See 'On Start' for the event listener\n\n// Register client to listen for events\nconst $tw = global.get('$twmws');\nconst recipes = global.get('recipes');\nconst cmdparts = msg.topic.split('/');\n\n// [0] = 'mws', [1] = 'start-listen-recipe'\nconst recipe = cmdparts[2];\n\nif (recipes[recipe]) {\n    $tw.utils.pushTop(recipes[recipe].clientid, msg.network.meta._clientid);\n    recipes[recipe].msgs[msg.network.meta._clientid] = msg;\n    msg.clientid = msg.network.meta._clientid;\n    msg.payload = {\n        title: `Watching recipe ${recipe} for updates`,\n        text: `Started watching for updates to MWS recipe '''${recipe}'''\\n\\n\\n` +\n            `<$button actions=\"<<node-red 'mws/stop-watch-recipe/${recipe}'>>\"> Stop </$button> watching for '''${recipe}''' recipe updates.\\n`\n    }\n    node.send(msg);\n}\n\nnode.done()\nreturn;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n// Recipe Event Handler\nfunction onRecipeTiddlersChanged() {\n    const $tw = global.get('$twmws'); // MultiWikiServer TW instance\n    const recipes = global.get('recipes');\n    const mustache = global.get('mustache');\n\n    // Don't know which recipe changed - so check them all\n    for (let recipeName in recipes) {\n        let current_last_tiddler_id = $tw.mws.store.getRecipeLastTiddlerId(recipeName);\n        if (!current_last_tiddler_id || current_last_tiddler_id <= recipes[recipeName].last_known_tiddler_id) {\n            continue;\n        }\n        let recipeTiddlers = $tw.mws.store.getRecipeTiddlers(recipeName, {\n            include_deleted: true,\n            last_known_tiddler_id: recipes[recipeName].last_known_tiddler_id\n        })\n        //console.dir(recipeTiddlers);\n        // Found recipe with tiddler(s) changed\n        if (recipeTiddlers && recipeTiddlers.length) {\n            let tiddlers = [];\n            let deletelist = [];\n            for (let index = recipeTiddlers.length - 1; index >= 0; index--) {\n                const tiddlerInfo = recipeTiddlers[index];\n                if (tiddlerInfo.tiddler_id > recipes[recipeName].last_known_tiddler_id) {\n                    recipes[recipeName].last_known_tiddler_id = tiddlerInfo.tiddler_id;\n                    recipes[recipeName].lastTiddlerInfo = tiddlerInfo;\n                }\n                if (tiddlerInfo.title === '$:/StoryList' || /^Draft of /.test(tiddlerInfo.title)) {\n                    continue;\n                }\n                if (!tiddlerInfo.is_deleted) {\n                    const tiddler = $tw.mws.store.getRecipeTiddler(tiddlerInfo.title, recipeName);\n                    if (tiddler) {\n                        tiddlers.push(tiddler.tiddler);\n                    }\n                } else {\n                    deletelist.push(tiddlerInfo.title);\n                }\n            }\n            // Send to registered client(s)\n            if (tiddlers.length || deletelist.length) {\n                // Remove stale clientids no longer connected\n                const clientIds = global.get('clientIds');\n                recipes[recipeName].clientid.forEach(id => {\n                    if (!clientIds[id]) {\n                        $tw.utils.removeArrayEntries(recipes[recipeName].clientid, id);\n                        delete recipes[recipeName].msgs[id];\n                    }\n                })\n                // mustache substitution\n                recipes[recipeName].clientid.forEach(id => {\n                    var clTiddlers = [];\n                    tiddlers.forEach(tiddler => {\n                        clTiddlers.push(JSON.parse(JSON.stringify(tiddler)));\n                        if (tiddler.text && tiddler.mustache === 'yes') {\n                            clTiddlers[clTiddlers.length - 1].text = mustache.render(tiddler.text, recipes[recipeName].msgs[id], {}, ['{%', '%}']);\n                        }\n                    })\n                    // Broadcast message\n                    var msg = {};\n                    msg.clientid = id;\n                    msg.deletelist = deletelist;\n                    msg.recipe = recipes[recipeName];\n                    msg.payload = clTiddlers;\n                    node.send(msg);\n                })\n            }\n        }\n    }\n}\n\n// Place listener in Node-RED global context\nif (!global.get('recipeEvents')) {\n    const $tw = global.get('$twmws'); // MultiWikiServer TW instance\n    global.set('recipeEvent', onRecipeTiddlersChanged);\n    $tw.mws.store.addEventListener(\"change\", global.get('recipeEvent'));\n}\n",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nconst $tw = global.get('$twmws'); // MultiWikiServer TW instance\n$tw.mws.store.removeEventListener(\"change\", global.get('recipeEvent'));\nglobal.set('recipeEvent', undefined);\n",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "85842eb9526d44ce"
            ]
        ]
    },
    {
        "id": "85842eb9526d44ce",
        "type": "set-network",
        "z": "3a98d4a7cc479175",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 460,
        "y": 370,
        "wires": [
            [
                "485d61633f5c01f4"
            ]
        ]
    },
    {
        "id": "8ecf386acefd8e7d",
        "type": "link out",
        "z": "3a98d4a7cc479175",
        "name": "Broadcast msg",
        "mode": "link",
        "links": [
            "85f96a4f808488c5"
        ],
        "x": 820,
        "y": 370,
        "wires": [],
        "l": true
    },
    {
        "id": "7f9069d458cc7269",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "save-recipe-tiddlers",
        "func": "const $tw = global.get('$twmws');\nconst store = $tw.mws.store;\n\nconst cmdparts = msg.topic.split('/');\n// [0] = 'mws', [1] = 'save-recipe-tiddlers'\nconst recipe = cmdparts[2];\n\nvar tiddlers = msg.network.client.tiddlers;\n\nvar results = [];\ntiddlers.forEach(tiddler => {\n\tvar info = store.saveRecipeTiddler(tiddler, recipe);\n\tif (info) {\n\t\tresults.push({\n\t\t\trecipe,\n\t\t\ttitle: tiddler.title,\n\t\t\ttiddler_id: info.tiddler_id,\n\t\t\tbag_name: info.bag_name\n\t\t})\n\t}\n})\n\nmsg.payload = {\n\ttitle: 'Save Results',\n\ttype: 'application/json',\n\ttext: JSON.stringify(results, null, 2)\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 230,
        "wires": [
            [
                "9163b93163fb2f63"
            ]
        ]
    },
    {
        "id": "5287aee91ed80f4a",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "g": "4cf17dc99028c6b1",
        "name": "Load SQL",
        "func": "// See 'On Start' for implementation\nreturn msg;",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n// TW5-Node-RED recipes\nconst $tw = global.get('$twmws');\nconst fs = global.get('fs');\nconst path = global.get('path');\nconst tw5flags = global.get('tw5flags');\n\nfunction loadTNR() {\n    // List of TW5-Node-RED applications ('server' editions)\n    function editionNames() {\n        const editionFolder = path.resolve(\".\", \"public/app\");\n        return fs\n            .readdirSync(editionFolder, { withFileTypes: true })\n            .filter(dirent => dirent.isDirectory())\n            .map(dirent => dirent.name);\n    }\n    // Copy editions\n    function copyEdition(options) {\n        node.log(`Copying TNR ${options.recipeName} recipe`);\n        $tw.mws.store.createBag(options.bagName, options.bagDescription);\n        $tw.mws.store.createRecipe(options.recipeName, [options.bagName], options.recipeDescription);\n        $tw.mws.store.saveTiddlersFromPath(path.resolve($tw.boot.corePath, $tw.config.editionsPath, options.tiddlersPath), options.bagName);\n        // Enable SSE\n        $tw.mws.store.saveBagTiddler(\n            { title: '$:/config/multiwikiclient/use-server-sent-events', text: 'yes' }, options.bagName\n        );\n    }\n    // Load editions into database.sqlite\n    editionNames().forEach((editionName) => {\n        copyEdition({\n            bagName: editionName,\n            bagDescription: `TW5-Node-RED ${editionName}`,\n            recipeName: editionName,\n            recipeDescription: `TW5-Node-RED ${editionName}`,\n            tiddlersPath: path.resolve(\".\", `public/app/${editionName}/tiddlers`)\n        })\n    })\n    tw5flags.SqlLoaded = true;\n}\n\n\n// Record info about recipes - last_known_tiddler_id, lastTiddlerInfo, etc.\nfunction setRecipeState() {\n    var recipes = {};\n    $tw.mws.store.listRecipes().forEach(recipe => {\n        var last_known_tiddler_id = 0;\n        var lastTiddlerInfo = {};\n        // Get the tiddlers in the recipe\n        var recipeTiddlers = $tw.mws.store.getRecipeTiddlers(recipe.recipe_name, {\n            include_deleted: true,\n            last_known_tiddler_id: 0\n        });\n        // Got tiddlers so update recipe info\n        if (recipeTiddlers) {\n            for (let index = recipeTiddlers.length - 1; index >= 0; index--) {\n                const tiddlerInfo = recipeTiddlers[index];\n                if (tiddlerInfo.tiddler_id > last_known_tiddler_id) {\n                    last_known_tiddler_id = tiddlerInfo.tiddler_id;\n                    lastTiddlerInfo = tiddlerInfo;\n                }\n            }\n        }\n        // Remember current info\n        recipes[recipe.recipe_name] = {\n            last_known_tiddler_id,\n            clientid: [],\n            msgs: {},\n            recipe,\n            lastTiddlerInfo\n        }\n    })\n\n    global.set('recipes', recipes);\n}\n\nif (!tw5flags.SqlLoaded) {\n    loadTNR();\n    setRecipeState();\n}\n\n",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 110,
        "wires": []
    },
    {
        "id": "485d61633f5c01f4",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "update delete list",
        "func": "// This node is temporary\n//  Will be implemented into 'tiddler' nodes\n\nmsg.network.server.deletelist = msg.deletelist;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 370,
        "wires": [
            [
                "8ecf386acefd8e7d"
            ]
        ]
    },
    {
        "id": "d687858deb05c1b9",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "stop-watch-recipe",
        "func": "// Unregister client to stop listening for events\nconst $tw = global.get('$twmws');\nconst recipes = global.get('recipes');\nconst cmdparts = msg.topic.split('/');\n\n// [0] = 'mws', [1] = 'stop-watch-recipe'\nconst recipe = cmdparts[2];\n\nif (recipes[recipe]) {\n    $tw.utils.removeArrayEntries(recipes[recipe].clientid, msg.network.meta._clientid);\n    msg.payload = {\n        title: `Watching recipe ${recipe} for updates`,\n        text: `Stopped watching for updates to MWS recipe '''${recipe}'''\\n\\n\\n` +\n            `<$button actions=\"<<node-red 'mws/start-watch-recipe/${recipe}'>>\"> Start </$button> watching for '''${recipe}''' recipe updates.\\n`\n    }\n    node.send(msg);\n}\n\nnode.done()\nreturn;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nconst $tw = global.get('$twmws'); // MultiWikiServer TW instance\n$tw.mws.store.removeEventListener(\"change\", global.get('recipeEvent'));\n",
        "libs": [],
        "x": 430,
        "y": 270,
        "wires": [
            [
                "9163b93163fb2f63"
            ]
        ]
    },
    {
        "id": "4d92fd82634f9576",
        "type": "http in",
        "z": "3a98d4a7cc479175",
        "name": "",
        "url": "/bags/:bag_name/tiddlers/:title/blob",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 430,
        "wires": [
            [
                "c1394e6ac2c2e178"
            ]
        ]
    },
    {
        "id": "c1394e6ac2c2e178",
        "type": "function",
        "z": "3a98d4a7cc479175",
        "name": "get-bags-tiddlers-blob",
        "func": "const $tw = global.get('$twmws')\n\n// Get the  parameters\nfunction streamToBuffer(stream) {\n  const chunks = [];\n  return new Promise((resolve, reject) => {\n    stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n    stream.on('error', (err) => reject(err));\n    stream.on('end', () => resolve(Buffer.concat(chunks)/*.toString('utf8')*/));\n  })\n}\n\nconst bag_name = msg.req.params.bag_name;\nconst title = msg.req.params.title;\n\nif (bag_name) {\n  const result = $tw.mws.store.getBagTiddlerStream(title,bag_name);\n  if (result) {\n    streamToBuffer(result.stream).then(response => {\n      msg.statusCode = 200;\n      msg.headers = {};\n      msg.headers['Content-Type'] = result.type;\n      msg.payload = response;\n      node.send(msg);\n      node.done();\n    })\n  } else {\n    msg.statusCode = 404;\n    msg.payload = '';\n    node.send(msg);\n    node.done();\n  }\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 430,
        "wires": [
            [
                "4f1a271151298c03"
            ]
        ]
    },
    {
        "id": "4f1a271151298c03",
        "type": "http response",
        "z": "3a98d4a7cc479175",
        "name": "blob reponse",
        "statusCode": "",
        "headers": {},
        "x": 660,
        "y": 430,
        "wires": []
    },
    {
        "id": "dee53a18f9af7b3c",
        "type": "set-network",
        "z": "127607a6bb274a18",
        "g": "5de81872ac658de0",
        "name": "Expand river",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/state/sidebar\n\nno",
        "clear": true,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 560,
        "y": 520,
        "wires": [
            [
                "49e8ade023549ff5"
            ]
        ]
    },
    {
        "id": "1d23e008fde4d932",
        "type": "uib-sender",
        "z": "127607a6bb274a18",
        "g": "5de81872ac658de0",
        "url": "svr",
        "uibId": "c2642e3fa442ca65",
        "name": "",
        "topic": "server.tiddlers",
        "passthrough": true,
        "return": false,
        "outputs": 1,
        "x": 280,
        "y": 520,
        "wires": [
            [
                "5cb34faaf5e14207"
            ]
        ]
    },
    {
        "id": "5cb34faaf5e14207",
        "type": "delay",
        "z": "127607a6bb274a18",
        "g": "5de81872ac658de0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "dee53a18f9af7b3c"
            ]
        ]
    },
    {
        "id": "7fd5bbf53ae9558b",
        "type": "link in",
        "z": "127607a6bb274a18",
        "g": "5de81872ac658de0",
        "name": "Hide Sidebar",
        "links": [],
        "x": 140,
        "y": 520,
        "wires": [
            [
                "1d23e008fde4d932"
            ]
        ],
        "l": true
    },
    {
        "id": "49e8ade023549ff5",
        "type": "link out",
        "z": "127607a6bb274a18",
        "g": "5de81872ac658de0",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 665,
        "y": 520,
        "wires": []
    },
    {
        "id": "1c83c2ba47bdb96a",
        "type": "function",
        "z": "127607a6bb274a18",
        "g": "47b83acc6a54da80",
        "name": "clientIds & twiki databases",
        "func": "const $tw = global.get('$tw');\nconst twikis = global.get('twikis');\n\nif (typeof msg.payload !== 'object') {\n    msg.payload = {};\n}\n\n// Place clientIds results in the msg\nmsg.payload.clientIds = global.get('clientIds');\n\n// Place twiki results in the msg\nmsg.payload.twikis = {};\n\n// For each twiki create a property in msg.twiki of the twikiName\n//  then load the property with tiddlers from the twiki\nfor (let twikiName in twikis) {\n    msg.payload.twikis[twikiName] =\n        JSON.parse(twikis[twikiName].getTiddlersAsJson('[all[]]'))\n    $tw.utils.log(`twiki: '${twikiName}' has ${twikis[twikiName].countTiddlers()} tiddlers`, 'purple')\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 640,
        "wires": [
            [
                "e5c2695061c28c3d"
            ]
        ]
    },
    {
        "id": "2ffe59e5768f9620",
        "type": "link in",
        "z": "127607a6bb274a18",
        "g": "47b83acc6a54da80",
        "name": "set msg.twikis",
        "links": [],
        "x": 140,
        "y": 640,
        "wires": [
            [
                "1c83c2ba47bdb96a"
            ]
        ],
        "l": true
    },
    {
        "id": "e5c2695061c28c3d",
        "type": "link out",
        "z": "127607a6bb274a18",
        "g": "47b83acc6a54da80",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 535,
        "y": 640,
        "wires": []
    },
    {
        "id": "d679dc2c7fb5ad4c",
        "type": "function",
        "z": "127607a6bb274a18",
        "g": "49f363e05e815a85",
        "name": "TW Commander",
        "func": "const $tw = global.get('$tw');\nconst pr = global.get('process');\n\n// TiddlyWki commander got an error?\nfunction checkForErrors(err) {\n    if (err) {\n        try {\n            $tw.utils.error(\"Error: \" + err);\n        } catch (e) {}\n    }\n}\n\n// Create $tw.Commander to do... commands\nconst cmdr = {\n    execute: (cmds) => {\n        new $tw.Commander(cmds, checkForErrors, $tw.wiki,\n            { output: pr.stdout, error: pr.stderr }\n        ).execute();\n    }\n}\n\ncmdr.execute(msg.commands);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "3891c3049d5ff01d"
            ]
        ]
    },
    {
        "id": "e40c0cb505cd4bfb",
        "type": "link in",
        "z": "127607a6bb274a18",
        "g": "49f363e05e815a85",
        "name": "TW Commander",
        "links": [],
        "x": 160,
        "y": 200,
        "wires": [
            [
                "d679dc2c7fb5ad4c"
            ]
        ],
        "l": true
    },
    {
        "id": "3891c3049d5ff01d",
        "type": "link out",
        "z": "127607a6bb274a18",
        "g": "49f363e05e815a85",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 455,
        "y": 200,
        "wires": []
    },
    {
        "id": "a07af28ade3a49a2",
        "type": "debug",
        "z": "127607a6bb274a18",
        "g": "a98914fa33e8fcce",
        "name": "$twmws » debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$twmws",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 70,
        "wires": []
    },
    {
        "id": "c1e23170a15882f7",
        "type": "inject",
        "z": "127607a6bb274a18",
        "g": "a98914fa33e8fcce",
        "name": "Get $twmws object",
        "props": [
            {
                "p": "$twmws",
                "v": "$twmws",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 70,
        "wires": [
            [
                "a07af28ade3a49a2"
            ]
        ]
    },
    {
        "id": "c76e9202971136a2",
        "type": "function",
        "z": "127607a6bb274a18",
        "g": "1fe9f0e2147a2011",
        "name": "TW Sync Commander",
        "func": "const $twsync = global.get('$twsync');\nconst pr = global.get('process');\n\n// TiddlyWki commander got an error?\nfunction checkForErrors(err) {\n    if (err) {\n        try {\n            $twsync.utils.error(\"Error: \" + err);\n        } catch (e) {}\n    }\n}\n\nconst log = {\n    write: (text) => node.log(text.toString())\n}\n\n// Create $twsync.Commander to do... commands\nconst cmdr = {\n    execute: (cmds) => {\n        node.log(JSON.stringify(cmds));\n        new $twsync.Commander(cmds, checkForErrors, $twsync.wiki).execute();\n    }\n}\n\ncmdr.execute(msg.commands);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            [
                "3f8dbc7f474d68d8"
            ]
        ]
    },
    {
        "id": "30ce9f775e65e57d",
        "type": "link in",
        "z": "127607a6bb274a18",
        "g": "1fe9f0e2147a2011",
        "name": "TW Sync Commander",
        "links": [],
        "x": 180,
        "y": 300,
        "wires": [
            [
                "c76e9202971136a2"
            ]
        ],
        "l": true
    },
    {
        "id": "3f8dbc7f474d68d8",
        "type": "link out",
        "z": "127607a6bb274a18",
        "g": "1fe9f0e2147a2011",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 535,
        "y": 300,
        "wires": []
    },
    {
        "id": "7aac22e295d4e0f1",
        "type": "function",
        "z": "127607a6bb274a18",
        "g": "2987d0b55f0f6a01",
        "name": "TW MWS Commander",
        "func": "const $twmws = global.get('$twmws');\nconst pr = global.get('process');\n\n// TiddlyWki commander got an error?\nfunction checkForErrors(err) {\n    if (err) {\n        try {\n            $twmws.utils.error(\"Error: \" + err);\n        } catch (e) {}\n    }\n}\n\nconst log = {\n    write: (text) => node.log(text.toString())\n}\n\n// Create $twmws.Commander to do... commands\nconst cmdr = {\n    execute: (cmds) => {\n        node.log(JSON.stringify(cmds));\n        new $twmws.Commander(cmds, checkForErrors, $twmws.wiki).execute();\n    }\n}\n\ncmdr.execute(msg.commands);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "edf7669fe4924d86"
            ]
        ]
    },
    {
        "id": "45d54f170e388b66",
        "type": "link in",
        "z": "127607a6bb274a18",
        "g": "2987d0b55f0f6a01",
        "name": "TW MWS Commander",
        "links": [],
        "x": 180,
        "y": 400,
        "wires": [
            [
                "7aac22e295d4e0f1"
            ]
        ],
        "l": true
    },
    {
        "id": "edf7669fe4924d86",
        "type": "link out",
        "z": "127607a6bb274a18",
        "g": "2987d0b55f0f6a01",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 535,
        "y": 400,
        "wires": []
    },
    {
        "id": "7e1d28042993ee2d",
        "type": "get-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 275,
        "y": 140,
        "wires": [
            [
                "b1d22b6ea5af6c8c"
            ]
        ],
        "l": false
    },
    {
        "id": "53cfba302a93975f",
        "type": "switch",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "to json",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "to json",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 180,
        "y": 140,
        "wires": [
            [
                "7e1d28042993ee2d"
            ]
        ]
    },
    {
        "id": "b1d22b6ea5af6c8c",
        "type": "function",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "to JSON",
        "func": "\nmsg.payload.forEach(tiddler => {\n    delete tiddler.fetched;\n})\n\nmsg.converttext = {\n    title: '$:/temp/poc2go/converttext',\n    text: JSON.stringify(msg.payload, null, 2),\n    type: 'application/json'\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 140,
        "wires": [
            [
                "8e0b5380e71a239e"
            ]
        ]
    },
    {
        "id": "8e0b5380e71a239e",
        "type": "set-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "converttext",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 485,
        "y": 160,
        "wires": [
            [
                "dad041e7b0ba1a66"
            ]
        ],
        "l": false
    },
    {
        "id": "dad041e7b0ba1a66",
        "type": "function",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "Convert Tiddlers",
        "func": "msg.payload = `title: Convert Tiddlers\nfilter: ${msg.network.client.sender[0].filter ? msg.network.client.sender[0].filter : '[[]]'}\n\n<$set name=filter value={{!!filter}}>\n<$button actions=\"<<node-red 'to json' '$(filter)$'>>\"> JSON </$button>\n<$button actions=\"<<node-red 'to tid' '$(filter)$'>>\"> .tid </$button>\n</$set>\nFilter: <$edit-text field=filter class=poc2go-edit-text />\n\n<$macrocall $name=\"copy-to-clipboard\" src={{$:/temp/poc2go/converttext}}/>\n\n{{$:/temp/poc2go/converttext}}\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 160,
        "wires": [
            [
                "05f53b0ba8804b02"
            ]
        ]
    },
    {
        "id": "05f53b0ba8804b02",
        "type": "set-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 755,
        "y": 160,
        "wires": [
            [
                "123b82e57831527e"
            ]
        ],
        "l": false
    },
    {
        "id": "123b82e57831527e",
        "type": "link out",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 845,
        "y": 160,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "db3503f6c6d0f5ea",
        "type": "debug",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "Client Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 340,
        "wires": []
    },
    {
        "id": "d6becbc1eb1981a5",
        "type": "switch",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "to debug",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "to debug",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "52ac23d6fd69ca75"
            ]
        ]
    },
    {
        "id": "8b2f8fcaf3696a2b",
        "type": "function",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "Node-Red debug",
        "func": "msg.payload = `title: Node-Red debug\n\n<$button actions=\"<<node-red 'to debug' '[[$:/tw5-node-red/settings]]'>>\"> to debug </$button>\n\n\\`\\`\\`html\n<$button actions=\"<<node-red 'to debug' '[[$:/tw5-node-red/settings]]'>>\"> to debug </$button>\n\\`\\`\\`\n\n<$macrocall $name=\\\"copy-to-clipboard\\\" src={{$:/temp/poc2go/debugtext}}/>\n\n\\`\\`\\`json\n${JSON.stringify(msg, null, 2)}\n\\`\\`\\`\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "e4bc7258380d7124"
            ]
        ]
    },
    {
        "id": "e4bc7258380d7124",
        "type": "set-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "server.tiddlers",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 755,
        "y": 280,
        "wires": [
            [
                "db3503f6c6d0f5ea",
                "123b82e57831527e"
            ]
        ],
        "l": false
    },
    {
        "id": "5bde851593e32438",
        "type": "function",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "DebugText tiddler",
        "func": "msg.debugtext = `title: $:/temp/poc2go/debugtext\n\n${ JSON.stringify(msg, null, 2) }\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 280,
        "wires": [
            [
                "7a077d0de73446be"
            ]
        ]
    },
    {
        "id": "7a077d0de73446be",
        "type": "set-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "debugtext",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 285,
        "y": 280,
        "wires": [
            [
                "dc7833dc679fadd0"
            ]
        ],
        "l": false
    },
    {
        "id": "dc7833dc679fadd0",
        "type": "change",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "debugtext",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "8b2f8fcaf3696a2b"
            ]
        ]
    },
    {
        "id": "dcd45e6966cda24d",
        "type": "link call",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "links": [
            "2d16349559e708d1"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 570,
        "y": 220,
        "wires": [
            [
                "5bde851593e32438"
            ]
        ]
    },
    {
        "id": "52ac23d6fd69ca75",
        "type": "change",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter",
                "pt": "msg",
                "to": "[[GettingStarted]] [[New Tiddler]]",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "network.client.tiddlersOriginal",
                "pt": "msg",
                "to": "network.client.tiddlers",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "dcd45e6966cda24d"
            ]
        ]
    },
    {
        "id": "de29b90b6878e330",
        "type": "link in",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 55,
        "y": 160,
        "wires": [
            [
                "53cfba302a93975f",
                "d6becbc1eb1981a5",
                "0f24b35ddd5713d5",
                "0a43a979cb79ba2e"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "605736a10c443a62",
        "type": "get-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "tiddlers",
        "file": "",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 275,
        "y": 180,
        "wires": [
            [
                "384b3178b58d75a3"
            ]
        ],
        "l": false
    },
    {
        "id": "0f24b35ddd5713d5",
        "type": "switch",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "to tid",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "to tid",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "605736a10c443a62"
            ]
        ]
    },
    {
        "id": "384b3178b58d75a3",
        "type": "function",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "to .tid",
        "func": "const $tw = global.get('$tw');\n\n// Convert tiddler to .tid format\nfunction tiddlerToTid(inTiddler) {\n    let tiddler = inTiddler.fields ? inTiddler.fields : { fields: inTiddler };\n    let tid = '';\n    Object.keys(tiddler.fields).forEach((fld) => {\n        if (fld !== 'text' && fld !== 'fetched') {\n            if (['created', 'modified'].indexOf(fld) !== -1) {\n                // If date is TW format leave as is\n                if (/^\\d/.test(tiddler.fields[fld])) {\n                    tid += (fld + ': ' + tiddler.fields[fld] + '\\n');\n                } else { // need to convert date to TW format\n                    tid += (fld + ': ' + $tw.utils.stringifyDate(tiddler.fields[fld]) + '\\n');\n                }\n            } else { // not a date field\n                tid += (fld + ': ' + tiddler.fields[fld] + '\\n');\n            }\n        }\n    })\n    // All fields done - now for the text\n    tid += '\\n';\n    tid += (tiddler.fields['text'] ? tiddler.fields['text'] : '');\n\n    return tid;\n}\n\nvar tids = '';\nvar first = true;\nmsg.tiddlers.forEach(tidd => {\n    if (!first) { tids += '\\n+======+\\n'; }\n    tids += tiddlerToTid(tidd);\n    first = false;\n})\n\nmsg.converttext = {\n    title: '$:/temp/poc2go/converttext',\n    text: tids,\n    type: 'text/plain'\n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "8e0b5380e71a239e"
            ]
        ]
    },
    {
        "id": "53fb3fedf84a21e5",
        "type": "http request",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://gist.githubusercontent.com/PotOfCoffee2Go/160f247423751b317b704a1063d8aed6/raw/Hello%2520World.tid",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "42a9532b8df72e2c"
            ]
        ]
    },
    {
        "id": "0a43a979cb79ba2e",
        "type": "switch",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "get gist",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get gist",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "53fb3fedf84a21e5"
            ]
        ]
    },
    {
        "id": "42a9532b8df72e2c",
        "type": "set-network",
        "z": "48bfd625e1f82a45",
        "g": "06a7cfc21197c2d2",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 755,
        "y": 100,
        "wires": [
            [
                "123b82e57831527e"
            ]
        ],
        "l": false
    },
    {
        "id": "ed5874185a4d04b9",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "7d0cda13723c5e21",
        "name": "sample",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Test css\nselector: head\ninsertHTML: beforeend\n\n\t\t<style>\n\t\t\t.html-display svg {\n\t\t\t\tmargin: .6em 1em .6em 1em;\n\t\t\t}\n\n\t\t\t/* The navigation bar */\n\t\t\t.navbar {\n\t\t\t  overflow: hidden;\n\t\t\t  background-color: #4747ff;\n\t\t\t  position: fixed; /* Set the navbar to fixed position */\n\t\t\t  top: 0; left: 0; /* Position the navbar at the top of the page */\n\t\t\t  width: 100%; /* Full width */\n\t\t\t}\n\n\t\t\t.navbar img {\n\t\t\t\tfloat: left;\n\t\t\t\twidth: 28px;\n\t\t\t\tmargin: 6px 1em 0 10px;\n\t\t\t}\n\n\t\t\t/* Links inside the navbar */\n\t\t\t.navbar a {\n\t\t\t  float: left;\n\t\t\t  display: block;\n\t\t\t  color: #f2f2f2;\n\t\t\t  text-align: center;\n\t\t\t  padding: 14px 16px;\n\t\t\t  text-decoration: none;\n\t\t\t  cursor: pointer;\n\t\t\t}\n\n\t\t\t/* Change background on mouse-over */\n\t\t\t.navbar a:hover {\n\t\t\t  background: #d6d6ff;\n\t\t\t  color: black;\n\t\t\t}\n\n\t\t\t/* Avoid content overlay */\n\t\t\t.spacer {\n\t\t\t  margin-top: 60px;\n\t\t\t}\n\n\t\t\t.topic-form {\n\t\t\t\tmargin: 0 0 1em 0;\n\t\t\t}\n\n\t\t\ttextarea {\n\t\t\t\twidth: 99%;\n\t\t\t\tmin-width: 45%;\n\t\t\t\tmax-width: 99%;\n\t\t\t\tmin-height: 3em;\n\t\t\t\tz-index: 100;\n\t\t\t}\n\n\t\t\t.tidText {\n\t\t\t\tmin-height: 3em;\n\t\t\t\tpadding-left: .5em;\n\t\t\t}\n\n\t\t\t#about {\n\t\t\t\tbackground: #3b3b92;\n\t\t\t\tcolor: aliceblue;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\toverflow-y:auto;\n\t\t\t\tmin-height: 190px;\n\t\t\t\tmax-height: 190px;\n\t\t\t\tpadding-left: 1em;\n\t\t\t\tborder-radius: 10px;\n\t\t\t}\n\n\t\t\t.bdr {\n\t\t\t\tbackground: #c7c7ff;\n\t\t\t\tborder: 1px solid black;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\tmargin-bottom: .5em;\n\t\t\t\tborder-radius: 15px;\n\t\t\t}\n\n\t\t\t.half-block {\n\t\t\t\twidth: 48%;\n\t\t\t}\n\n\t\t\t#red-req-msg, #red-res-msg {\n\t\t\t\tfont-family: monospace;\n\t\t\t\tfont-size: .8em;\n\t\t\t}\n\n\t\t\t.hr-red {\n\t\t\t  height: 3px;\n\t\t\t  background-color: #ff0000;\n\t\t\t  border: none;\n\t\t\t  margin: 1em 3em 1em 3em;\n\t\t\t}\n\t\t\t.hr-blue {\n\t\t\t  height: 3px;\n\t\t\t  background-color: #0000ff;\n\t\t\t  border: none;\n\t\t\t  margin: 1em 5em 1em 5em;\n\t\t\t}\n\t\t</style>\n+======+\ntitle: Heading Section\nselector: .heading\n\n\t\t<div class=\"navbar\">\n\t\t\t<img src=\"/tw5-node-red-logo.png\">\n\t\t\t<a onclick=\"nodered.topic('hello', '.html-display');\">Hello</a>\n\t\t\t<a onclick=\"nodered.topic('book', '.html-display');\">Book</a>\n\t\t\t<a onclick=\"nodered.topic('icons', '.html-display');\">Icons</a>\n\t\t\t<a onclick=\"resetPage();\">Clear</a>\n\t\t</div>\n+======+\ntitle: Standard Replies\nselector: .std-reply\n\n\t\t<div class=\"html-display bdr tidText\"><p>Click Hello.</p></div>\n\n+======+\ntitle: Topic Form\nselector: .topic-form\n\n\t\t<div id=\"topic-text\" class=\"half-block\" style=\"float: left;\">\n\t\t\t<input type=\"text\" id=\"entered-topic\" name=\"entered-topic\" placeholder=\"Enter topic\"/>\n\t\t\t<button id=\"topic-bttn\" onclick=\"sendTopic();\" >Send</button>\n\t\t\t<br>\n\t\t\t<div>\n\t\t\t\t<textarea id=\"entered-tid\" name=\"entered-tid\" rows=\"5\"\n\t\t\t\t\tplaceholder=\"Enter tiddler(s) - .tid format\"></textarea>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<textarea id=\"received-tid\" name=\"received-tid\" rows=\"5\"\n\t\t\t\t\tplaceholder=\"Received tiddlers\"></textarea>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<span id=\"about-move-btn\" onclick=\"expandAbout();\" style=\"margin-left: 5%;\"></span>\n\t\t<div id=\"about\" class=\"half-block\" style=\"float: right;\"></div>\n\t\t<div style=\"clear: both;\"></div>\n+======+\ntitle: Message Display\nselector: .msg-display\n\n\t\t<div id=\"hb-check\" class=\"half-block bdr\" style=\"float: left;\">\n\t\t\t<input type=\"checkbox\" id=\"display-hb\" name=\"display-hb\" />\n\t\t\t<label for=\"display-hb\">Heartbeats</label>\n\t\t</div>\n\n\t\t<div class=\"half-block bdr\" style=\"float: right;\">\n\t\t\t<span style=\"padding-left: 1em;\" > to story: </span><span id=\"to-story\"></span>\n\t\t</div>\n\t\t<div style=\"clear:both;\"></div>\n\t\t<div id=\"send-count\" style=\"float:left;\" class=\"half-block\">Messages sent: 0 - client.tiddlers: 0</div>\n\t\t<div id=\"receive-count\" style=\"float:right;\" class=\"half-block\">Messages received: 0 - server.tiddlers: 0</div>\n\t\t<div id=\"red-req-msg\" class=\"bdr half-block\" style=\"float:left;  height: 500px; overflow: auto; width: 48%;\"></div>\n\t\t<div id=\"red-res-msg\" class=\"bdr half-block\" style=\"float:right; height: 500px; overflow: auto; width: 48%;\"></div>\n+======+\ntitle: About\nselector: #about\n\n<p>This page is a regular web page that does not use TiddlyWiki client-side. The '/svr/page/js/network.js' script interfaces to TW5-Node-RED using tiddlers. The page can be used to see the tiddlers that are being exchanged between client and server - which can be helpful in debugging messages.</p>\n\n<p>Let's look at the simplest message exchange - press <button onclick=\"resetPage();nodered.topic('hello', '.html-display');\">Hello</button> to see a basic message layout. The box <button onclick=\"flashClass('.html-display');\">above</button> displays the text of the tiddler(s). The lower <button onclick=\"flashTextArea();flashClass('#received-tid');\">edit box</button> on the left displays the tiddlers received in .tid format.</p>\n\n<p>Look at the <button onclick=\"flashClass('#red-req-msg');\">Sent</button> message. All fields except 'selector' are required. 'selector' is only used for web page clients (not TiddlyWiki clients). Is the CSS Selector of the element(s) to insert the text of the returned tiddlers.</p>\n\n<p>The other required field is 'network' which contains three sub-fields; meta, client, and server.\nEach sub-field has a 'tiddlers' array which is populated by the 'client' (this web page), the 'server', while 'meta' can updated by both client and/or server.</p>\n\n<p>The <b>topic</b> sent is \"hello\" which the server uses to route the request. The <button onclick=\"flashClass('#red-res-msg');\">returned</button> <b>topic</b> is \"server.tiddlers\" to indicate there are reply tiddlers in <b>network.server.tiddlers</b>. As is  normal - 'network.meta.tiddlers' and 'network.client.tiddlers' are the same as the sent message.</p>\n\n<p><b>network.server.storylist</b> is the list of tiddler titles in <b>network.server.tiddlers</b> that are to be copied into 'selector' element or to the story river of TiddlyWiki clients.</p>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 800,
        "y": 160,
        "wires": [
            [
                "e8d74aa808633faa"
            ]
        ]
    },
    {
        "id": "3641f98bb5b86807",
        "type": "switch",
        "z": "2e264bd071bbb666",
        "g": "7d0cda13723c5e21",
        "name": "Page router",
        "property": "network.meta.location.pathname",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "sample.html",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 160,
        "wires": [
            [
                "ed5874185a4d04b9"
            ]
        ]
    },
    {
        "id": "9bc1f269acde9ac9",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "768d32daf0185aaa",
        "name": "sample iframe",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Sample Web Page\n\n<iframe src=\"/web/page/sample.html\" style=\"height:800px;width: 100%;\"/>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 440,
        "y": 700,
        "wires": [
            [
                "7b9e83c8c7bad25c"
            ]
        ]
    },
    {
        "id": "30d1b206b8634711",
        "type": "link in",
        "z": "2e264bd071bbb666",
        "g": "768d32daf0185aaa",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 190,
        "y": 700,
        "wires": [
            [
                "e6a464527b5ef777"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "7b9e83c8c7bad25c",
        "type": "link out",
        "z": "2e264bd071bbb666",
        "g": "768d32daf0185aaa",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 570,
        "y": 700,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "e6a464527b5ef777",
        "type": "switch",
        "z": "2e264bd071bbb666",
        "g": "768d32daf0185aaa",
        "name": "web page",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "web page",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 285,
        "y": 700,
        "wires": [
            [
                "9bc1f269acde9ac9"
            ]
        ]
    },
    {
        "id": "ad42a88ed21e5660",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "home",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "Fiona",
        "filter": "[tag[to-home]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 660,
        "y": 400,
        "wires": [
            [
                "7301de8d5d4d39eb"
            ]
        ]
    },
    {
        "id": "3016b1c70c0454f5",
        "type": "switch",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "fiona-page",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^fiona-page .*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 470,
        "wires": [
            [
                "2187d045fd511912"
            ]
        ]
    },
    {
        "id": "2187d045fd511912",
        "type": "function",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "Fiona Pages",
        "func": "// Remove the topic from msg.topic - leaving the page name \nvar page = msg.topic.replace('fiona-page ', '');\n\n// Output msg based on page name\nswitch (page) {\n    case 'home':\n        return [msg, null, null, null, null];\n    case 'experience':\n        return [null, msg, null, null, null];\n    case 'environment':\n        return [null, null, msg, null, null];\n    case 'investigation':\n        return [null, null, null, msg, null];\n    case 'services':\n        return [null, null, null, null, msg];\n    default:\n        node.error(`Unknown fiona page: ${page}`)\n        node.done();\n}\n",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 470,
        "wires": [
            [
                "ad42a88ed21e5660"
            ],
            [
                "8fcad8f983b1ff60"
            ],
            [
                "52bd7eda399c5b06"
            ],
            [
                "3a66d6960b195fe4"
            ],
            [
                "d7cea583cbe3fea9"
            ]
        ],
        "outputLabels": [
            "home page",
            "experience page",
            "environment page",
            "investigation page",
            "services page"
        ]
    },
    {
        "id": "8fcad8f983b1ff60",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "experience",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "Fiona",
        "filter": "[tag[to-experience]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "7301de8d5d4d39eb"
            ]
        ]
    },
    {
        "id": "52bd7eda399c5b06",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "environment",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "Fiona",
        "filter": "[tag[to-environment]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 680,
        "y": 480,
        "wires": [
            [
                "7301de8d5d4d39eb"
            ]
        ]
    },
    {
        "id": "3a66d6960b195fe4",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "investigation",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "Fiona",
        "filter": "[tag[to-investigation]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "7301de8d5d4d39eb"
            ]
        ]
    },
    {
        "id": "d7cea583cbe3fea9",
        "type": "set-network",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "services",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "Fiona",
        "filter": "[tag[to-service]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 670,
        "y": 560,
        "wires": [
            [
                "7301de8d5d4d39eb"
            ]
        ]
    },
    {
        "id": "7add3e3ed518c8bf",
        "type": "inject",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 570,
        "wires": [
            [
                "0a13840cbd5684fe"
            ]
        ]
    },
    {
        "id": "2bc27304b1b0ee44",
        "type": "to-twiki",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "Fiona tiddler Db",
        "twikiName": "Fiona",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "public/app/fiona/tiddlers",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": true,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 470,
        "y": 570,
        "wires": [
            []
        ]
    },
    {
        "id": "0a13840cbd5684fe",
        "type": "function",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "fiona app",
        "func": "const $tw = global.get('$tw');\nconst wiki = new $tw.Wiki;\n\nvar tiddlers = $tw.loadTiddlersFromPath('./public/app/fiona/tiddlers');\n\n$tw.utils.each(tiddlers, (tiddlerInfo) => {\n    $tw.utils.each(tiddlerInfo.tiddlers, (tiddler) => {\n        wiki.importTiddler(new $tw.Tiddler(tiddler));\n    });\n});\n\nmsg.payload = JSON.parse(wiki.getTiddlersAsJson('[all[]]'));\n\nnode.send(msg);\nnode.done();\nreturn;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 570,
        "wires": [
            [
                "2bc27304b1b0ee44"
            ]
        ]
    },
    {
        "id": "69aa7eb35d63cab7",
        "type": "uibuilder",
        "z": "2e264bd071bbb666",
        "name": "inbound page",
        "topic": "",
        "url": "web",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.4.1",
        "showMsgUib": false,
        "x": 140,
        "y": 160,
        "wires": [
            [
                "b24a7b1954b8b0e2"
            ],
            [
                "9509694b4769ea7a"
            ]
        ]
    },
    {
        "id": "dc4687a33670229b",
        "type": "function",
        "z": "2e264bd071bbb666",
        "name": "Connect & \\n Bearer token",
        "func": "// Client connection info gathered during heartbeat processing\nconst $tw = global.get('$tw');\nconst connectionDb = global.get('twikis').ConnectionDb;\n\n// Generates a JWT token\nfunction genToken(text) {\n    let sweet = { spot: text };\n    const jwt = global.get('jwt');\n    return jwt.sign(sweet, 'shhhhh');\n}\n\n// if wish to decode the token would use:\n// var decoded = jwt.verify(token, 'shhhhh');\n// console.dir(decoded); // bar\n\n// Client Id remains the same until browser reloads page\nvar clientIds = global.get('clientIds');\nvar cId = msg.network.meta._clientid;\n\n// Set the token to be stored by the client\nconst clientStore = msg.network.meta.tiddlers.find((tiddler) => tiddler.title === '$:/temp/tw5-node-red/store');\nif (!clientStore) {\n    throw new Error('Tiddler $:/temp/tw5-node-red/store not present for bearer token')\n}\n\n// Initial connection so generate default values\n// Send msg for further processing of new connections\nif (cId && !clientIds[cId]) {\n    const randomtext = cId;\n    clientIds[cId] = {\n        clientId: cId,\n        userid: '', // Set when authenticated\n        socketId: msg._socketId,\n        auth: {\n            _id: randomtext,\n            _token: genToken(randomtext),\n            authorized: false,\n        }\n    }\n\n    // the server's socket id for this connection\n    var connectDbTiddler = JSON.parse(connectionDb.getTiddlersAsJson(`[[${msg._socketId}]]`));\n    if (connectDbTiddler.length === 0) {\n        throw new Error('Connect ConnectionDb Tiddler not present for updates');\n    }\n\n    clientStore.token = clientIds[cId].auth._token;\n    clientStore.socketId = msg._socketId;\n    clientStore.clientid = cId;\n\n    connectDbTiddler[0].tw5clientid = cId;\n    connectDbTiddler[0].tags = cId;\n    connectionDb.addTiddler(connectDbTiddler[0]);\n    // Send to security system to finish processing first message\n    node.send([null, msg]);\n}\n\n// Insure socket Id is correct (due to reconnects)\nif (clientIds[cId].socketId !== msg._socketId) {\n//   node.log(`Client switching from socket ${clientIds[cId].socketId}`);\n//   node.log(` to socket ${msg._socketId}`);\n    // Remove stale ConnectionDb tiddler with old socket id\n    connectionDb.deleteTiddler(clientIds[cId].socketId);\n    \n    // Get the new ConnectionDb tiddler - created by tab 'Databases' -> 'ConnectionDb' flow \n    var connectDbTiddler = JSON.parse(connectionDb.getTiddlersAsJson(`[[${msg._socketId}]]`));\n    if (connectDbTiddler.length === 0) {\n        throw new Error('Reconnect ConnectionDb Tiddler not present for updates');\n    }\n\n    // Update all objects, server and client side\n    clientIds[cId].socketId = msg._socketId\n    clientStore.socketId = msg._socketId;\n    connectDbTiddler[0].tw5clientid = cId;\n    connectDbTiddler[0].tags = cId;\n    connectionDb.addTiddler(connectDbTiddler[0]);\n    // Send Heartbeat reply\n    if (msg.topic === 'heartbeat') {\n        node.send([msg, null]);\n    } else { // Send to security system\n        node.send([null, msg]);\n    }\n}\n\n// Send every msg for further processing\nnode.send([msg, null])\nnode.done()\nreturn;\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 80,
        "wires": [
            [
                "3c9b811e0aa663f8"
            ],
            [
                "e8d74aa808633faa"
            ]
        ],
        "outputLabels": [
            "heartbeat",
            "get token"
        ],
        "icon": "font-awesome/fa-group"
    },
    {
        "id": "9509694b4769ea7a",
        "type": "link out",
        "z": "2e264bd071bbb666",
        "name": "ConnectionDb",
        "mode": "link",
        "links": [
            "a03e67d3c6af9466"
        ],
        "x": 160,
        "y": 230,
        "wires": [],
        "l": true
    },
    {
        "id": "b24a7b1954b8b0e2",
        "type": "switch",
        "z": "2e264bd071bbb666",
        "name": "heartbeat \\n onload \\n otherwise",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "heartbeat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "client.onload",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "dc4687a33670229b"
            ],
            [
                "3641f98bb5b86807"
            ],
            [
                "76268e5a03d9efbf"
            ]
        ]
    },
    {
        "id": "3c9b811e0aa663f8",
        "type": "uib-sender",
        "z": "2e264bd071bbb666",
        "url": "web",
        "uibId": "69aa7eb35d63cab7",
        "name": "Heartbeat (pong) <web>",
        "topic": "",
        "passthrough": false,
        "return": false,
        "outputs": 0,
        "x": 830,
        "y": 50,
        "wires": []
    },
    {
        "id": "76268e5a03d9efbf",
        "type": "link out",
        "z": "2e264bd071bbb666",
        "name": "to flows",
        "mode": "link",
        "links": [
            "7393e531a0f6d08e"
        ],
        "x": 600,
        "y": 230,
        "wires": [],
        "l": true
    },
    {
        "id": "8c82e7455a92d9d0",
        "type": "link in",
        "z": "2e264bd071bbb666",
        "g": "e914aaa12d0aa24e",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 125,
        "y": 470,
        "wires": [
            [
                "3016b1c70c0454f5"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "e8d74aa808633faa",
        "type": "link out",
        "z": "2e264bd071bbb666",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 965,
        "y": 90,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "7301de8d5d4d39eb",
        "type": "link out",
        "z": "2e264bd071bbb666",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 885,
        "y": 480,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "ade0933a3cb3ad67",
        "type": "set-network",
        "z": "8f4c8042c34e6b26",
        "g": "2cc580ac14991c18",
        "name": "dice icons",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "[\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-1 tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><circle cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"1.5\\\"/><path d=\\\"M13 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10zM3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-1\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-1\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-1-fill tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3zm5 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-1-fill\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-1-fill\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-2 tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M13 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10zM3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3z\\\"/><path d=\\\"M5.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-2\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-2\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-2-fill tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M0 3a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3H3a3 3 0 0 1-3-3V3zm5.5 1a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0zm6.5 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-2-fill\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-2-fill\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-3 tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M13 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10zM3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3z\\\"/><path d=\\\"M5.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm-4-4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-3\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-3\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-3-fill tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3zm2.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM8 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-3-fill\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-3-fill\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-4 tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M13 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10zM3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3z\\\"/><path d=\\\"M5.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm-8 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-4\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-4\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-4-fill tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3zm1 5.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm8 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm1.5 6.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM4 13.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-4-fill\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-4-fill\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-5 tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M13 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10zM3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3z\\\"/><path d=\\\"M5.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm-8 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm4-4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-5\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-5\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-5-fill tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3zm2.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM12 13.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM5.5 12a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM8 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-5-fill\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-5-fill\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-6 tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M13 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h10zM3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3z\\\"/><path d=\\\"M5.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm-8 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-6\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-6\"\n  },\n  {\n    \"text\": \"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-bts-dice-6-fill tc-image-button\\\" viewBox=\\\"0 0 16 16\\\"><path d=\\\"M3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3zm1 5.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm8 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm1.5 6.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM12 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM5.5 12a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM4 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\\\"/></svg>\",\n    \"title\": \"$:/images/bootstrap/dice-6-fill\",\n    \"tags\": \"$:/tags/Image Icons Images SVG\",\n    \"library_version\": \"1.3.0\",\n    \"library\": \"Bootstrap\",\n    \"collection\": \"\",\n    \"caption\": \"dice-6-fill\"\n  }\n]",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 430,
        "y": 90,
        "wires": [
            [
                "ea95423b40b2db5f"
            ]
        ]
    },
    {
        "id": "cbaa14bc051e3edb",
        "type": "link in",
        "z": "8f4c8042c34e6b26",
        "g": "2cc580ac14991c18",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 155,
        "y": 110,
        "wires": [
            [
                "19d2ef07636bdc78"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "ea95423b40b2db5f",
        "type": "link out",
        "z": "8f4c8042c34e6b26",
        "g": "2cc580ac14991c18",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 575,
        "y": 110,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "19d2ef07636bdc78",
        "type": "switch",
        "z": "8f4c8042c34e6b26",
        "g": "2cc580ac14991c18",
        "name": "dice",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dice",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 110,
        "wires": [
            [
                "ade0933a3cb3ad67",
                "3913261e623baa65"
            ]
        ]
    },
    {
        "id": "3913261e623baa65",
        "type": "set-network",
        "z": "8f4c8042c34e6b26",
        "g": "2cc580ac14991c18",
        "name": "startup tiddler",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Roll some dice\ntags: dice\nnbr_of_dice: 4\n\nNumber of dice: \n <$edit-text field=\"nbr_of_dice\" size=\"3\"/>\n<$button actions=\"<<node-red 'dice roll'>>\"> roll dice </$button>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 430,
        "y": 130,
        "wires": [
            [
                "ea95423b40b2db5f"
            ]
        ]
    },
    {
        "id": "510dc6f6e07f9be4",
        "type": "set-network",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "Outcome",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Dice roll\ntags: dice\nmustache: yes\nplayername: {% playername %}\nprevInfo: {% &outcome.prevInfo %}\nnbr_of_dice: {% dice.count %}\ndice_username: {% dice.username %}\ndice_clientid: {% dice.clientid %}\ndice_list: {% dice.list %}\ndice_sum: {% dice.sum %}\ndice_outcome: {% &outcome.rollInfo %}\n\n<style>\n.poc2go-number-input { width: 3.5em; }\n.poc2go-roll-button { margin-right: 3.5em; }\n</style>\n\n<span style=\"font-size: 1.5em;\">\nPlayer: {{!!playername}}\n</span>\n\n<div style=\"font-size: 1.2em;\">\nCurrent is <b>{{!!dice_username}}'s</b> (<b>{% dice.count %}</b> die) roll of <b>{{!!dice_sum}}</b>\n</div>\n\n{%# yourTurn %}\nNumber of dice:\n <$edit-text field=\"nbr_of_dice\" type=\"number\" class=\"poc2go-number-input\"/>\n <$button actions=\"<<node-red 'dice roll'>>\" class=\"poc2go-roll-button\"> Roll </$button>\n  {%# leader %}\n  <$button set=\"Dice roll!!reset\" setTo=\"yes\" actions=\"<<node-red 'dice roll'>>\"> Reset Score </$button>\n  {%/ leader %}\n{%/ yourTurn %}\n{%^ yourTurn %}\n  {%# leader %}\n  <$button set=\"Dice roll!!reset\" setTo=\"yes\" actions=\"<<node-red 'dice roll'>>\"> Reset Score </$button>\n  {%/ leader %}\n  {%^ leader %}\n  <div style=\"min-height:1.3em;\">&nbsp;</div>\n  {%/ leader %}\n{%/ yourTurn %}\n\n<hr>\n\n<div style=\"font-size: 1.5em;\">\n{{!!dice_username}} rolls:\n</div>\n\n<div style=\"font-size: 2.5em; line-height: 1.3em;\">\n{%# dice.titles %}\n  {{ {%& . %} }}\n{%/ dice.titles %}\n = {{!!dice_sum}}\n</div>\n\n<div style=\"font-size: 1.5em;\">\n{{!!prevInfo}}<br><br>\n{{!!dice_outcome}}<br>\n</div>\n\n|Player|Won|Lost|Tie|Chg|Score|h\n{%# scores %}\n|{%# leader %}* {%/ leader %}{% username %}|{% won %}|{% lost %}|{% tie %}|{% chg %}|{% score %}|\n{%/ scores %}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 220,
        "y": 420,
        "wires": [
            [
                "c6fe024d027e224d"
            ]
        ]
    },
    {
        "id": "3c3235632a2801e6",
        "type": "link in",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 115,
        "y": 250,
        "wires": [
            [
                "64b77433f374854a"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "64b77433f374854a",
        "type": "switch",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "dice roll",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dice roll",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 250,
        "wires": [
            [
                "33134899afe62741"
            ]
        ]
    },
    {
        "id": "33134899afe62741",
        "type": "function",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "Roll the dice",
        "func": "/*\nRolls requested number of dice placing the results in msg.dice\n*/\n\n// Tiddler name of each dice given number of 'spots' (called 'pips')\n// Icons from https://morosanuae.github.io/tw-icons/\n//  (search for 'dice')\nfunction getDiceIconTiddler(pips) {\n    return `$:/images/bootstrap/dice-${pips}-fill`;\n}\n\n// Gets random whole number between 1 and 6\n// https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\nfunction getRandomDie() {\n    let min = Math.ceil(1);\n    let max = Math.floor(6);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// Initialize dice roll object\nmsg.dice = {\n    username: msg.network.user.username,\n    clientid: msg.network.meta._clientid,\n    count: msg.network.client.currentTiddler.nbr_of_dice,\n    titles: [],\n    sum: 0,\n    list: ''\n};\n\n// Generate list of dice tiddler titles and sum them up\nfor (let i = 0; i < msg.dice.count; i++) {\n    let pips = getRandomDie();\n    msg.dice.titles.push(getDiceIconTiddler(pips));\n    msg.dice.list += msg.dice.list ? ` ${pips}` : `${pips}`;\n    msg.dice.sum += pips;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 250,
        "wires": [
            [
                "131aeb785c805e96"
            ]
        ]
    },
    {
        "id": "387d1976fbad2871",
        "type": "function",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "Session controls & \\n           · · Tally score ·  · ",
        "func": "// Dice session controls\n\n// Each client TiddlyWiki has server-side in-memory info by clientId\n//  This is where session data will be stored\nconst clientIds = global.get('clientIds');\n\n// Is this client a player?\nfunction clientIsPlayer(cid) {\n    return clientIds[cid].diceSession && clientIds[cid].diceSession.inDiceGame;\n}\n\n//  List of all player client ids\nfunction getListOfPlayers() {\n    var playerIds = [];\n    for (let cid in clientIds) {\n        if (clientIsPlayer(cid)) {\n            playerIds.push(cid);\n        }\n    }\n    return playerIds;\n}\n\n// Creates Dice Session Data\nfunction initSessionData(username, cid, reset) {\n    // Indicate client is watching dice rolls\n    if (clientIds[cid] && (reset || typeof clientIds[cid].diceSession !== 'object')) {\n        clientIds[cid].diceSession = {\n            username: username,\n            inDiceGame: true,\n            leader: false,\n            dice: {},\n            won: 0, lost: 0, tie: 0, chg: 0,\n            score: 0\n        };\n    }\n}\n\n// Increment player wins, losses, ties, and number die changed\nfunction setStats() {\n    if (msg.outcome.clientid.winner && clientIds[msg.outcome.clientid.winner]) {\n        clientIds[msg.outcome.clientid.winner].diceSession.won++;\n    }\n    if (msg.outcome.clientid.loser && clientIds[msg.outcome.clientid.loser]) {\n        clientIds[msg.outcome.clientid.loser].diceSession.lost++;\n    }\n    if (msg.outcome.clientid.tie1 && clientIds[msg.outcome.clientid.tie1]) {\n        clientIds[msg.outcome.clientid.tie1].diceSession.tie++;\n    }\n    if (msg.outcome.clientid.tie2 && clientIds[msg.outcome.clientid.tie2]) {\n        clientIds[msg.outcome.clientid.tie2].diceSession.tie++;\n    }\n    if (msg.outcome.clientid.chg && clientIds[msg.outcome.clientid.chg]) {\n        clientIds[msg.outcome.clientid.chg].diceSession.chg++;\n    }\n}\n\nfunction setPlayerTurn(cid, playerIds) {\n    var nbrPlayers = playerIds.length;\n    // When single player - is always 'your turn'\n    msg.yourTurn = nbrPlayers > 1 ? false : true;\n    // When clientId is not the current one it is their turn\n    if (cid !== msg.network.meta._clientid) {\n        msg.yourTurn = true;\n    }\n}\n\nfunction setPlayerDiceRoll(cid) {\n    clientIds[cid].diceSession.dice = JSON.parse(JSON.stringify(msg.dice));\n}\n\n// Tally scores\nfunction calcScore() {\n    var playerIds = getListOfPlayers();\n    var highScore = -1, leader = '';\n    // Calculate Scores\n    playerIds.forEach((cid) => {\n        let clientData = clientIds[cid].diceSession;\n        let score =\n            (clientData.won * 2)\n            + (clientData.lost * -1)\n            + (clientData.tie * 1)\n            + (clientData.chg * 0);\n        clientIds[cid].diceSession.score = score < 0 ? 0 : score;\n        \n        // Track highest score (leader)\n        clientIds[cid].diceSession.leader = false;\n        if (clientIds[cid].diceSession.score > highScore) {\n            highScore = clientIds[cid].diceSession.score;\n            leader = cid;\n        }\n    })\n    clientIds[leader].diceSession.leader = true;\n\n    var scores = [];\n    playerIds.forEach((cid) => {\n        scores.push(clientIds[cid].diceSession);\n    })\n    return scores;\n}\n\n// Loop thru the clientIds and send dice roll\n//  to clients that have joined the game \nfunction sendToDicePlayers() {\n    // Count the number of clients playing the game\n    var playerIds = getListOfPlayers();\n    msg.scores = calcScore();\n\n    // Send tiddler to all playing the game\n    playerIds.forEach((cid) => {\n        // msg.clientid is for Broadcasting to client\n        msg.clientid = cid;\n        msg.playername = clientIds[cid].diceSession.username;\n        // Remember this player's last roll\n        if (cid === msg.network.meta._clientid) {\n            setPlayerDiceRoll(cid);\n        }\n        setPlayerTurn(cid, playerIds);\n        msg.leader = clientIds[cid].diceSession.leader;\n        // send to next node\n        node.send([msg, null]);\n    })\n}\n\nfunction reset() {\n    var playerIds = getListOfPlayers();\n    var resetApproved = false;\n    playerIds.forEach((cid) => {\n        if (clientIds[cid].diceSession.leader && cid === msg.network.meta._clientid) {\n            resetApproved = true;\n        }\n    })\n    if (resetApproved) {\n        playerIds.forEach((cid, idx) => {\n            initSessionData(clientIds[cid].diceSession.username, cid, true);\n        })\n        msg.outcome = {\n            prevInfo: 'Reset!',\n            rollInfo: '',\n            clientid: {\n                winner: '',\n                loser: '',\n                tie1: '',\n                tie2: '',\n                chg: '',\n            }\n        }\n    }\n}\n\n\n// Insure have dice session data for this client\ninitSessionData(msg.network.user.username, msg.network.meta._clientid);\n\nif (msg.network.client.currentTiddler.reset === 'yes') {\n    reset();\n}\n\n// Increment player wins and losses\nsetStats();\n// Send dice roll to each player\nsendToDicePlayers();\nnode.done();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 330,
        "wires": [
            [
                "510dc6f6e07f9be4"
            ]
        ]
    },
    {
        "id": "f1ef5a7e371b1c7c",
        "type": "link out",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "Broadcast",
        "mode": "link",
        "links": [
            "85f96a4f808488c5"
        ],
        "x": 530,
        "y": 420,
        "wires": [],
        "l": true
    },
    {
        "id": "131aeb785c805e96",
        "type": "function",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "Outcome logic",
        "func": "// Previous roll is stored in node-red global context\nmsg.prevDice = global.get('prevDice');\n\n// Text to display abd client ids of results\nmsg.outcome = {\n    prevInfo: '&nbsp;',\n    rollInfo: '',\n    clientid: { winner: '', loser: '', tie1: '', tie2: '', chg: '' }\n}\n\n// Outcome logic\n//  Sets msg.outcome.prevInfo to text to display about previous roll\n//  returns text of the result when comparing the previous\n//    roll (msg.prevDice) to the players current roll (msg.dice)\n//\n// Note - the order of 'if' statements is important\nfunction rollOutcome() {\n    // No previous roll - so this is the first roll\n    if (!msg.prevDice) {\n        return 'First roll';\n    }\n    // Number of dice rolled has changed\n    if (msg.dice.count !== msg.prevDice.count) {\n        msg.outcome.prevInfo = 'Number of dice has changed';\n        msg.outcome.clientid.chg = msg.dice.clientid;\n        return '';\n    }\n    // Same user has rolled again\n    if (msg.dice.username === msg.prevDice.username) {\n        msg.outcome.prevInfo = `${msg.prevDice.username} re-roll!`;\n        return ``;\n    }\n\n    // Pre-load previous info text with previous roll to be beat\n    msg.outcome.prevInfo = ` against ${msg.prevDice.username}'s (${msg.prevDice.count} die) roll of ${msg.prevDice.sum}`\n\n    // Check for a tie\n    if (msg.dice.sum === msg.prevDice.sum) {\n        msg.outcome.clientid.tie1 = msg.dice.clientid;\n        msg.outcome.clientid.tie2 = msg.prevDice.clientid;\n        return 'A tie!';\n    }\n\n    // Check if players roll beats the previous roll\n    if (msg.dice.sum > msg.prevDice.sum) {\n        msg.outcome.clientid.winner = msg.dice.clientid;\n        msg.outcome.clientid.loser = msg.prevDice.clientid;\n        return `${msg.dice.username} wins!`;\n    }\n\n    // Must be that players roll does not beat the previous roll\n    msg.outcome.clientid.winner = msg.prevDice.clientid;\n    msg.outcome.clientid.loser = msg.dice.clientid;\n    return `${msg.dice.username} lost!`;\n}\n\n// Compare Players roll with previous roll\nmsg.outcome.rollInfo = rollOutcome();\n\n// Players dice roll to globaal context\n//  (when moving data from 'msg' to global context - insure is a copy)\nglobal.set('prevDice', JSON.parse(JSON.stringify(msg.dice)));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 250,
        "wires": [
            [
                "387d1976fbad2871"
            ]
        ]
    },
    {
        "id": "c6fe024d027e224d",
        "type": "function",
        "z": "8f4c8042c34e6b26",
        "g": "2384ad651173ae9e",
        "name": "cleanup",
        "func": "delete msg.dice;\ndelete msg.prevDice;\ndelete msg.outcome;\ndelete msg.scores;\ndelete msg.playername;\ndelete msg.yourTurn;\ndelete msg.leader;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "f1ef5a7e371b1c7c"
            ]
        ]
    },
    {
        "id": "b27ea02bc203e5f5",
        "type": "link in",
        "z": "e659339e762fe7e5",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 45,
        "y": 40,
        "wires": [
            [
                "934db7b26914d13d"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "934db7b26914d13d",
        "type": "switch",
        "z": "e659339e762fe7e5",
        "name": "rooms",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^rooms,.*$",
                "vt": "str",
                "case": true
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 130,
        "y": 40,
        "wires": [
            [
                "2b2c59048a21c639"
            ]
        ]
    },
    {
        "id": "2b2c59048a21c639",
        "type": "function",
        "z": "e659339e762fe7e5",
        "name": "Rooms \\n ·  join \\n · post \\n ·  leave \\n ·  show",
        "func": "/*\n * Chat application logic\n*/\n\n// Access to TiddlyWiki codebase\nconst $tw = global.get('$tw');\n\n// User and Rooms twiki databases\nconst usersDb = global.get('twikis').Users;\nconst roomsDb = global.get('twikis').Rooms;\n\n// Each connection has server-side in-memory info by clientId\n// Get information for this connection\nconst clientIds = global.get('clientIds');\nvar clientData = clientIds[msg.network.meta._clientid];\n\n// msg.network.user is same data that is on UserDb\n//  when msg was authorized \nconst userData = msg.network.user;\n\n// Get the client 'currentTiddler' tiddler\n//   that sent the request\nconst currentTiddler = msg.network.client.sender[0];\n\n// Initialize msg.payload which will hold data to client\n// Get the titles of the tiddlers in the Rooms twiki database\nmsg.payload = {};\nmsg.payload.roomnames = roomsDb.getTiddlers();\n\n// Parse request - using commas since room names can contain spaces\n// If not specified - the default is to show the rooms\nvar args = msg.topic.split(',');\nif (args.length < 2) {\n\targs = ['rooms', 'show'];\n}\n\n// Execute user's request\nexecRequest();\n\n// Exit - informing Node-RED this node is done with msg\nnode.done();\nreturn;\n\n// -------------------\n// Execute Request\n\n// Perform one of the following actions\nfunction execRequest() {\n\tvar action = args[1];\n\tswitch (action) {\n\t\tcase 'join': join(); break;\n\t\tcase 'post': post(); break;\n\t\tcase 'leave': leave(); break;\n\t\tcase 'show': show(); break;\n\t\tcase 'create': create(); break;\n\t\tdefault: show();\n\t}\n}\n\n// Join a room 'rooms,join,room name' - first output\nfunction join() {\n\t// Third parameter in args contains the room\n\tmsg.payload.room = args[2];\n\t// List of rooms joined is in 'currentTiddler' 'joined' field\n\tuserData.joined = currentTiddler.joined;\n\t// Get the content stored for this room\n\tmarkupContent(userData.userid);\n\t// Output to flow\n\tnode.send([msg, null, null, null]);\n}\n\n// Post a message to a room - second output\nfunction post() {\n\t// Third parameter in args contains the room\n\tmsg.payload.room = args[2];\n\t// Save the posted message in Rooms twiki database\n\tstorePost();\n\t// Send to  users that have joined the room\n\tsendToJoined();\n}\n\n// Leave a room - third output\nfunction leave() {\n\t// Third parameter in args contains the room\n\tmsg.payload.leave = args[2];\n\t// List of rooms joined is in 'currentTiddler' 'joined' field\n\tuserData.joined = currentTiddler.joined;\n\t// Output to flow\n\tnode.send([null, null, msg, null]);\n}\n\n// Show users join status of each room - fourth output\nfunction show() {\n\t// Update currentTiddler with list of rooms from UserDb\n\tcurrentTiddler.joined = userData.joined;\n\t// Get the joined rooms from the UserDb database\n\tvar joined = $tw.utils.parseStringArray(userData.joined) || [];\n\t// Send a 'join' msg for each room\n\tjoined.forEach((room) => {\n\t\targs[2] = room;\n\t\tjoin();\n\t});\n\tclientData.chatInitialized = true;\n\t// Output to flow\n\tnode.send([null, null, null, msg]);\n}\n\n// Create a new room\nfunction create() {\n\t// Insure 'currentTiddler' has 'createroom' field\n\tif (!currentTiddler.createroom) { return; }\n\t// Set args to join the room\n\targs = ['rooms', 'join', currentTiddler.createroom];\n\t// See if room already created\n\tconst roomDbData = JSON.parse(roomsDb.getTiddlersAsJson(currentTiddler.createroom));\n\t// Yes - already exists so join it\n\tif (roomDbData.length > 0) {\n\t\tjoin();\n\t\treturn;\n\t}\n\t// Not created - so add to the Rooms twiki database\n\troomsDb.addTiddler(new $tw.Tiddler(\n\t\t$tw.wiki.getCreationFields(),\n\t\t$tw.wiki.getModificationFields(),\n\t\t{\n\t\t\ttitle: currentTiddler.createroom,\n\t\t\ttext: \"\",\n\t\t\tcreator: userData.username\n\t\t}\n\t));\n\tmsg.payload.roomnames = roomsDb.getTiddlers();\n\t// Add this room to 'currentTiddler' joined field\n\tvar joined = $tw.utils.parseStringArray(currentTiddler.joined);\n\t$tw.utils.pushTop(joined, currentTiddler.createroom);\n\tcurrentTiddler.joined = $tw.utils.stringifyList(joined);\n\t// Join the newly created room\n\tjoin();\n\tshowNewRoom();\n}\n\n// -------------------\n// Helpers\n\n// Construct post\nfunction constructPost(posting) {\n\t// Current date/time in TW format\n\t// Create a tiddler with the 'created' field \n\tvar dateTiddler = new $tw.Tiddler($tw.wiki.getCreationFields());\n\tvar postDate = dateTiddler.getFieldString('created');\n\n\t// Create post\n\treturn `<hr class=\"poc2go-hr\" style=\"clear: both;\">\\n` +\n\t\t`<div class=\"post-sender-${userData.userid}\">` +\n\t\t`${userData.username} <span class=\"post-time\">` +\n\t\t`<$list filter=\"[[${postDate}]format:date[0DD mmm - 0hh:0mm:0ss]]\"><$text text=<<currentTiddler>>/></$list> ` +\n\t\t`</span><br><span>\\n\\n` +\n\t\tposting.text +\n\t\t'\\n</span></div>';\n}\n\n// Add post to the room in Rooms twiki database\nfunction storePost() {\n\t// Get the messsages already posted to the room\n\tvar roomTiddler = roomsDb.getTiddler(msg.payload.room);\n\tvar previousContent = roomTiddler.getFieldString('text')\n\t// Get message being posted sent by client\n\tconst posting = msg.network.client.tiddlers[0] || { text: '' };\n\t// Wrap message into HTML and TW widgets for display\n\tvar roomContent = previousContent + constructPost(posting);\n\t// Update the Rooms twiki database\n\troomsDb.addTiddler(new $tw.Tiddler(roomTiddler, { text: roomContent }));\n}\n\n// Markup room content based on the user being the sender or recipient\nfunction markupContent(userid) {\n\t// Get the messsages already posted to the room\n\tvar roomTiddler = roomsDb.getTiddler(msg.payload.room);\n\tvar content = roomTiddler.getFieldString('text')\n\t// Get creator to display with the room\n\tmsg.payload.creator = roomTiddler.getFieldString('creator');\n\t// Class for sender (display  right) and recipientcl (display left)\n\tconst senderclass = new RegExp(`class=\"post-sender-${userid}\"`, 'g');\n\tconst recipientclass = new RegExp(`class=\"post-sender-[^\"]+\"`, 'g');\n\t// Replace class placeholder with sender/recipient based on given userid\n\tmsg.payload.roomContent = content\n\t\t.replace(senderclass, `class=\"poc2go-room-post-sender\"`)\n\t\t.replace(recipientclass, `class=\"poc2go-room-post-recipient\"`);\n}\n\n// Loop thru the clientIds and send post to clients that have joined the room \nfunction sendToJoined() {\n\tfor (let cid in clientIds) {\n\t\t// client using chat system and not the client posting the message \n\t\tif (clientIds[cid].chatInitialized) {\n\t\t\t// See if user has joined the room\n\t\t\tif (userIsJoined(clientIds[cid].userid, msg.payload.room)) {\n\t\t\t\tmsg.clientid = cid;\n\t\t\t\tmarkupContent(clientIds[cid].userid);\n\t\t\t\tnode.send([null, msg, null, null]);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Loop thru the clientIds and send post to clients that have joined the room \nfunction showNewRoom() {\n\tvar originalNetwork = JSON.parse(JSON.stringify(msg.network));\n\tfor (let cid in clientIds) {\n\t\t// client using chat system\n\t\tif (clientIds[cid].chatInitialized) {\n\t\t\tmsg.clientid = cid;\n\t\t\tvar user = usersDb.getTiddler(clientIds[cid].userid);\n\t\t\tif (user) {\n\t\t\t\tmsg.network.user = user.getFieldStrings();\n\t\t\t\tnode.send([null, null, null, msg]);\n\t\t\t}\n\t\t}\n\t}\n\tmsg.network = originalNetwork;\n}\n\n// Has user joined the room? \nfunction userIsJoined(userid, room) {\n\treturn usersDb.getTiddlerList(userid, 'joined').includes(room);\n}\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 147,
        "wires": [
            [
                "8154c40e02a24a45"
            ],
            [
                "409781d734b49ba9"
            ],
            [
                "579553b08ab3eb6f"
            ],
            [
                "768032b1dcfcd148"
            ]
        ],
        "outputLabels": [
            "Join",
            "Post",
            "Leave",
            "Show"
        ]
    },
    {
        "id": "911eeb7fcf10b4b8",
        "type": "debug",
        "z": "e659339e762fe7e5",
        "g": "068e97372887ec43",
        "name": "Show results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "8154c40e02a24a45",
        "type": "to-twiki",
        "z": "e659339e762fe7e5",
        "name": "Users Db add room",
        "twikiName": "Users",
        "fromTwikiName": "$tw.wiki",
        "field": "network.user",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 330,
        "y": 100,
        "wires": [
            [
                "9a19c39ceaa81097"
            ]
        ]
    },
    {
        "id": "b1bd6d4843367aba",
        "type": "set-network",
        "z": "e659339e762fe7e5",
        "name": "Display room",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/rooms/{% payload.room %}\ncaption: {% payload.room %}\nmustache: yes\ntags: TableOfContents\n\n\\define sendmsg()\n<<node-red 'rooms,post,{% payload.room %}' '[[$:/rooms/{% payload.room %}-post]]'>>\n<$action-setfield $tiddler=\"$:/rooms/{% payload.room %}-post\" $field=\"text\" $value=\"\"/>\n\\end\n\n<span style=\"float: right;\">room by {% payload.creator %}</span>\n<h2> {% payload.room %} </h2>\n\n<$scrollable class=\"room-tiddler-content\" bind=\"$:/poc2go/rooms/{% payload.room %}-position\">\n{{$:/rooms/{% payload.room %}-content}}\n</$scrollable>\n\n<hr style=\"clear: both;\">\n\n<$button actions=\"<<sendmsg>>\"> Post </$button> on ''{% payload.room %}'' from //{% network.user.username %}//\n<$button style=\"float: right;\" actions='<$action-sendmessage $message=\"tm-edit-tiddler\" $param=\"$:/rooms/{% payload.room %}-post\"/>' class=\"tc-btn-invisible tc-tiddlylink\"> {{$:/core/images/edit-button}}&nbsp;Edit as a tiddler</$button>\n\n<$edit-text tiddler=\"$:/rooms/{% payload.room %}-post\" class=\"post-textarea\" tag=\"textarea\" placeholder=\"Enter message\" focus=\"no\"/>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 850,
        "y": 140,
        "wires": [
            [
                "d3ae53f445977d03"
            ]
        ]
    },
    {
        "id": "193dc50c3509e49e",
        "type": "set-network",
        "z": "e659339e762fe7e5",
        "name": "Leave room",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/rooms/{% payload.leave %}\ncaption: {% payload.leave %}\nmustache: yes\ntags: \n\n!!! Room {% payload.leave %}\n\nNotice 'TableOfContents' has been removed from 'tags'\nso room comes off of the TOC\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 190,
        "wires": [
            [
                "d3ae53f445977d03"
            ]
        ]
    },
    {
        "id": "579553b08ab3eb6f",
        "type": "to-twiki",
        "z": "e659339e762fe7e5",
        "name": "Users Db leave room",
        "twikiName": "Users",
        "fromTwikiName": "$tw.wiki",
        "field": "network.user",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 370,
        "y": 190,
        "wires": [
            [
                "193dc50c3509e49e"
            ]
        ]
    },
    {
        "id": "9a19c39ceaa81097",
        "type": "set-network",
        "z": "e659339e762fe7e5",
        "name": "Room content",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/rooms/{% payload.room %}-content\nmustache: yes\n\n{% &payload.roomContent %}\n\n+======+\ntitle: $:/poc2go/rooms/{% payload.room %}-position\nmustache: yes\nscroll-left: 0\nscroll-top: 20000\n\n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 540,
        "y": 120,
        "wires": [
            [
                "13925b62d8a60166"
            ]
        ]
    },
    {
        "id": "a271d8c1c1865344",
        "type": "inject",
        "z": "e659339e762fe7e5",
        "g": "068e97372887ec43",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "824a0e2f6149e974"
            ]
        ]
    },
    {
        "id": "824a0e2f6149e974",
        "type": "from-twiki",
        "z": "e659339e762fe7e5",
        "g": "068e97372887ec43",
        "name": "",
        "twikiName": "Rooms",
        "toTwikiName": "$tw.wiki",
        "resetOnDeploy": false,
        "inputTask": "no operation",
        "outputFormat": "tiddlers",
        "field": "payload",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "file": "",
        "topic": "",
        "outputs": 1,
        "tostory": "false",
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "ce217325ac5781bf"
            ]
        ]
    },
    {
        "id": "ce217325ac5781bf",
        "type": "function",
        "z": "e659339e762fe7e5",
        "g": "068e97372887ec43",
        "name": "clear all posts",
        "func": "// Clear room client ids\nmsg.payload.forEach((room, idx) => {\n//    msg.payload[idx].roomclientids = '';\n//    delete msg.payload[idx].roomclientids;\n    msg.payload[idx].text = '';\n})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "6e07db47e20f3499"
            ]
        ]
    },
    {
        "id": "6e07db47e20f3499",
        "type": "to-twiki",
        "z": "e659339e762fe7e5",
        "g": "068e97372887ec43",
        "name": "",
        "twikiName": "Rooms",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 620,
        "y": 360,
        "wires": [
            [
                "911eeb7fcf10b4b8"
            ]
        ]
    },
    {
        "id": "13925b62d8a60166",
        "type": "switch",
        "z": "e659339e762fe7e5",
        "name": "Post?",
        "property": "clientid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "04895925eade208c"
            ],
            [
                "b1bd6d4843367aba"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "04895925eade208c",
        "type": "link out",
        "z": "e659339e762fe7e5",
        "name": "Broadcast",
        "mode": "link",
        "links": [
            "85f96a4f808488c5"
        ],
        "x": 840,
        "y": 100,
        "wires": [],
        "l": true
    },
    {
        "id": "87b8bf662de71d36",
        "type": "set-network",
        "z": "e659339e762fe7e5",
        "name": "Focus rooms",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: TableOfContents subtitle\nmustache: yes\n\n{% network.user.username %}\n+======+\ntitle: $:/poc2go/toc/selectedRoom\n\n$:/poc2go/rooms/show",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 970,
        "y": 260,
        "wires": [
            [
                "c1667f9bd1181880"
            ]
        ]
    },
    {
        "id": "1364cdc4760a5182",
        "type": "debug",
        "z": "e659339e762fe7e5",
        "g": "dc295cd74b452cfb",
        "name": "Show results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "5488295da0fa5e05",
        "type": "inject",
        "z": "e659339e762fe7e5",
        "g": "dc295cd74b452cfb",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "d476630a3668de5e"
            ]
        ]
    },
    {
        "id": "d476630a3668de5e",
        "type": "from-twiki",
        "z": "e659339e762fe7e5",
        "g": "dc295cd74b452cfb",
        "name": "",
        "twikiName": "Users",
        "toTwikiName": "$tw.wiki",
        "resetOnDeploy": false,
        "inputTask": "no operation",
        "outputFormat": "tiddlers",
        "field": "payload",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "file": "",
        "topic": "",
        "outputs": 1,
        "tostory": "false",
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 290,
        "y": 460,
        "wires": [
            [
                "1536ecba8f7ece1a"
            ]
        ]
    },
    {
        "id": "1536ecba8f7ece1a",
        "type": "function",
        "z": "e659339e762fe7e5",
        "g": "dc295cd74b452cfb",
        "name": "clear all joined",
        "func": "// Loop thru users\nmsg.payload.forEach((user, idx) => {\n    msg.payload[idx].joined = '';\n    msg.payload[idx].palette = '$:/palettes/Twilight-Node-Red';\n})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            [
                "5fb8a1d0bfbb9bc5"
            ]
        ]
    },
    {
        "id": "5fb8a1d0bfbb9bc5",
        "type": "to-twiki",
        "z": "e659339e762fe7e5",
        "g": "dc295cd74b452cfb",
        "name": "",
        "twikiName": "Users",
        "fromTwikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 620,
        "y": 460,
        "wires": [
            [
                "1364cdc4760a5182"
            ]
        ]
    },
    {
        "id": "d3ae53f445977d03",
        "type": "set-network",
        "z": "e659339e762fe7e5",
        "name": "Show rooms",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/poc2go/rooms/show\nmustache: yes\njoined: {% network.user.joined %}\ncaption: Rooms...\ntags: TableOfContents\n\n<div style=\"float: right;\">\n<$button actions=\"<<node-red 'rooms,reload'>>\" class=\"flow-editor-btn tc-btn-invisible tc-tiddlylink\"> Reload rooms </$button>\n</div>\n\n<$edit-text field=\"createroom\"/>\n<$button actions=\"<<node-red 'rooms,create'>>\"> Create </$button>\n\n<hr class=\"poc2go-hr\">\n\n{%# payload.roomnames %}\n<span class=\"room-titles\"><$checkbox listField=\"joined\" checked=\"{%.%}\" checkactions=\"<<node-red 'rooms,join,{%.%}'>>\" uncheckactions=\"<<node-red 'rooms,leave,{%.%}'>>\"> {%.%} </$checkbox></span>\n{%/ payload.roomnames %}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 790,
        "y": 190,
        "wires": [
            [
                "8a6ddf88f16201a8"
            ]
        ]
    },
    {
        "id": "8a6ddf88f16201a8",
        "type": "switch",
        "z": "e659339e762fe7e5",
        "name": "Create?",
        "property": "clientid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "761190764f5f719c"
            ],
            [
                "87b8bf662de71d36"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "761190764f5f719c",
        "type": "link out",
        "z": "e659339e762fe7e5",
        "name": "Broadcast",
        "mode": "link",
        "links": [
            "85f96a4f808488c5"
        ],
        "x": 960,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "c1667f9bd1181880",
        "type": "link out",
        "z": "e659339e762fe7e5",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 1075,
        "y": 260,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "57c7e27a6d3f23bd",
        "type": "switch",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "red",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "red",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "436833639fa5f502"
            ]
        ]
    },
    {
        "id": "93753a81a1769fdc",
        "type": "switch",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "docs",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "docs",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c138fe252fda56df"
            ]
        ]
    },
    {
        "id": "436833639fa5f502",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "[[TW5-Node-RED Flow Editor]]",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[[TW5-Node-RED Flow Editor]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "95871cedf9ff64b7"
            ]
        ]
    },
    {
        "id": "c138fe252fda56df",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "[[TW5-Node-RED Documentation]]",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[[TW5-Node-RED Documentation]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 400,
        "y": 140,
        "wires": [
            [
                "95871cedf9ff64b7"
            ]
        ]
    },
    {
        "id": "1bb0c6fc5d4b21c0",
        "type": "link in",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 85,
        "y": 120,
        "wires": [
            [
                "57c7e27a6d3f23bd",
                "93753a81a1769fdc"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "b943f50af5e3f0df",
        "type": "link out",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 765,
        "y": 120,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "95871cedf9ff64b7",
        "type": "link call",
        "z": "0481506d69936f4f",
        "g": "a6dd4e060820914b",
        "name": "",
        "links": [
            "7fd5bbf53ae9558b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "b943f50af5e3f0df"
            ]
        ]
    },
    {
        "id": "dd5ea46f096963b9",
        "type": "link in",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 45,
        "y": 420,
        "wires": [
            [
                "79eeb0034ac1c223"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "f0f050fbab58af8a",
        "type": "link out",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 935,
        "y": 420,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "e667374203ebd5d1",
        "type": "change",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "get gude name",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$replace(msg.topic, 'guide ', '')\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "9d1770651abfe79c"
            ]
        ]
    },
    {
        "id": "79eeb0034ac1c223",
        "type": "switch",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "guide",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^guide .*",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "e667374203ebd5d1"
            ]
        ]
    },
    {
        "id": "9d1770651abfe79c",
        "type": "switch",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "guides",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "client",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "server",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "879d7ea39eccc475"
            ],
            [
                "991c9c3a178ad4a2"
            ],
            [
                "9fa8762795ec4e5b"
            ]
        ]
    },
    {
        "id": "0d798af067a77746",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "Site subtitle",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/connect",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/SiteSubtitle\n\n{{$:/temp/tw5-node-red/netstat}}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 820,
        "y": 420,
        "wires": [
            [
                "f0f050fbab58af8a"
            ]
        ]
    },
    {
        "id": "879d7ea39eccc475",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "TNR User Guide",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/connect",
        "updtostory": true,
        "tostory": "true",
        "template": "title: User Guide\ntags: tw5-node-red\nclientId: <%network.meta._clientid%>\n\n<div style=\"float:left; margin-right:1em;\">\n    <!-- Logo -->\n    <p><img  style=\"width: 100px;\" src=\"/tw5-node-red-logo.png\"></p>\n\n    <!-- Credits -->\n    <p>\n        <$button class=\"poc2go-center-img\" to=\"$:/plugins/potofcoffee2go/tw5-node-red/credits/page\">\n            <img style=\"width: 100px;\" src=\"/images/packages/packages.png\"></$button>\n    </p>\n</div>\n\n<!-- Guides -->\n<$button actions=\"<<node-red 'guide user'>>\"> User Guide </$button>\n<$button actions=\"<<node-red 'guide client'>>\"> Client Guide </$button>\n<$button actions=\"<<node-red 'guide server'>>\"> Server Guide </$button>\n\n<!-- Dark, light, very dark Palettes -->\nPalettes:\n<$button actions=\"<<node-red 'dark'>>\"> Dark </$button>\n<$button actions=\"<<node-red 'light'>>\"> Light </$button>\n<$button actions=\"<<node-red 'fire'>>\"> Dev Dark </$button> ([[skplugins|http://skplugins.tiddlyspot.com/]])\n\n---\n\n<!-- TW5-Node-RED Plugin -->\n<$button actions=\"<<node-red 'plugin'>>\"> TW5-Node-RED Plugin </$button> more info about TW5-Node-RED\n\n<!-- Tiddlers composed into a single 'Book' tiddler -->\n<$button actions=\"<<node-red 'book'>>\"> Book </$button> Chapter 1 of a book about TiddlyWiki.\n\n<!-- Tiddlers of many $tw functions -->\n<$button actions=\"<<node-red 'twfndocs'>>\"> Function Docs </$button> TiddlyWiki functions available in 'function' nodes\n\n<!-- Tiddlers stored in GitHub GIST -->\n<$button actions=\"<<node-red 'get gist'>>\"> Get Hello World Gist</$button> a couple tiddlers in a GIST\n\n<!-- Large tiddlers from a sample csv file dowloaded from NASA -->\n<$button actions=\"<<node-red 'nasa'>>\">NASA TechPort Sample</$button> Large tiddler test\n\n<div style=\"clear: both;\">\n\n<!-- Read/Write tiddlers to a file given based on a tag -->  \n<$button actions=\"<<node-red 'refreshtagged myne'>>\"> Store by tag </$button> save tagged tiddlers to server\n\n<!-- Convert tiddler(s) to .tid or JSON format -->\n<$button actions=\"<<node-red 'to json'>>\"> Convert tiddler(s) </$button> to .tid and JSON format\n\n<!-- Sample topic tiddler -->\n<$button actions=\"<<node-red 'topic '>>\"> Topic Sample </$button> Generate Sample Tiddler for a topic\n\n<$button actions=\"<<node-red 'rooms refresh' '[tag[rooms]'>>\"> Rooms </$button> to-do\n\nThis tiddler <$button actions=\"<<node-red 'to debug' 'Message added to debug display'>>\"> to Node-Red debug</$button> display.\n\n---\n\nPlugins:\n\n|tc-table-no-border|k\n|<$button actions=\"<<node-red 'markdown plugin'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Markdown </$button> | [[TiddlyWiki|https://tiddlywiki.com/static/Markdown%2520Plugin.html]] |\n|<$button actions=\"<<node-red 'shiraz'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Shiraz plugin </$button> | [[Mohammad Rahmani|https://github.com/kookma]] |\n|<$button actions=\"<<node-red 'jd mob'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> JD Mobile Layout plugin </$button> | [[JD Mobile layout|http://j.d.simplemobile.tiddlyspot.com/]] |\n|<$button actions=\"<<node-red 'link-to-tabs'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> link-to-tabs plugin </$button> | [[WikiLabs link-to-tab|https://wikilabs.github.io/editions/link-to-tabs/]] |\n\n</div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "afd0070808d7b77f"
            ]
        ]
    },
    {
        "id": "991c9c3a178ad4a2",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "TNR Client Guide",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/connect",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Client Guide\ntags: tw5-node-red\nclientId: <%network.meta._clientid%>\n\n<div style=\"float:left; margin-right:1em;\">\n    <!-- Logo -->\n    <p><img  style=\"width: 100px;\" src=\"/tw5-node-red-logo.png\"></p>\n\n    <!-- Credits -->\n    <p>\n        <$button class=\"poc2go-center-img\" to=\"$:/plugins/potofcoffee2go/tw5-node-red/credits/page\">\n            <img style=\"width: 100px;\" src=\"/images/packages/packages.png\"></$button>\n    </p>\n</div>\n\n<!-- Guides -->\n<$button actions=\"<<node-red 'guide user'>>\"> User Guide </$button>\n<$button actions=\"<<node-red 'guide client'>>\"> Client Guide </$button>\n<$button actions=\"<<node-red 'guide server'>>\"> Server Guide </$button>\n\n<!-- Dark, light, very dark Palettes -->\nPalettes:\n<$button actions=\"<<node-red 'dark'>>\"> Dark </$button>\n<$button actions=\"<<node-red 'light'>>\"> Light </$button>\n<$button actions=\"<<node-red 'fire'>>\"> Dev Dark </$button> ([[skplugins|http://skplugins.tiddlyspot.com/]])\n\n---\n\n<!-- TW5-Node-RED Plugin -->\n<$button actions=\"<<node-red 'plugin'>>\"> TW5-Node-RED Plugin </$button> more info about TW5-Node-RED\n\n<!-- Tiddlers composed into a single 'Book' tiddler -->\n<$button actions=\"<<node-red 'book'>>\"> Book </$button> Chapter 1 of a book about TiddlyWiki.\n\n<!-- Tiddlers of many $tw functions -->\n<$button actions=\"<<node-red 'twfndocs'>>\"> Function Docs </$button> TiddlyWiki functions available in 'function' nodes\n\n<!-- Tiddlers stored in GitHub GIST -->\n<$button actions=\"<<node-red 'get gist'>>\"> Get Hello World Gist</$button> a couple tiddlers in a GIST\n\n<!-- Large tiddlers from a sample csv file dowloaded from NASA -->\n<$button actions=\"<<node-red 'nasa'>>\">NASA TechPort Sample</$button> Large tiddler test\n\n<div style=\"clear: both;\">\n\n<!-- Read/Write tiddlers to a file given based on a tag -->  \n<$button actions=\"<<node-red 'refreshtagged myne'>>\"> Store by tag </$button> save tagged tiddlers to server\n\n<!-- Convert tiddler(s) to .tid or JSON format -->\n<$button actions=\"<<node-red 'to json'>>\"> Convert tiddler(s) </$button> to .tid and JSON format\n\n<!-- Sample topic tiddler -->\n<$button actions=\"<<node-red 'topic '>>\"> Topic Sample </$button> Generate Sample Tiddler for a topic\n\n<$button actions=\"<<node-red 'rooms refresh' '[tag[rooms]'>>\"> Rooms </$button> to-do\n\nThis tiddler <$button actions=\"<<node-red 'to debug' 'Message added to debug display'>>\"> to Node-Red debug</$button> display.\n\n---\n\nPlugins:\n\n|tc-table-no-border|k\n|<$button actions=\"<<node-red 'markdown plugin'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Markdown </$button> | [[TiddlyWiki|https://tiddlywiki.com/static/Markdown%2520Plugin.html]] |\n|<$button actions=\"<<node-red 'shiraz'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Shiraz plugin </$button> | [[Mohammad Rahmani|https://github.com/kookma]] |\n|<$button actions=\"<<node-red 'jd mob'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> JD Mobile Layout plugin </$button> | [[JD Mobile layout|http://j.d.simplemobile.tiddlyspot.com/]] |\n|<$button actions=\"<<node-red 'link-to-tabs'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> link-to-tabs plugin </$button> | [[WikiLabs link-to-tab|https://wikilabs.github.io/editions/link-to-tabs/]] |\n\n</div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 620,
        "y": 420,
        "wires": [
            [
                "0d798af067a77746"
            ]
        ]
    },
    {
        "id": "9fa8762795ec4e5b",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "022d52b9f38c8589",
        "name": "TNR Server Guide",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/connect",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Server Guide\ntags: tw5-node-red\nclientId: <%network.meta._clientid%>\n\n<div style=\"float:left; margin-right:1em;\">\n    <!-- Logo -->\n    <p><img  style=\"width: 100px;\" src=\"/tw5-node-red-logo.png\"></p>\n\n    <!-- Credits -->\n    <p>\n        <$button class=\"poc2go-center-img\" to=\"$:/plugins/potofcoffee2go/tw5-node-red/credits/page\">\n            <img style=\"width: 100px;\" src=\"/images/packages/packages.png\"></$button>\n    </p>\n</div>\n\n<!-- Guides -->\n<$button actions=\"<<node-red 'guide user'>>\"> User Guide </$button>\n<$button actions=\"<<node-red 'guide client'>>\"> Client Guide </$button>\n<$button actions=\"<<node-red 'guide server'>>\"> Server Guide </$button>\n\n<!-- Dark, light, very dark Palettes -->\nPalettes:\n<$button actions=\"<<node-red 'dark'>>\"> Dark </$button>\n<$button actions=\"<<node-red 'light'>>\"> Light </$button>\n<$button actions=\"<<node-red 'fire'>>\"> Dev Dark </$button> ([[skplugins|http://skplugins.tiddlyspot.com/]])\n\n---\n\n<!-- TW5-Node-RED Plugin -->\n<$button actions=\"<<node-red 'plugin'>>\"> TW5-Node-RED Plugin </$button> more info about TW5-Node-RED\n\n<!-- Tiddlers composed into a single 'Book' tiddler -->\n<$button actions=\"<<node-red 'book'>>\"> Book </$button> Chapter 1 of a book about TiddlyWiki.\n\n<!-- Tiddlers of many $tw functions -->\n<$button actions=\"<<node-red 'twfndocs'>>\"> Function Docs </$button> TiddlyWiki functions available in 'function' nodes\n\n<!-- Tiddlers stored in GitHub GIST -->\n<$button actions=\"<<node-red 'get gist'>>\"> Get Hello World Gist</$button> a couple tiddlers in a GIST\n\n<!-- Large tiddlers from a sample csv file dowloaded from NASA -->\n<$button actions=\"<<node-red 'nasa'>>\">NASA TechPort Sample</$button> Large tiddler test\n\n<div style=\"clear: both;\">\n\n<!-- Read/Write tiddlers to a file given based on a tag -->  \n<$button actions=\"<<node-red 'refreshtagged myne'>>\"> Store by tag </$button> save tagged tiddlers to server\n\n<!-- Convert tiddler(s) to .tid or JSON format -->\n<$button actions=\"<<node-red 'to json'>>\"> Convert tiddler(s) </$button> to .tid and JSON format\n\n<!-- Sample topic tiddler -->\n<$button actions=\"<<node-red 'topic '>>\"> Topic Sample </$button> Generate Sample Tiddler for a topic\n\n<$button actions=\"<<node-red 'rooms refresh' '[tag[rooms]'>>\"> Rooms </$button> to-do\n\nThis tiddler <$button actions=\"<<node-red 'to debug' 'Message added to debug display'>>\"> to Node-Red debug</$button> display.\n\n---\n\nPlugins:\n\n|tc-table-no-border|k\n|<$button actions=\"<<node-red 'markdown plugin'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Markdown </$button> | [[TiddlyWiki|https://tiddlywiki.com/static/Markdown%2520Plugin.html]] |\n|<$button actions=\"<<node-red 'shiraz'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Shiraz plugin </$button> | [[Mohammad Rahmani|https://github.com/kookma]] |\n|<$button actions=\"<<node-red 'jd mob'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> JD Mobile Layout plugin </$button> | [[JD Mobile layout|http://j.d.simplemobile.tiddlyspot.com/]] |\n|<$button actions=\"<<node-red 'link-to-tabs'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> link-to-tabs plugin </$button> | [[WikiLabs link-to-tab|https://wikilabs.github.io/editions/link-to-tabs/]] |\n\n</div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 620,
        "y": 460,
        "wires": [
            [
                "0d798af067a77746"
            ]
        ]
    },
    {
        "id": "1a53e1db7536049c",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "b69ab7ee9538fda9",
        "name": "TiddlyWiki settings",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/SiteTitle\n\nTW5 Node Red\n+======+\ntitle: $:/config/Navigation/openLinkFromInsideRiver\n\nabove\n+======+\ntitle: $:/language/PluginReloadWarning\n\nPlease save on the server in directory `uibuilder/svr/tiddlywikis` {{$:/core/ui/Buttons/save-wiki}}<br>\n and reload {{$:/core/ui/Buttons/refresh}} to allow changes to ~JavaScript plugins to to take effect\n+======+\ntitle: $:/palette\n\n$:/palettes/Dev Fire\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "75ec1021e1b97a17"
            ]
        ]
    },
    {
        "id": "75ec1021e1b97a17",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "b69ab7ee9538fda9",
        "name": "tiddlers",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/connect",
        "updtostory": true,
        "tostory": "false",
        "template": "title: TW5-Node-RED\ntags: tw5-node-red\nclientId: <%network.meta._clientid%>\n\n<!-- Connection status -->\n{{$:/temp/tw5-node-red/netstat}}\n\n<div style=\"float:left; margin-right:1em;\">\n    <!-- Logo -->\n    <p><img  style=\"width: 100px;\" src=\"/tw5-node-red-logo.png\"></p>\n\n    <!-- Hello World Button -->\n    <p>\n        <$button class=\"poc2go-center-img\" actions=\"<<node-red 'hello'>>\"> Hello World </$button>\n    </p>\n\n    <!-- Credits -->\n    <p>\n        <$button class=\"poc2go-center-img\" to=\"$:/plugins/potofcoffee2go/tw5-node-red/credits/page\">\n            <img style=\"width: 100px;\" src=\"/images/packages/packages.png\"></$button>\n    </p>\n</div>\n\n<!-- Guides -->\n<$button actions=\"<<node-red 'guide user'>>\"> User Guide </$button>\n<$button actions=\"<<node-red 'guide client'>>\"> Client Guide </$button>\n<$button actions=\"<<node-red 'guide server'>>\"> Server Guide </$button>\n\n<!-- Dark, light, very dark Palettes -->\nPalettes:\n<$button actions=\"<<node-red 'dark'>>\"> Dark </$button>\n<$button actions=\"<<node-red 'light'>>\"> Light </$button>\n<$button actions=\"<<node-red 'fire'>>\"> Dev Dark </$button> ([[skplugins|http://skplugins.tiddlyspot.com/]])\n\n---\n\nImport/Export Markdown Documentation\n\n<$button actions=\"<<node-red 'importmd ./public/docs/guides/user/user.md'>>\"> import user.md </$button>\n<$button actions=\"<<node-red 'exportmd ./public/docs/guides/user/user.md' '[tag[user.md]]'>>\"> export user.md </$button>\n\n<$button actions=\"<<node-red 'importmd ./public/docs/apps/redrum/redrum.md'>>\"> import redrum.md </$button>\n<$button actions=\"<<node-red 'exportmd ./public/docs/apps/redrum/redrum.md' '[tag[redrum.md]]'>>\"> export redrum.md </$button>\n\n---\n\n<!-- TW5-Node-RED stuff -->\n<$button actions=\"<<node-red 'stuff'>>\"> TW5-Node-RED Stuff </$button> more stuff\n\n<!-- TW5-Node-RED Plugin -->\n<$button actions=\"<<node-red 'plugin'>>\"> TW5-Node-RED Plugin </$button> more info about TW5-Node-RED\n\n<!-- Tiddlers composed into a single 'Book' tiddler -->\n<$button actions=\"<<node-red 'book'>>\"> Book </$button> Chapter 1 of a book about TiddlyWiki.\n\n<!-- Tiddlers of many $tw functions -->\n<$button actions=\"<<node-red 'twfndocs'>>\"> Function Docs </$button> TiddlyWiki functions available in 'function' nodes\n\n<!-- Tiddlers stored in GitHub GIST -->\n<$button actions=\"<<node-red 'get gist'>>\"> Get Hello World Gist</$button> a couple tiddlers in a GIST\n\n<!-- Large tiddlers from a sample csv file dowloaded from NASA -->\n<$button actions=\"<<node-red 'nasa'>>\">NASA TechPort Sample</$button> Large tiddler test\n\n<div style=\"clear: both;\">\n\n<!-- Read/Write tiddlers to a file given based on a tag -->  \n<$button actions=\"<<node-red 'refreshtagged myne'>>\"> Store by tag </$button> save tagged tiddlers to server\n\n<!-- Convert tiddler(s) to .tid or JSON format -->\n<$button actions=\"<<node-red 'to json'>>\"> Convert tiddler(s) </$button> to .tid and JSON format\n\n<!-- Sample topic tiddler -->\n<$button actions=\"<<node-red 'topic '>>\"> Topic Sample </$button> Generate Sample Tiddler for a topic\n\n<$button actions=\"<<node-red 'rooms refresh' '[tag[rooms]'>>\"> Rooms </$button> to-do\n\nThis tiddler <$button actions=\"<<node-red 'to debug' 'Message added to debug display'>>\"> to Node-Red debug</$button> display.\n\n---\n\nPlugins:\n\n|tc-table-no-border|k\n|<$button actions=\"<<node-red 'markdown plugin'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Markdown </$button> | [[TiddlyWiki|https://tiddlywiki.com/static/Markdown%2520Plugin.html]] |\n|<$button actions=\"<<node-red 'shiraz'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> Shiraz plugin </$button> | [[Mohammad Rahmani|https://github.com/kookma]] |\n|<$button actions=\"<<node-red 'jd mob'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> JD Mobile Layout plugin </$button> | [[JD Mobile layout|http://j.d.simplemobile.tiddlyspot.com/]] |\n|<$button actions=\"<<node-red 'link-to-tabs'>>\" class=\"tc-btn-invisible tc-tiddlylink\"> link-to-tabs plugin </$button> | [[WikiLabs link-to-tab|https://wikilabs.github.io/editions/link-to-tabs/]] |\n\n</div>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 600,
        "y": 260,
        "wires": [
            [
                "2b699ce7937556b8"
            ]
        ]
    },
    {
        "id": "1a0a7904264b6dd3",
        "type": "switch",
        "z": "0481506d69936f4f",
        "g": "b69ab7ee9538fda9",
        "name": "tw5-node-red app",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "tw5-node-red app",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 260,
        "wires": [
            [
                "1a53e1db7536049c"
            ]
        ]
    },
    {
        "id": "821955a316a5b4d1",
        "type": "link in",
        "z": "0481506d69936f4f",
        "g": "b69ab7ee9538fda9",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 105,
        "y": 260,
        "wires": [
            [
                "1a0a7904264b6dd3"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "2b699ce7937556b8",
        "type": "link out",
        "z": "0481506d69936f4f",
        "g": "b69ab7ee9538fda9",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 715,
        "y": 260,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "0c32555e2c9829c1",
        "type": "link call",
        "z": "0481506d69936f4f",
        "g": "1d4bc70456acd7ba",
        "name": "",
        "links": [
            "05fe6cb33e33ae93"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "45b27da691ddd601"
            ]
        ]
    },
    {
        "id": "d1cb8f6bba82cf91",
        "type": "link in",
        "z": "0481506d69936f4f",
        "g": "1d4bc70456acd7ba",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 185,
        "y": 660,
        "wires": [
            [
                "4e810fa7d9a7b1c4"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "45b27da691ddd601",
        "type": "link out",
        "z": "0481506d69936f4f",
        "g": "1d4bc70456acd7ba",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 715,
        "y": 660,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "4e810fa7d9a7b1c4",
        "type": "switch",
        "z": "0481506d69936f4f",
        "g": "1d4bc70456acd7ba",
        "name": "plugin",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "plugin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 660,
        "wires": [
            [
                "0c32555e2c9829c1"
            ]
        ]
    },
    {
        "id": "732bf9ecdfc9df63",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "About TW5-Node-RED ",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[[$:/plugins/potofcoffee2go/tw5-node-red]]",
        "field": "payload",
        "file": "public/tiddlers/install/buildplugin/How to create plugins in the browser.json",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/state/plugin-info-156448408-$:/plugins/potofcoffee2go/tw5-node-red--303101393\ncomment: Plugin default tab to display\n\ntoys\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/docs/page\ncaption: TNR Docs\ntags: tw5-node-red\ntype: text/vnd.tiddlywiki\n\n<$button actions=\"<<node-red 'docs'>>\"> Documentation </$button>\nTW5-Node-RED Documentation\n\n<$button actions=\"<<node-red 'red'>>\"> Node-RED Editor </$button>\nNode-Red flow editor\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/toys/page\ncaption: TNR Toys\ntags: tw5-node-red\n\nView this tiddler [[TW5-Node-RED]]\n\n{{TW5-Node-RED}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/tools/page\ncaption: TNR Tools\ntags: tw5-node-red\ntype: text/vnd.tiddlywiki\n\n<$button actions=\"<<node-red 'to tid' '[[tw5-node-red]]'>>\"> Convert Tiddler </$button>\nDisplay a tiddler in tid or JSON format\n\n<$button actions=\"<<node-red 'to debug' '[[tw5-node-red]]'>>\"> to debug </$button>\nDisplay the Node-Red debug msg\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/license/page\ncaption: TNR License\ntags: tw5-node-red\ntype: text/vnd.tiddlywiki\n\n<pre><code>Copyright [2024] Kim I. McKinley\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this plugin except in compliance with the License.\nYou may obtain a copy of the License at\n\n    [ext[license.html|/license.html]]\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": true,
        "fieldIsX": false,
        "x": 500,
        "y": 820,
        "wires": [
            [
                "35b92a1440e5cc09"
            ]
        ]
    },
    {
        "id": "0f50d74a1682b4e9",
        "type": "function",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "repackPlugin",
        "func": "const $tw = global.get('$tw');\n\n$tw.utils.repackPlugin(\"$:/plugins/potofcoffee2go/tw5-node-red\", [\n    \"$:/plugins/potofcoffee2go/tw5-node-red/readme\",\n    \"$:/plugins/potofcoffee2go/tw5-node-red/settings\",\n    \"$:/plugins/potofcoffee2go/tw5-node-red/docs\",\n    \"$:/plugins/potofcoffee2go/tw5-node-red/toys\",\n    \"$:/plugins/potofcoffee2go/tw5-node-red/tools\",\n    \"$:/plugins/potofcoffee2go/tw5-node-red/credits\",\n    \"$:/plugins/potofcoffee2go/tw5-node-red/license\"\n]);\n\nmsg.payload = JSON.parse($tw.wiki.getTiddlerAsJson('$:/plugins/potofcoffee2go/tw5-node-red'));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 820,
        "wires": [
            [
                "f491cc3db92cc626"
            ]
        ]
    },
    {
        "id": "da7b525e9244bad9",
        "type": "to-twiki",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "TW5-Node-RED Plugin template",
        "twikiName": "$tw.wiki",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "title: $:/plugins/potofcoffee2go/tw5-node-red\ncaption: TW5-Node-RED Plugin\ndependents: \nlist: readme settings docs toys tools credits license\nauthor: PotOfCoffee2Go\ndescription: Connect TiddlyWiki to Node-RED server\nname: TW5-Node-RED\nplugin-type: plugin\ntype: application/json\nstability: STABILITY_1_EXPERIMENTAL\nversion: 0.1.5\ntags: tw5-node-red\n\n{ \"tiddlers\": {} }\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/readme\ncaption: readme\nauthor: PotOfCoffee2Go\ntags: tw5-node-red\n\nView this tiddler [[tw5-node-red]]\n\n{{tw5-node-red}}\n\n{{·node-red·}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/settings\ncaption: settings\nauthor: PotOfCoffee2Go\ntags: ·node-red· tw5-node-red\n\nView this tiddler [[Settings|$:/tw5-node-red/settings]]\n\n{{$:/plugins/potofcoffee2go/tw5-node-red/settings/page}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/docs\ncaption: docs\nauthor: PotOfCoffee2Go\ntags: ·node-red· tw5-node-red\n\n{{$:/plugins/potofcoffee2go/tw5-node-red/docs/page}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/toys\ncaption: toys\nauthor: PotOfCoffee2Go\ntags: ·node-red· tw5-node-red\n\n{{$:/plugins/potofcoffee2go/tw5-node-red/toys/page}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/tools\ncaption: tools\nauthor: PotOfCoffee2Go\ntags: ·node-red· tw5-node-red\n\n{{$:/plugins/potofcoffee2go/tw5-node-red/tools/page}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/credits\ncaption: credits\nauthor: PotOfCoffee2Go\ntags: ·node-red· tw5-node-red\n\n{{$:/plugins/potofcoffee2go/tw5-node-red/credits/page}}\n\n+======+\ntitle: $:/plugins/potofcoffee2go/tw5-node-red/license\ncaption: license\nauthor: PotOfCoffee2Go\ntags: ·node-red· tw5-node-red\n\n{{$:/plugins/potofcoffee2go/tw5-node-red/license/page}}\n\n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 570,
        "y": 760,
        "wires": [
            [
                "0f50d74a1682b4e9"
            ]
        ],
        "info": "Add the plugin tiddlers to $tw.wiki so the call\nto repackPlugin can find them.\n"
    },
    {
        "id": "05fe6cb33e33ae93",
        "type": "link in",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "Generate TW5-Node-RED plugin",
        "links": [],
        "x": 280,
        "y": 760,
        "wires": [
            [
                "da7b525e9244bad9"
            ]
        ],
        "l": true
    },
    {
        "id": "205fb0492ffcd399",
        "type": "link out",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "Return",
        "mode": "return",
        "links": [],
        "x": 705,
        "y": 820,
        "wires": []
    },
    {
        "id": "f491cc3db92cc626",
        "type": "set-network",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "Show plugin tiddler?",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[[$:/plugins/potofcoffee2go/tw5-node-red]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 355,
        "y": 820,
        "wires": [
            [
                "732bf9ecdfc9df63"
            ]
        ],
        "l": false
    },
    {
        "id": "35b92a1440e5cc09",
        "type": "function",
        "z": "0481506d69936f4f",
        "g": "b79d45a9b7037362",
        "name": "function 2",
        "func": "msg.network.server.storylist = ['$:/plugins/potofcoffee2go/tw5-node-red'];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 645,
        "y": 820,
        "wires": [
            [
                "205fb0492ffcd399"
            ]
        ],
        "l": false
    },
    {
        "id": "ade20181c7188aac",
        "type": "read-tiddlers",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "topic": "",
        "path": "public/tiddlers/book/chapter01",
        "tofield": "payload",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "ec9f46b29cb3b56b"
            ]
        ]
    },
    {
        "id": "1b2a0af6555deff5",
        "type": "inject",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "ade20181c7188aac"
            ]
        ]
    },
    {
        "id": "4ec155b2a42b63ac",
        "type": "inject",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "daabecefdfa8ef8c"
            ]
        ]
    },
    {
        "id": "daabecefdfa8ef8c",
        "type": "edit-tiddlers",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "topic": "",
        "tofield": "payload",
        "template": "title: One tiddler\n\ntiddler number One\n+======+\ntitle: Two tiddler\n\ntiddler number Two\n",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "ec9f46b29cb3b56b"
            ]
        ]
    },
    {
        "id": "acdd64069d2ce74f",
        "type": "get-network",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "payload",
        "file": "",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "ec9f46b29cb3b56b"
            ]
        ]
    },
    {
        "id": "2c2ac8fc7793332b",
        "type": "set-network",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: One tiddler\n\ntiddler number One\n+======+\ntitle: Two tiddler\n\ntiddler number Two\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 480,
        "y": 200,
        "wires": [
            [
                "ec9f46b29cb3b56b"
            ]
        ]
    },
    {
        "id": "355bc4ad4fab0d98",
        "type": "to-twiki",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "twikiName": "Test",
        "fromTwikiName": "$tw.wiki",
        "field": "",
        "file": "",
        "resetOnDeploy": false,
        "inputTask": "addTiddlers",
        "outputFormat": "passthru",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "topic": "",
        "outputs": 1,
        "template": "title: One tiddler\n\ntiddler number One\n+======+\ntitle: Two tiddler\n\ntiddler number Two\n",
        "clear": true,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "8f2bf0ad406da0c3"
            ]
        ]
    },
    {
        "id": "4bae07537883976f",
        "type": "from-twiki",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "twikiName": "Test",
        "toTwikiName": "$tw.wiki",
        "resetOnDeploy": false,
        "inputTask": "no operation",
        "outputFormat": "tiddlers",
        "field": "test",
        "networkfield": "network.client.tiddlers",
        "useListener": false,
        "filter": "[all[]]",
        "file": "",
        "topic": "",
        "outputs": 1,
        "tostory": "false",
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 280,
        "y": 280,
        "wires": [
            [
                "8f2bf0ad406da0c3"
            ]
        ]
    },
    {
        "id": "5166c7a97c16c913",
        "type": "inject",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "inject client tiddlers",
        "props": [
            {
                "p": "network.client.tiddlers",
                "v": "[{\"title\":\"Tiddler number one\",\"text\":\"text of tiddler one\"},{\"title\":\"Tiddler number two\",\"text\":\"text of tiddler two\"}]",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "acdd64069d2ce74f"
            ]
        ]
    },
    {
        "id": "88b0d2c8cff6fdb6",
        "type": "inject",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "2c2ac8fc7793332b"
            ]
        ]
    },
    {
        "id": "92a14e0025f46ad4",
        "type": "inject",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "355bc4ad4fab0d98"
            ]
        ]
    },
    {
        "id": "1ae4c97d2ec295ea",
        "type": "inject",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "4bae07537883976f"
            ]
        ]
    },
    {
        "id": "ec9f46b29cb3b56b",
        "type": "debug",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "Show msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "8f2bf0ad406da0c3",
        "type": "link call",
        "z": "e2bd9fbf5969d4ef",
        "g": "f89444a08d4ee71f",
        "name": "",
        "links": [
            "2ffe59e5768f9620"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "ec9f46b29cb3b56b"
            ]
        ]
    },
    {
        "id": "f15b36736dfbab83",
        "type": "link in",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 45,
        "y": 160,
        "wires": [
            [
                "f19c3572b6a925db",
                "b75c78df1df07729"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "ba2b1aab05d32cb7",
        "type": "link out",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 1045,
        "y": 140,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "e3433e90b1d5cb91",
        "type": "set-network",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "TOC of markdown",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: TOC - <%bookName%>\ntags: \n\n\\define import()\n<$action-deletetiddler $filter=\"[tag[<%bookName%>]]\"/>\n<<node-red 'importmd <%{filename}%>' '[tag[<%bookName%>]]'>>\n\\end\n\\define export()\n<<node-red 'exportmd <%{filename}%>' '[tag[<%bookName%>]]'>>\n<$action-deletetiddler $filter=\"[tag[<%bookName%>]] [[<%bookName%>]] [[<%bookName%>-root]]\"/>\n\\end\n\\define update()\n<<export>>\n<<import>>\n\\end\n\n<%#mdUrl%>\n<h3>&nbsp;</h3>\n<%/mdUrl%>\n<%^mdUrl%>\n<h3>Markdown document is in tiddler [[<%bookName%>]].</h3>\n<%/mdUrl%>\n\n\n<$button to=\"<%bookName%>\"> {{$:/core/images/file}} Document </$button>\n&nbsp;\n<$button actions=\"<<import>>\" > {{$:/images/bootstrap/journal-arrow-down}} Import </$button>\n&nbsp;\n<$button actions=\"<<export>>\" > {{$:/images/bootstrap/journal-arrow-up}} Export </$button>\n&nbsp;\n<$button actions=\"<<update>>\" > {{$:/images/coreui-icons/free/cil-wrap-text}} Update </$button>\n\n<%#mdUrl%>\n&nbsp;\n<%/mdUrl%>\n<%^mdUrl%>\n<$link to={{$:/temp/toc/selectedTiddler/<%bookName%>}}/>\n<%/mdUrl%>\n\n<details open class=\"poc2go-details\">\n<summary class=\"poc2go-summary\">Preview</summary>\n<div>\n  <div>\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"<%bookName%>-root\"\n\tselectedTiddler=\"$:/temp/toc/selectedTiddler/<%bookName%>\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>'test.md' has been exported as Markdown to '.&#x2F;public&#x2F;markdown&#x2F;test.md'.</p>\"\n\ttemplate=\"$:/poc2go/tw5-node-red/redrum/toc/template/view\"\n/>\n\n  </div>\n</div>\n</details>\n\n<details class=\"poc2go-details\">\n<summary class=\"poc2go-summary\">Editor</summary>\n<div>\n  <div>\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"<%bookName%>-root\"\n\tselectedTiddler=\"$:/temp/toc/selectedTiddler/<%bookName%>\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>'test.md' has been exported as Markdown to '.&#x2F;public&#x2F;markdown&#x2F;test.md'.</p>\"\n\ttemplate=\"$:/poc2go/tw5-node-red/redrum/toc/template/edit\"\n/>\n  </div>\n</div>\n</details>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 985,
        "y": 140,
        "wires": [
            [
                "ba2b1aab05d32cb7"
            ]
        ],
        "l": false
    },
    {
        "id": "2ec6b7b7c3a25a61",
        "type": "catch",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "",
        "scope": [
            "5f5c6b5f9a960ac0",
            "cc6035c4afc521dd",
            "5bfebf877cb6658a",
            "a68d43c7b4646604"
        ],
        "uncaught": false,
        "x": 400,
        "y": 260,
        "wires": [
            [
                "d9c0a347dbd33f43"
            ]
        ]
    },
    {
        "id": "d9c0a347dbd33f43",
        "type": "set-network",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "Redrum error tiddler",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Redrum error\n\n<%{error.message}%>\n",
        "clear": true,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 485,
        "y": 260,
        "wires": [
            [
                "b4e52cdc03846635"
            ]
        ],
        "l": false
    },
    {
        "id": "b4e52cdc03846635",
        "type": "link out",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 535,
        "y": 260,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "5f5c6b5f9a960ac0",
        "type": "function",
        "z": "6034e62004ab9088",
        "g": "f308c5ab3c55d2f8",
        "name": "Markdown to TOC",
        "func": "/*\n * Convert Markdown document to TiddlyWiki 'toc' compatable tiddlers\n *   See https://tiddlywiki.com/static/Table-of-Contents%2520Macros.html\n *\n * Each markdown Header (ie: '#', '##', '###', ...) will become a tiddler\n *  (does not work with markdown '======' form of headers!)\n *\n * Create a book of data with Markdown content and values needed to\n *   construct tidders that represent the Markdown document\n * Data in the book is used to create TiddlyWiki 'toc' compatable tiddlers\n *\n * Tiddlers are created using a 'parent' / 'child' relationship\n *   (For example '##' is a parent of the '###'s children under it)\n * The children are 'tagged' with the parent tiddler title\n *    'toc' uses that to know what children are under the parent\n * The parent 'list' contains the tidders directly under it\n *   'list' is used by 'toc' to display tiddlers in proper order\n */\n// Book name - tag all content tiddlers\nconst bookName = msg.bookName || 'bookName'\n// Insure msg.bookName exists \nmsg.bookName = bookName;\n\n// All tiddlers transcluded into single tiddler\nconst mdDocLines = [];\nconst mdDocTiddler = {\n    title: bookName,\n    color: 'aliceblue',\n    text: ''\n};\n\n// Root tiddler for displaying 'toc'\nconst tocRootTitle = bookName + '-root';\n/*\n<div class=\"tc-table-of-contents\">\n<<toc-selective-expandable \"toc-root\">>\n</div>\n*/\nconst tocRoot = {\n    title: tocRootTitle,\n    tags: '',\n    list: '',\n    text: ''\n};\n\nconst book = []; \t\t// Markdown data and values to create tiddlers\nconst tiddlers = [];\t// Tiddlers created from the Markdown document\nvar curBook;\t\t\t// Current book element being loaded with data\n\n// Populate a book with Markdown content and data needed\n//  to create 'toc' compatable tiddlers\nfunction parseMdToBook(md) {\n    var seqnbr = 0;\n    // Check one line of the markdown document at a time\n    var lines = md.split('\\n');\n    // hack to remove extra new-line at end\n    if (lines[lines.length - 1].length === 0 && lines[lines.length - 2].length === 0) {\n        lines.pop();\n    }\n    for (let idx = 0; idx < lines.length; idx++) {\n        let line = lines[idx];\n        // First char is a Header?\n        if (line.length && line[0] === '#') {\n            // Last line of a level needs to be a blank line\n            if (idx && lines[idx - 1].length) {\n                curBook.textlines.push('\\n');\n            }\n            // Extract the title into title[1]\n            let title = /^#+ (.*)/.exec(line);\n            // Count the '#'s to set the level ('#'=1, '##'=2, etc)\n            let level = 0;\n            for (let i = 0; i < line.length; i++) {\n                if (line[i] !== '#') { break; }\n                level++;\n            }\n\n            if (curBook && level > curBook.level + 1) {\n                throw (levelError(idx, title, curBook));\n            }\n\n            let tags = bookName;\n            // Tag the level 1 ('#') Headers with root tiddler\n            //  and append this level 1 title in root's list\n            if (level === 1) {\n                tags += (' [[' + tocRootTitle + ']]');\n                tocRoot.list += (`[[${title[1]}]] `);\n            }\n\n            // Data needed to build TiddlyWiki TOC\n            book.push({\n                title: title[1],\n                tags,\n                textlines: [line + '\\n'],\n                filter: `[[${title[1]}]]`,\n                seqnbr: seqnbr++,\n                level,\n                list: ''\n            })\n            // Set current tiddler to append markdown lines\n            //  until next Header is encountered\n            curBook = book[book.length - 1];\n        } else { // not a Header\n            if (curBook) {\n                // Append lines until next Header\n                curBook.textlines.push(line + '\\n');\n            } else { // Document does not start with a level 1 header\n                // 'Root' needed to build 'toc' - allow blank lines\n                if (line) {\n                    throw (rootError(idx));\n                }\n            }\n        }\n    }\n}\n\n// Tag children with parent title and\n//  create a 'list' in parent tiddler of it's children\nfunction processList(curIdx) {\n    mdDocLines.push('{{' + book[curIdx].title + '}}');\n    let curLvl = book[curIdx].level;\n    for (let idx = curIdx + 1; idx < book.length && book[idx].level > curLvl; idx++) {\n        if (book[idx].level === (curLvl + 1)) {\n            book[idx].tags += ` ${book[curIdx].filter}`;\n            book[curIdx].list += (book[idx].filter + ' ');\n        }\n    }\n}\n\n// Read the Markdown document and process into tiddlers\nfunction markdownToToc() {\n    // Extract data from Markdown document\n    parseMdToBook(msg.payload);\n\n    // Tag children with parent title and 'list' children in parent\n    for (let idx = 0; idx < book.length - 1; idx++) {\n        processList(idx);\n    }\n\n    // The 'toc' root tiddler\n    tiddlers.push(tocRoot);\n    // Build tiddlers from data in the book\n    book.forEach(bk => {\n        tiddlers.push({\n            title: bk.title,\n            tags: bk.tags,\n            text: bk.textlines.join(''),\n            list: bk.list,\n            seqnbr: bk.seqnbr,\n            level: bk.level,\n            type: 'text/x-markdown'\n        });\n    })\n\n    // All tiddlers transcluded into single tiddler\n    mdDocTiddler.text = mdDocLines.join('\\n');\n    tiddlers.push(mdDocTiddler);\n\n    msg.payload = tiddlers;\n    node.send(msg);\n    node.done();\n}\n\nfunction levelError(idx, title, curBook, bookName) {\n    return `Error: Header at line ${idx + 1} skipped a level\n\nFrom level '${'########'.slice(-curBook.level)} ${curBook.title}' to level '${title[0]}'\n\n> Although allowed in Markdown, Redrum can not build a TOC if header levels are skipped\n\nChange '${title[0]}' header down a level to '${title[0].substring(1)}' or\n\nPlace a '${'########'.slice(-(curBook.level + 1))} Header' just before '${title[0]}', then\nImporting again should fix the problem.\n`\n}\n\nfunction rootError(idx) {\n    return `Error: Missing starting level 1 ('#') Header at line ${idx + 1}. Must be\nfirst Header in markdown file and before any text.\n\n> Although allowed in Markdown, Redrum can not build a TOC without a 'root'.\n\nPlace a '# Welcome' or something before line ${idx + 1}.\n\nThen Importing again should fix the problem.\n`\n}\n\n\nmarkdownToToc();\n\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 100,
        "wires": [
            [
                "97a964d117e03b3d"
            ]
        ]
    },
    {
        "id": "cc6035c4afc521dd",
        "type": "file in",
        "z": "6034e62004ab9088",
        "g": "f308c5ab3c55d2f8",
        "name": "read .md file",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 100,
        "wires": [
            [
                "5f5c6b5f9a960ac0"
            ]
        ]
    },
    {
        "id": "f19c3572b6a925db",
        "type": "switch",
        "z": "6034e62004ab9088",
        "g": "f308c5ab3c55d2f8",
        "name": "importmd",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^importmd .*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "b7d587070cb34dd6"
            ]
        ]
    },
    {
        "id": "b7d587070cb34dd6",
        "type": "change",
        "z": "6034e62004ab9088",
        "g": "f308c5ab3c55d2f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$replace(msg.topic, /importmd |readmd /, '', 1)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "bookName",
                "pt": "msg",
                "to": "$split(msg.topic, '/')[-1]\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "cc6035c4afc521dd"
            ]
        ]
    },
    {
        "id": "b75c78df1df07729",
        "type": "switch",
        "z": "6034e62004ab9088",
        "g": "b42caa0cfba51278",
        "name": "exportmd",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^exportmd .*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "4a07fb4c38b509c2"
            ]
        ]
    },
    {
        "id": "4a07fb4c38b509c2",
        "type": "change",
        "z": "6034e62004ab9088",
        "g": "b42caa0cfba51278",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "$replace(msg.topic, 'exportmd ', '', 1)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "bookName",
                "pt": "msg",
                "to": "$split(msg.topic, '/')[-1]\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "mdUrl",
                "pt": "msg",
                "to": "$replace(\t  $replace(msg.topic, 'exportmd ./public', '', 1),\t  $split(msg.topic,'/')[-1], 'index.html?n=',1\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "1aa79f40276ef4a7"
            ]
        ]
    },
    {
        "id": "1aa79f40276ef4a7",
        "type": "get-network",
        "z": "6034e62004ab9088",
        "g": "b42caa0cfba51278",
        "name": "markdown tiddlers",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "mdTiddlers",
        "file": "",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 465,
        "y": 200,
        "wires": [
            [
                "5bfebf877cb6658a"
            ]
        ],
        "l": false
    },
    {
        "id": "5bfebf877cb6658a",
        "type": "function",
        "z": "6034e62004ab9088",
        "g": "b42caa0cfba51278",
        "name": "TOC to Markdown",
        "func": "if (msg.mdTiddlers.length < 1) {\n    throw(`Error: No tiddlers tagged '${msg.bookName}' to build a markdown document`)\n}\n\n// Sort by the seqnbr\nmsg.mdTiddlers.sort((a, b) => parseInt(a.seqnbr) - parseInt(b.seqnbr));\n\n// Append text to markdown document\nvar mdDoc = '';\nmsg.mdTiddlers.forEach(tiddler => {\n    mdDoc += tiddler.text;\n})\n\n// Place in payload for writing\nmsg.payload = mdDoc;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 200,
        "wires": [
            [
                "a68d43c7b4646604"
            ]
        ]
    },
    {
        "id": "a68d43c7b4646604",
        "type": "file",
        "z": "6034e62004ab9088",
        "g": "b42caa0cfba51278",
        "name": "write md doc",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "2819f3aae80b6379"
            ]
        ]
    },
    {
        "id": "2819f3aae80b6379",
        "type": "set-network",
        "z": "6034e62004ab9088",
        "g": "d793a3fa098d8768",
        "name": "change templates",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "title: $:/SiteSubtitle\n\n<h1 style=\"margin: .1em 0 .1em 2.5em;\">Redrum</h1>\n\n+======+\ntitle: $:/poc2go/tw5-node-red/redrum/toc/template/view\n\n<%#mdUrl%>\n<p>'<%bookName%>' has been exported as Markdown to '<%filename%>'.</p>\n<%/mdUrl%>\n<%^mdUrl%>\n<$transclude mode=\"block\" tiddler=\"$:/core/ui/ViewTemplate/body\"/>\n<%/mdUrl%>\n\n+======+\ntitle: $:/poc2go/tw5-node-red/redrum/toc/template/edit\n\n<%#mdUrl%>\n<p>'<%bookName%>' has been exported as Markdown to '<%filename%>'.</p>\n<%/mdUrl%>\n<%^mdUrl%>\n<$transclude mode=\"block\" $tiddler=\"$:/core/ui/EditTemplate/body/editor\"/>\n<%/mdUrl%>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 925,
        "y": 140,
        "wires": [
            [
                "e3433e90b1d5cb91"
            ]
        ],
        "l": false
    },
    {
        "id": "97a964d117e03b3d",
        "type": "set-network",
        "z": "6034e62004ab9088",
        "g": "f308c5ab3c55d2f8",
        "name": "tiddlers from markdown doc",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 835,
        "y": 100,
        "wires": [
            [
                "2819f3aae80b6379"
            ]
        ],
        "l": false
    },
    {
        "id": "cf4153896f871479",
        "type": "link in",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 105,
        "y": 100,
        "wires": [
            [
                "e70e9b4d0880f940"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "e5eea88792642a29",
        "type": "set-network",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "Store by tag",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Store by tag\nfilter: <%tagged%>\n\n<p style=\"margin-left: 1em;\">\nTag tiddlers that you create then save on server. Any connected client that knows the tag can load the tiddlers.\n</p>\n\n<details class=\"poc2go-details\">\n<summary class=\"poc2go-summary\">Instructions...</summary>\n<div class=\"poc2go-details-container\">\n  <div class=\"poc2go-details-content\">\n\n<p style=\"margin-left: 1em;\">\nThe tag should be 'filename' friendly. Characters not allowed will be encoded, are pretty ugly looking,\nand impossible to remember. Numbers, letters, space ` `, dash `-`, and underbars `_` are OK.\n</p>\n\n<p style=\"margin-left: 1em;\">\nEnter the tag and press 'Refresh' to save any changed tiddlers.\n</p>\n\n<p style=\"margin-left: 1em;\">\nNote, <span style=\"margin-left: 3em;\"> 'Refresh' will not overwrite local tiddlers with server tiddlers</span>\n</p>\n\n  </div>\n</div>\n</details>\n\nTag:\n<$set name=filter value={{!!filter}}>\n<$keyboard key=\"enter\" actions=\"<<node-red 'refreshtagged $(filter)$' '[tag[$(filter)$]]'>>\">\n<$edit-text field=filter class=poc2go-edit-text focus=\"yes\" focusSelectFromStart=\"1000\"/>\n</$keyboard>\n</$set>\n\n\n| <b>tag</b> | <b>filename</b> | <b>filter</b> |\n| <%tagged%> | <%filename%> | [tag[<%tagged%>]] |\n<%{error.message}%>\n\n{{{[tag[<%tagged%>]]}}}\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 740,
        "y": 180,
        "wires": [
            [
                "8c341caadf2b0cc0"
            ]
        ]
    },
    {
        "id": "8c341caadf2b0cc0",
        "type": "link out",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 855,
        "y": 180,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "c960798368e59ec0",
        "type": "catch",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "5bd75dd5d231b5ea"
            ]
        ]
    },
    {
        "id": "5bd75dd5d231b5ea",
        "type": "switch",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "name": "",
        "property": "error.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ENOENT",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 305,
        "y": 320,
        "wires": [
            [
                "d069a2d240ff1c0b"
            ],
            [
                "90a649b2382b649c"
            ]
        ],
        "l": false
    },
    {
        "id": "e70e9b4d0880f940",
        "type": "switch",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "refreshtagged",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^refreshtagged .*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 100,
        "wires": [
            [
                "9342e556d12f66b0"
            ]
        ]
    },
    {
        "id": "6ef39770387b1bdd",
        "type": "file in",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "File exists? (no then throw)",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "c4f19a643eb92bae"
            ]
        ]
    },
    {
        "id": "85ee9376fbe6a6b5",
        "type": "get-network",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "get client tiddlers",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "client_tiddlers",
        "file": "",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "6ef39770387b1bdd"
            ]
        ]
    },
    {
        "id": "741d3bbd4ffac838",
        "type": "set-network",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "send client tiddlers",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "client_tiddlers",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "08f69536c913074b"
            ]
        ]
    },
    {
        "id": "c4f19a643eb92bae",
        "type": "set-network",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "send stored tiddlers",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": true,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "741d3bbd4ffac838"
            ]
        ]
    },
    {
        "id": "9342e556d12f66b0",
        "type": "function",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "set msg fields",
        "func": "// remove the topic - leaving just the requested tag\nmsg.tagged = msg.topic.replace('refreshtagged ', '');\n\nif (msg.tagged.trim()) {\n    msg.filename = `public/tiddlers/tags/${msg.tagged}.json`;\n} else {\n    throw('Requires a tag');\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "85ee9376fbe6a6b5"
            ]
        ]
    },
    {
        "id": "d069a2d240ff1c0b",
        "type": "get-network",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "name": "from client wiki to file",
        "topic": "",
        "networkfield": "network.client.tiddlers",
        "filter": "[all[]]",
        "twikiName": "$tw.wiki",
        "field": "",
        "file": "to msg.filename",
        "settingsIsOpen": false,
        "toIsOpen": true,
        "fileIsX": true,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "de96b2156186f8ff"
            ]
        ]
    },
    {
        "id": "de96b2156186f8ff",
        "type": "set-network",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "name": "send client tiddlers",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "client_tiddlers",
        "file": "",
        "updtostory": false,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "3298074f282c2dbb"
            ]
        ]
    },
    {
        "id": "3298074f282c2dbb",
        "type": "change",
        "z": "9e01fcb7c734b8a9",
        "g": "78ab404cb9f85fe4",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 340,
        "wires": [
            [
                "e5eea88792642a29"
            ]
        ]
    },
    {
        "id": "08f69536c913074b",
        "type": "function",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "Merge client tiddlers to file",
        "func": "var $tw = global.get('$tw');\n\n/*\nUsing a twiki to overwrite tiddlers on file with tiddlers\nfrom the client.\n\n'server.tiddlers' array has the tiddlers on file first\nthen tiddlers from client second. twiki.addTiddlers()\nadds tiddlers in array order. A tiddler of the same\ntitle would result in the client's version overwriting\nthe on file version.\n*/\n\n// create a twiki and load with tiddlers sent to client \nvar twiki = new $tw.Wiki;\ntwiki.addTiddlers(msg.network.server.tiddlers);\n\n// stringify all tiddlers from twiki\nmsg.payload = twiki.getTiddlersAsJson('[all[]]');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 180,
        "wires": [
            [
                "745cc5fba5bd593a"
            ]
        ]
    },
    {
        "id": "745cc5fba5bd593a",
        "type": "file",
        "z": "9e01fcb7c734b8a9",
        "g": "6e5e3d9538e30809",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "e5eea88792642a29"
            ]
        ]
    },
    {
        "id": "4ec0d7b66168e23c",
        "type": "switch",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "twfndocs",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "twfndocs",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "6b267aa825f4adda"
            ]
        ]
    },
    {
        "id": "6b267aa825f4adda",
        "type": "template",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "TW5 func markup",
        "field": "payload",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "/*\nReference TiddlyWiki\nHashmap by name of current TW wikis\n\nPlace these at the top of function node to access '$tw'.\n\n*/\nvar $tw = global.get('$tw');\nOptional:\nvar twikis = global.get('twikis');\n+===+\n<pre><code>var $tw = global.get('$tw');</code></pre>\n\nTW5-Node-RED maintains TiddlyWiki Stores (twikis). Is a\nhashmap of twikis by name\n\n<pre><code>var twikis = global.get('twikis');</code></pre>\n\n\n+======+\n\n/*\nTiddlyWiki Utility Functions\n\n*/\n$tw.utils()\n+===+\n<pre><code>$tw.utils.Animator\n$tw.utils.Crypto\n$tw.utils.HttpClient\n$tw.utils.LinkedList\n$tw.utils.Logger\n$tw.utils.Modal\n$tw.utils.Notifier\n$tw.utils.PageScroller\n$tw.utils.PasswordPrompt\n$tw.utils.Popup\n$tw.utils.addAttributeToParseTreeNode\n$tw.utils.addClass\n$tw.utils.addClassToParseTreeNode\n$tw.utils.addEventListeners\n$tw.utils.addStyleToParseTreeNode\n$tw.utils.base64Decode\n$tw.utils.base64Encode\n$tw.utils.buildCoordinates\n$tw.utils.checkDependencies\n$tw.utils.checkKeyDescriptor\n$tw.utils.checkVersions\n$tw.utils.cleanupTiddlerFiles\n$tw.utils.collectDOMVariables\n$tw.utils.compareVersions\n$tw.utils.convertEventName\n$tw.utils.convertPropertyNameToStyleName\n$tw.utils.convertStyleNameToPropertyName\n$tw.utils.coordinatePrefix\n$tw.utils.copyDirectory\n$tw.utils.copyFile\n$tw.utils.copyStyles\n$tw.utils.copyToClipboard\n$tw.utils.count\n$tw.utils.createDirectory\n$tw.utils.createFileDirectories\n$tw.utils.decodeURIComponentSafe\n$tw.utils.decodeURISafe\n$tw.utils.decryptStoreArea\n$tw.utils.decryptStoreAreaInteractive\n$tw.utils.deepCopy\n$tw.utils.deepDefaults\n$tw.utils.deepFreeze\n$tw.utils.deleteDirectory\n$tw.utils.deleteEmptyDirs\n$tw.utils.deleteTiddlerFile\n$tw.utils.domContains\n$tw.utils.domMaker\n$tw.utils.domMatchesSelector\n$tw.utils.dragEventContainsFiles\n$tw.utils.dragEventContainsType\n$tw.utils.each\n$tw.utils.encodeURIComponentExtended\n$tw.utils.endsWith\n$tw.utils.entityDecode\n$tw.utils.error\n$tw.utils.escape\n$tw.utils.escapeCSS\n$tw.utils.escapeRegExp\n$tw.utils.evalGlobal\n$tw.utils.evalSandboxed\n$tw.utils.extend\n$tw.utils.extendDeepCopy\n$tw.utils.extractEncryptedStoreArea\n$tw.utils.extractVersionInfo\n$tw.utils.findFollowingLineBreak\n$tw.utils.findParseTreeNode\n$tw.utils.findPrecedingLineBreak\n$tw.utils.forceLayout\n$tw.utils.formatDateString\n$tw.utils.formatTitleString\n$tw.utils.generateTiddlerExtension\n$tw.utils.generateTiddlerFileInfo\n$tw.utils.generateTiddlerFilepath\n$tw.utils.getAmPm\n$tw.utils.getAnimationDuration\n$tw.utils.getAttributeValueFromParseTreeNode\n$tw.utils.getBoundingPageRect\n$tw.utils.getComputedStyles\n$tw.utils.getDaySuffix\n$tw.utils.getEditionInfo\n$tw.utils.getFileExtensionInfo\n$tw.utils.getFullScreenApis\n$tw.utils.getHours12\n$tw.utils.getInt\n$tw.utils.getLocationHash\n$tw.utils.getLocationPath\n$tw.utils.getOrderedAttributesFromParseTreeNode\n$tw.utils.getParseTreeText\n$tw.utils.getPassword\n$tw.utils.getRelativeDate\n$tw.utils.getScrollContainer\n$tw.utils.getScrollPosition\n$tw.utils.getSubdirectories\n$tw.utils.getSystemInfo\n$tw.utils.getTypeEncoding\n$tw.utils.getWeek\n$tw.utils.getYearForWeekNo\n$tw.utils.hasClass\n$tw.utils.hashString\n$tw.utils.hop\n$tw.utils.hopArray\n$tw.utils.htmlDecode\n$tw.utils.htmlEncode\n$tw.utils.htmlTextEncode\n$tw.utils.httpRequest\n$tw.utils.hyphenateCss\n$tw.utils.importDataTransfer\n$tw.utils.importPaste\n$tw.utils.insertSortedArray\n$tw.utils.isArray\n$tw.utils.isArrayEqual\n$tw.utils.isDate\n$tw.utils.isDirectory\n$tw.utils.isDirectoryEmpty\n$tw.utils.isLinkExternal\n$tw.utils.isValidFieldName\n$tw.utils.itemHasValidDataType\n$tw.utils.jsonStringify\n$tw.utils.log\n$tw.utils.logTable\n$tw.utils.makeCompareFunction\n$tw.utils.makeDataUri\n$tw.utils.makeDraggable\n$tw.utils.makeTiddlerDictionary\n$tw.utils.nextTick\n$tw.utils.pad\n$tw.utils.parseAttribute\n$tw.utils.parseCSSColor\n$tw.utils.parseCoordinates\n$tw.utils.parseCsvString\n$tw.utils.parseCsvStringWithHeader\n$tw.utils.parseDate\n$tw.utils.parseFields\n$tw.utils.parseFilterVariable\n$tw.utils.parseInt\n$tw.utils.parseJSONSafe\n$tw.utils.parseKeyDescriptor\n$tw.utils.parseMacroInvocation\n$tw.utils.parseMacroInvocationAsTransclusion\n$tw.utils.parseMacroParameter\n$tw.utils.parseMacroParameters\n$tw.utils.parseNumber\n$tw.utils.parseParameterDefinition\n$tw.utils.parseStringArray\n$tw.utils.parseStringLiteral\n$tw.utils.parseTextReference\n$tw.utils.parseTokenRegExp\n$tw.utils.parseTokenString\n$tw.utils.parseVersion\n$tw.utils.parseWhiteSpace\n$tw.utils.popupLocationRegExp\n$tw.utils.pulseElement\n$tw.utils.pushTop\n$tw.utils.querySelectorAllSafe\n$tw.utils.querySelectorSafe\n$tw.utils.readPopupState\n$tw.utils.registerFileType\n$tw.utils.removeArrayEntries\n$tw.utils.removeChildren\n$tw.utils.removeClass\n$tw.utils.removeTrailingSeparator\n$tw.utils.repackPlugin\n$tw.utils.repeat\n$tw.utils.replaceString\n$tw.utils.resizeTextAreaToFit\n$tw.utils.resolvePath\n$tw.utils.roundTripPropertyName\n$tw.utils.sandbox\n$tw.utils.savePassword\n$tw.utils.saveTiddlerToFile\n$tw.utils.saveTiddlerToFileSync\n$tw.utils.setQueryStringParameter\n$tw.utils.setSelectionByPosition\n$tw.utils.setSelectionRangeSafe\n$tw.utils.setStyle\n$tw.utils.setStyles\n$tw.utils.sign\n$tw.utils.skipWhiteSpace\n$tw.utils.slowInSlowOut\n$tw.utils.startsWith\n$tw.utils.strEndsWith\n$tw.utils.stringify\n$tw.utils.stringifyDate\n$tw.utils.stringifyList\n$tw.utils.stringifyNumber\n$tw.utils.tagToCssSelector\n$tw.utils.terminalColour\n$tw.utils.terminalColourLookup\n$tw.utils.timer\n$tw.utils.toSentenceCase\n$tw.utils.toTitleCase\n$tw.utils.toggleClass\n$tw.utils.transliterate\n$tw.utils.transliterateToSafeASCII\n$tw.utils.transliterationPairs\n$tw.utils.trim\n$tw.utils.trimPrefix\n$tw.utils.trimSuffix\n$tw.utils.unHyphenateCss\n$tw.utils.unescapeLineBreaks\n$tw.utils.warning</code></pre>\n\n+======+\n\n/*\nTiddlyWiki Store (wiki) Functions\n\n*/\n$tw.wiki()\n+===+\n<pre><code>$tw.wiki.addEventListener\n$tw.wiki.addIndexersToWiki\n$tw.wiki.addTiddlers\n$tw.wiki.addToHistory\n$tw.wiki.addToStory\n$tw.wiki.checkTiddlerText\n$tw.wiki.clearCache\n$tw.wiki.clearGlobalCache\n$tw.wiki.clearTiddlerEventQueue\n$tw.wiki.compileFilter\n$tw.wiki.constructor\n$tw.wiki.countTiddlers\n$tw.wiki.defineShadowModules\n$tw.wiki.defineTiddlerModules\n$tw.wiki.deleteTextReference\n$tw.wiki.deserializeTiddlers\n$tw.wiki.dispatchEvent\n$tw.wiki.doesPluginInfoRequireReload\n$tw.wiki.doesPluginRequireReload\n$tw.wiki.enqueueTiddlerEvent\n$tw.wiki.extractLinks\n$tw.wiki.extractTiddlerDataItem\n$tw.wiki.filterOperators\n$tw.wiki.filterRunPrefixes\n$tw.wiki.filterTiddlers\n$tw.wiki.findDraft\n$tw.wiki.findListingsOfTiddler\n$tw.wiki.forEachTiddler\n$tw.wiki.generateDraftTitle\n$tw.wiki.generateNewTitle\n$tw.wiki.getCacheForTiddler\n$tw.wiki.getChangeCount\n$tw.wiki.getCreationFields\n$tw.wiki.getFilterOperators\n$tw.wiki.getFilterRunPrefixes\n$tw.wiki.getGlobalCache\n$tw.wiki.getMissingTitles\n$tw.wiki.getModificationFields\n$tw.wiki.getOrphanTitles\n$tw.wiki.getSizeOfTiddlerEventQueue\n$tw.wiki.getSubTiddler\n$tw.wiki.getSubstitutedText\n$tw.wiki.getTagMap\n$tw.wiki.getTextReference\n$tw.wiki.getTextReferenceParserInfo\n$tw.wiki.getTiddlerAsJson\n$tw.wiki.getTiddlerBacklinks\n$tw.wiki.getTiddlerData\n$tw.wiki.getTiddlerDataCached\n$tw.wiki.getTiddlerLinks\n$tw.wiki.getTiddlerList\n$tw.wiki.getTiddlerText\n$tw.wiki.getTiddlers\n$tw.wiki.getTiddlersAsJson\n$tw.wiki.getTiddlersWithTag\n$tw.wiki.importTiddler\n$tw.wiki.initParsers\n$tw.wiki.invokeActionString\n$tw.wiki.invokeUpgraders\n$tw.wiki.isBinaryTiddler\n$tw.wiki.isDraftModified\n$tw.wiki.isImageTiddler\n$tw.wiki.isSystemTiddler\n$tw.wiki.isTemporaryTiddler\n$tw.wiki.isVolatileTiddler\n$tw.wiki.makeTiddlerIterator\n$tw.wiki.makeTranscludeWidget\n$tw.wiki.makeWidget\n$tw.wiki.parseFilter\n$tw.wiki.parseText\n$tw.wiki.parseTextReference\n$tw.wiki.parseTiddler\n$tw.wiki.processSafeMode\n$tw.wiki.readFile\n$tw.wiki.readFileContent\n$tw.wiki.readFiles\n$tw.wiki.relinkTiddler\n$tw.wiki.removeEventListener\n$tw.wiki.renameTiddler\n$tw.wiki.renderText\n$tw.wiki.renderTiddler\n$tw.wiki.search\n$tw.wiki.setText\n$tw.wiki.setTextReference\n$tw.wiki.setTiddlerData\n$tw.wiki.slugify\n$tw.wiki.sortByList\n$tw.wiki.sortTiddlers\n$tw.wiki.addIndexer\n$tw.wiki.addTiddler\n$tw.wiki.allShadowTitles\n$tw.wiki.allTitles\n$tw.wiki.caches\n$tw.wiki.changeCount\n$tw.wiki.changedTiddlers\n$tw.wiki.deleteTiddler\n$tw.wiki.each\n$tw.wiki.eachShadow\n$tw.wiki.eachShadowPlusTiddlers\n$tw.wiki.eachTiddlerPlusShadows\n$tw.wiki.eventListeners\n$tw.wiki.eventsTriggered\n$tw.wiki.filterCache\n$tw.wiki.filterCacheCount\n$tw.wiki.filterRecursionCount\n$tw.wiki.getIndexer\n$tw.wiki.getPluginInfo\n$tw.wiki.getPluginTypes\n$tw.wiki.getShadowSource\n$tw.wiki.getTiddler\n$tw.wiki.globalCache\n$tw.wiki.isShadowTiddler\n$tw.wiki.readPluginInfo\n$tw.wiki.registerPluginTiddlers\n$tw.wiki.tiddlerExists\n$tw.wiki.unpackPluginTiddlers\n$tw.wiki.unregisterPluginTiddlers</code></pre>\n\n+======+\n\n\n\n\n/*\nPush entries onto an array, removing them first if they already exist in the array\n\tarray: array to modify (assumed to be free of duplicates)\n\tvalue: a single value to push or an array of values to push\n*/\n$tw.utils.pushTop = function(array,value) {\n\n+===+\n<pre><code>var arr = [];\n$tw.utils.pushTop(arr,'no dups');\nconsole.dir(arr);\n</code></pre>\n\nIs similar to JavaScript 'push' function while removing the value\nif it already exists in the array\n+======+\n\n/*\nDetermine if a value is a date\n*/\n$tw.utils.isDate = function(value) {\n\n+===+\n<pre><code>console.log($tw.utils.isDate(new Date())); &#47;&#47; true\nconsole.log($tw.utils.isDate('not a date')); &#47;&#47; false</code></pre>\nWould display\ntrue\nfalse\n+======+\n\n/*\nIterate through all the own properties of an object or array. Callback is invoked with (element,title,object)\n*/\n$tw.utils.each = function(object,callback) {\n+======+\n\n/*\nPad a string to a given length with \"0\"s. Length defaults to 2\n*/\n$tw.utils.pad = function(value,length) {\n+===+\n<pre><code>console.log($tw.utils.pad('12345', 8));</code></pre>\n+======+\n\n/*\nConvert a date into UTC YYYYMMDDHHMMSSmmm format\n*/\n$tw.utils.stringifyDate = function(value) {\n+===+\n<pre><code>var twFormattedDate = $tw.utils.stringifyDate(new Date());\nconsole.log(twFormattedDate);</code></pre>\n\nThis function and [[utils.parseDate]] are used to\npopulate tiddler 'created' and 'modified' fields\n+======+\n\n/*\nParse a date from a UTC YYYYMMDDHHMMSSmmm format string\n*/\n$tw.utils.parseDate = function(value) {\n+===+\n\n<pre><code>var osDate = $tw.utils.parseDate('20230902233005886');\nconsole.log(osDate);</code></pre>\n\nThis function and [[utils.stringifyDate]] are used to\npopulate tiddler 'created' and 'modified' fields\n+======+\n\n/*\nStringify an array of tiddler titles into a list string\n*/\n$tw.utils.stringifyList = function(value) {\n+===+\nCreates a TiddlyWiki List with tiddler titles containing spaces\ndelimited by &#91;&#91; / &#93;&#93;\n+======+\n\n/*\nParse a string array from a bracketted list. For example \"OneTiddler &#91;&#91;Another Tiddler&#93;&#93; LastOne\"\n*/\n$tw.utils.parseStringArray = function(value, allowDuplicate) {\n+======+\n\n/*\nParse a block of name:value fields. The 'fields' object is used as the basis for the return value\n*/\n$tw.utils.parseFields = function(text,fields) {\n+======+\n\n/*\nSafely parse a string as JSON\n*/\n$tw.utils.parseJSONSafe = function(text,defaultJSON) {\n+======+\n\n/*\nResolves a source filepath delimited with '/' relative to a specified absolute root filepath.\nIn relative paths, the special folder name '..' refers to immediate parent directory, and the\nname '.' refers to the current directory\n*/\n$tw.utils.resolvePath = function(sourcepath,rootpath) {\n+======+\n\n/*\nReturns true if the version string A is greater than the version string B. Returns true if the versions are the same\n*/\n$tw.utils.checkVersions = function(versionStringA,versionStringB) {\n+======+\n\n\n\n/*\n------------------------------ Tiddler methods ------------------------------\n*/\nTiddler methods\n+======+\n\n/*\nConstruct a tiddler object from a hashmap of tiddler fields. If multiple hasmaps are provided they are merged,\ntaking precedence to the right\n*/\n$tw.Tiddler = function(/* [fields,] fields */) {\n+======+\n\n/*\nCheck if tiddler contains a specific field\n*/\n$tw.Tiddler.prototype.hasField = function(field) {\n+======+\n\n/*\nCompare two tiddlers for equality\ntiddler: the tiddler to compare\nexcludeFields: array of field names to exclude from the comparison\n*/\n$tw.Tiddler.prototype.isEqual = function(tiddler,excludeFields) {\n+======+\n\n\n\n/*\n------------------------------ Wiki methods ------------------------------\n*/\nWiki methods\n+======+\n\n/*\nAdd a tiddler to the store\n*/\n$tw.wiki.addTiddler = function(tiddler) {\n+======+\n\n/*\nDelete a tiddler\n*/\n$tw.wiki.deleteTiddler = function(title) {\n+======+\n\n/*\nGet a tiddler from the store\n*/\n$tw.wiki.getTiddler = function(title) {\n+======+\n\n/*\nGet an array of all tiddler titles\n*/\n$tw.wiki.allTitles = function() {\n+======+\n\n/*\nIterate through all tiddler titles\n*/\n$tw.wiki.each = function(callback) {\n+======+\n\n/*\nGet an array of all shadow tiddler titles\n*/\n$tw.wiki.allShadowTitles = function() {\n+======+\n\n/*\nIterate through all shadow tiddler titles\n*/\n$tw.wiki.eachShadow = function(callback) {\n+======+\n\n/*\nIterate through all tiddlers and then the shadows\n*/\n$tw.wiki.eachTiddlerPlusShadows = function(callback) {\n+======+\n\n/*\nIterate through all the shadows and then the tiddlers\n*/\n$tw.wiki.eachShadowPlusTiddlers = function(callback) {\n+======+\n\n/*\nTest for the existence of a tiddler (excludes shadow tiddlers)\n*/\n$tw.wiki.tiddlerExists = function(title) {\n+======+\n\n/*\nDetermines if a tiddler is a shadow tiddler, regardless of whether it has been overridden by a real tiddler\n*/\n$tw.wiki.isShadowTiddler = function(title) {\n+======+\n\n/*\nAdd an array of tiddlers\n*/\n$tw.wiki.addTiddlers = function(tiddlers) {\n+======+\n\n/*\nExtracts tiddlers from a typed block of text, specifying default field values\n*/\n$tw.wiki.deserializeTiddlers = function(type,text,srcFields,options) {\n+======+\n\n\n\n/*\n------------------------------ Other methods ------------------------------\n*/\nOther methods that are added by $:/core/modules/wiki.js\n+======+\n\n/*\nGenerate an unused title from the specified base\noptions.prefix must be a string\n*/\n$tw.wiki.generateNewTitle = function(baseTitle,options) {\n+======+\n\n/*\nCheck if system tiddler\n*/\n$tw.wiki.isSystemTiddler = function(title) {\n+======+\n\n/*\nCheck if temp tiddler\n*/\n$tw.wiki.isTemporaryTiddler = function(title) {\n+======+\n\n/*\nCheck if volatile tiddler\n*/\n$tw.wiki.isVolatileTiddler = function(title) {\n+======+\n\n/*\nCheck if image tiddler\n*/\n$tw.wiki.isImageTiddler = function(title) {\n+======+\n\n/*\nCheck if binary tiddler\n*/\n$tw.wiki.isBinaryTiddler = function(title) {\n+======+\n\n/*\nLike addTiddler() except it will silently reject any plugin tiddlers that are older than the currently loaded version. Returns true if the tiddler was imported\n*/\n$tw.wiki.importTiddler = function(tiddler) {\n+======+\n\n/*\nReturn a hashmap of the fields that should be set when a tiddler is created\n*/\n$tw.wiki.getCreationFields = function() {\n+======+\n\n/*\nReturn a hashmap of the fields that should be set when a tiddler is modified\n*/\n$tw.wiki.getModificationFields = function() {\n+======+\n\n/*\nReturn a sorted array of tiddler titles.  Options include:\nsortField: field to sort by\nexcludeTag: tag to exclude\nincludeSystem: whether to include system tiddlers (defaults to false)\n*/\n$tw.wiki.getTiddlers = function(options) {\n+======+\n\n/*\nReturn number of tiddlers in wiki\n*/\n$tw.wiki.countTiddlers = function(excludeTag) {\n+======+\n\n/*\nSort an array of tiddler titles by a specified field\n\ttitles: array of titles (sorted in place)\n\tsortField: name of field to sort by\n\tisDescending: true if the sort should be descending\n\tisCaseSensitive: true if the sort should consider upper and lower case letters to be different\n*/\n$tw.wiki.sortTiddlers = function(titles,sortField,\n       isDescending,isCaseSensitive,isNumeric,isAlphaNumeric)\n+======+\n\n/*\nFor every tiddler invoke a callback(title,tiddler) with 'this' set to the wiki object. Options include:\nsortField: field to sort by\nexcludeTag: tag to exclude\nincludeSystem: whether to include system tiddlers (defaults to false)\n*/\n$tw.wiki.forEachTiddler = function(/* [options,]callback */) {\n+======+\n\n/*\nRetrieves a list of the tiddler titles that are tagged with a given tag\n*/\n$tw.wiki.getTiddlersWithTag = function(tag) {\n+======+\n\n/*\nGet a hashmap by tag of arrays of tiddler titles\n*/\n$tw.wiki.getTagMap = function() {\n+======+\n\n/*\nLookup a given tiddler and return a list of all the tiddlers that include it in the specified list field\n*/\n$tw.wiki.findListingsOfTiddler = function(targetTitle,fieldName) {\n+======+\n\n/*\nSorts an array of tiddler titles according to an ordered list\n*/\n$tw.wiki.sortByList = function(array,listTitle) {\n+======+\n\n/*\nRetrieve a tiddler as a JSON string of the fields\n*/\n$tw.wiki.getTiddlerAsJson = function(title) {\n+======+\n\n/*\nRetrieve tiddlers matching filter as an array of JSON string of the fields\n*/\n$tw.wiki.getTiddlersAsJson = function(filter,spaces) {\n+======+\n\n/*\nGet the content of a tiddler as a JavaScript object. How this is done depends on the type of the tiddler:\n\napplication/json: the tiddler JSON is parsed into an object\napplication/x-tiddler-dictionary: the tiddler is parsed as sequence of name:value pairs\n\nOther types currently just return null.\n\ntitleOrTiddler: string tiddler title or a tiddler object\ndefaultData: default data to be returned if the tiddler is missing or doesn't contain data\n\nNote that the same value is returned for repeated calls for the same tiddler data. The value is frozen to prevent modification; otherwise modifications would be visible to all callers\n*/\n$tw.wiki.getTiddlerDataCached = function(titleOrTiddler,defaultData) {\n+======+\n\n/*\nAlternative, uncached version of getTiddlerDataCached(). The return value can be mutated freely and reused\n*/\n$tw.wiki.getTiddlerData = function(titleOrTiddler,defaultData) {\n+======+\n\n/*\nExtract an indexed field from within a data tiddler\n*/\n$tw.wiki.extractTiddlerDataItem = function(titleOrTiddler,index,defaultText) {\n+======+\n\n/*\nSet a tiddlers content to a JavaScript object. Currently this is done by setting the tiddler's type to \"application/json\" and setting the text to the JSON text of the data.\ntitle: title of tiddler\ndata: object that can be serialised to JSON\nfields: optional hashmap of additional tiddler fields to be set\noptions: optional hashmap of options including:\n\tsuppressTimestamp: if true, don't set the creation/modification timestamps\n*/\n$tw.wiki.setTiddlerData = function(title,data,fields,options) {\n+======+\n\n/*\nReturn the content of a tiddler as an array containing each line\n*/\n$tw.wiki.getTiddlerList = function(title,field,index) {\n\nThis is details text.\n\n+======+\n\n/*\nGet the value of a text reference. Text references can have any of these forms:<pre><code>\n  &lt;tiddlertitle&gt;\n  &lt;tiddlertitle&gt;!!&lt;fieldname&gt;\n  !!&lt;fieldname&gt; - specifies a field of the current tiddlers\n  &lt;tiddlertitle>##&lt;index&gt;\n</code></pre>\n*/\n$tw.wiki.getTextReference = function(textRef,defaultText,currTiddlerTitle) {\n+======+\n\n/*\ntodo: grab the textref and event handling stuff\n*/\nWill add these\n+======+\n\n\n/*\nParse a block of text of a specified MIME type\n\ttype: content type of text to be parsed\n\ttext: text\n\toptions: see below\nOptions include:\n\tparseAsInline: if true, the text of the tiddler will be parsed as an inline run\n\t_canonical_uri: optional string of the canonical URI of this content\n*/\n$tw.wiki.parseText = function(type,text,options) {\n+======+\n\n/*\nParse a tiddler according to its MIME type\n*/\n$tw.wiki.parseTiddler = function(title,options) {\n+======+\n\n/*\nReturn an array of tiddler titles that match a search string\n\ttext: The text string to search for\n\toptions: see below\nOptions available:\n\tsource: an iterator function for the source tiddlers, called source(iterator),\n\t\twhere iterator is called as iterator(tiddler,title)\n\texclude: An array of tiddler titles to exclude from the search\n\tinvert: If true returns tiddlers that do not contain the specified string\n\tcaseSensitive: If true forces a case sensitive search\n\tfield: If specified, restricts the search to the specified field, or an array of field names\n\tanchored: If true, forces all but regexp searches to be anchored to the start of text\n\texcludeField: If true, the field options are inverted to specify the fields that are not to be searched\n\n\tThe search mode is determined by the first of these boolean flags to be true\n\t\tliteral: searches for literal string\n\t\twhitespace: same as literal except runs of whitespace are treated as a single space\n\t\tregexp: treats the search term as a regular expression\n\t\twords: (default) treats search string as a list of tokens, and matches if all tokens are found,\n\t\t\tregardless of adjacency or ordering\n\t\tsome: treats search string as a list of tokens, and matches if at least ONE token is found\n*/\n$tw.wiki.search = function(text,options) {\n+======+\n\n/*\nCheck whether the text of a tiddler matches a given value. By default, the comparison is case insensitive, and any spaces at either end of the tiddler text is trimmed\n*/\n$tw.wiki.checkTiddlerText = function(title,targetText,options) {\n+======+\n\n/*\nFind any existing draft of a specified tiddler\n*/\n$tw.wiki.findDraft = function(targetTitle) {\n+======+\n",
        "output": "str",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "523606ec1f3e89e9"
            ]
        ],
        "info": "The markup is formatted using line\ndelimiters.\n\n/*\n Comment copied from TiddlyWiki .js\n*/\n\n$tw.utils.pushTop = function(array,value) {\n\n+===+\ntext about the function\n+======+\n\n"
    },
    {
        "id": "523606ec1f3e89e9",
        "type": "function",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "func markup to tiddlers",
        "func": "var text = msg.payload;\n\nfunction extractContent(text, elements) {\n    var lines = text.split('\\n');\n\n    var twfndocs = [], counter = 0;\n    elements.forEach(element => {\n        let twfndoc = {\n            id: ++counter,\n            title: '',\n            tags: 'twfuncdocs',\n            comment: lines.slice(element.commentStx, element.commentEtx).join('<br>')\n                .replace(/\\t/g, '  '),\n            definition: lines.slice(element.contentStx, element.contentEtx).join('<br>')\n                .replace(' = function', '').replace(' {', ''),\n            details: lines.slice(element.detailsStx, element.detailsEtx).join('<br>')\n        }\n        twfndocs.push(twfndoc);\n    })\n    twfndocs.forEach(doc => {\n        doc.title = doc.definition.match(/(\\w+\\.\\w+)\\(/) \n            ? doc.definition.match(/(\\w+\\.\\w+)\\(/)[1]\n          : '';\n        if (doc.title === 'get') {doc.title = 'TiddlyWiki'}\n        doc.row = `|{{!!title}}|{{!!definition}}| \\n |>|{{comment}}|`;\n        doc.text = `{{!!comment}} \\n\\n {{!!definition}} \\n\\n---\\n\\n {{!!details}}`;\n    })\n    return twfndocs;\n}\n\nfunction markContent(text) {\n    var lines = text.split('\\n');\n\n    var elements = [];\n    var newElement = (idx) => {\n        return {\n            commentStx: idx + 1,\n            commentEtx: idx + 1,\n            contentStx: -1,\n            contentEtx: -1,\n            detailsStx: -1,\n            detailsEtx: -1\n        }\n    };\n\n    for (let idx = 0; idx < lines.length; idx++) {\n        let top = elements.length-1;\n        // '/*'\n        if (/^\\/\\*/.test(lines[idx])) {\n            elements.push(newElement(idx))\n        }\n        // '*/'\n        if (/^\\*\\//.test(lines[idx])) {\n            elements[top].commentEtx = idx;\n            elements[top].contentStx = idx + 1;\n            elements[top].contentEtx = idx + 1;\n            elements[top].detailsStx = -1;\n            elements[top].detailsEtx = -1;\n        }\n        // '+===+'\n        if (/^\\+===\\+$/.test(lines[idx])) {\n            elements[top].contentEtx = idx;\n            elements[top].detailsStx = idx + 1;\n            elements[top].detailsEtx = idx + 1;\n        }\n        // '+======+'\n        if (/^\\+======\\+$/.test(lines[idx])) {\n            if (elements[top].contentEtx == elements[top].contentStx ) {\n                elements[top].contentEtx = idx;\n            } else {\n                elements[top].detailsEtx = idx;\n            }\n\n            elements[top].contentEtx = elements[top].contentEtx != elements[top].contentStx \n                ? elements[top].contentEtx\n                : idx;\n        }\n    }\n    return extractContent(text, elements);\n}\n\nfunction tableTiddler(docs) {\n    let table = [];\n    docs.forEach(doc => {\n        if (doc.title === 'tw.Tiddler') {\n            table.push(``);\n            table.push(`<b>Tiddler</b>`)\n            table.push(``);\n        }\n        if (doc.title === 'utils.pushTop') { \n            table.push(``);\n            table.push(`<b>$tw.utils</b>`)\n            table.push(`Handy utility functions`);\n            table.push(``);\n        }\n        if (doc.title === 'wiki.addTiddler') {\n            table.push(``);\n            table.push(`<b>Wiki store (twikis)</b>`);\n            table.push(`Examples are using the default wiki '$tw.wiki'\n\nUse <code>twikis['TW Wiki Name']</code> instead of <code>$tw.wiki</code> to\naccess <b>twikis</b> created by the Tiddler 'to twiki' and 'from twiki' nodes.\n`);\n            table.push(``);\n        }\n        table.push(`|{{[[${doc.title}]]!!title}}|{{${doc.title}!!comment}}|`);\n        table.push(`|~|{{${doc.title}!!definition}}|`);\n    })\n    return table.join('\\n');\n}\n\nmsg.payload = markContent(text);\nmsg.tableTiddler = `title: TW5 Functions\n\nFunctions available for use in Node-Red 'function' node.\n\n${tableTiddler(msg.payload)}\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 80,
        "wires": [
            [
                "25346a7b039bf61e",
                "17fc885857ea061f"
            ]
        ]
    },
    {
        "id": "25346a7b039bf61e",
        "type": "set-network",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "payload",
        "file": "",
        "updtostory": false,
        "tostory": "false",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "2c1f3f9583e66a3b"
            ]
        ]
    },
    {
        "id": "17fc885857ea061f",
        "type": "set-network",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "tableTiddler",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "",
        "clear": false,
        "editorIsOpen": false,
        "settingsIsOpen": true,
        "fromIsOpen": true,
        "editorIsX": false,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": true,
        "x": 720,
        "y": 60,
        "wires": [
            [
                "2c1f3f9583e66a3b"
            ]
        ]
    },
    {
        "id": "b475506f1c04a454",
        "type": "link in",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 65,
        "y": 80,
        "wires": [
            [
                "4ec0d7b66168e23c"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "2c1f3f9583e66a3b",
        "type": "link out",
        "z": "785334168b65be6b",
        "g": "063ca7e46ddb41d4",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 815,
        "y": 80,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "932443ea64b11fd0",
        "type": "edit-tiddlers",
        "z": "9434cba69ba3166b",
        "name": "Read Markdown",
        "topic": "",
        "tofield": "payload",
        "template": "title: Read Markdown\ncreated: 20231024052945190\nmodified: 20231024084046058\ntags: \nfilename: test.md\n\nRead markdown:\n<$let readmd={{!!filename}}>\n<$keyboard key=\"enter\" actions=\"<<node-red 'readmd ./public/markdown/$(readmd)$'>>\">\n\n<$edit-text field=\"filename\" class=poc2go-edit-text focus=\"yes\" focusSelectFromStart=\"1000\"/>\n</$keyboard>\n\n<$button actions=<<node-red 'readmd ./public/markdown/$(readmd)$'>> > <<readmd>></$button>\n</$let>\n",
        "x": 120,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5d63d00a9b25b2ed",
        "type": "set-network",
        "z": "9434cba69ba3166b",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "",
        "updtostory": true,
        "tostory": "true",
        "template": "title: Read markdown\n\nRead markdown:\n<$let readmd={{!!filename}}>\n<$keyboard key=\"enter\" actions=\"<<node-red 'importmd ./public/markdown/$(readmd)$'>>\">\n\n<$edit-text field=\"filename\" class=poc2go-edit-text focus=\"yes\" focusSelectFromStart=\"1000\"/>\n</$keyboard>\n\n<$button actions=<<node-red 'importmd ./public/markdown/$(readmd)$'>> > import</$button>\n</$let>\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 480,
        "y": 40,
        "wires": [
            [
                "70e704d96f1c9db8"
            ]
        ]
    },
    {
        "id": "1097d795019e0ea6",
        "type": "switch",
        "z": "9434cba69ba3166b",
        "name": "stuff",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "stuff",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 150,
        "y": 40,
        "wires": [
            [
                "eb95b693bb3411d6"
            ]
        ]
    },
    {
        "id": "a6dbedf3f9805c95",
        "type": "switch",
        "z": "9434cba69ba3166b",
        "name": "icons",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "icons",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "9478768d84d6927f"
            ]
        ]
    },
    {
        "id": "9478768d84d6927f",
        "type": "set-network",
        "z": "9434cba69ba3166b",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/icons/tw-icons-01.tid",
        "updtostory": true,
        "tostory": "true",
        "template": "created: 20231025184554690\nmodified: 20231025185816847\ntitle: $:/images/bootstrap/journal-arrow-down\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: journal-arrow-down\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-journal-arrow-down tc-image-button\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 5a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5A.5.5 0 0 1 8 5z\"/><path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/><path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/></svg>\n+======+\ncreated: 20231025184554691\nmodified: 20231025185719670\ntitle: $:/images/bootstrap/journal-arrow-up\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: journal-arrow-up\ninsertHTML: beforeend\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-journal-arrow-up tc-image-button\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 11a.5.5 0 0 0 .5-.5V6.707l1.146 1.147a.5.5 0 0 0 .708-.708l-2-2a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L7.5 6.707V10.5a.5.5 0 0 0 .5.5z\"/><path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/><path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/></svg>\n+======+\ncreated: 20231025184554692\nmodified: 20231025185657535\ntitle: $:/images/bootstrap/layout-text-window-reverse\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: layout-text-window-reverse\ninsertHTML: beforeend\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-layout-text-window-reverse tc-image-button\" viewBox=\"0 0 16 16\"><path d=\"M13 6.5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5zm0 3a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5zm-.5 2.5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h5z\"/><path d=\"M14 0a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12zM2 1a1 1 0 0 0-1 1v1h14V2a1 1 0 0 0-1-1H2zM1 4v10a1 1 0 0 0 1 1h2V4H1zm4 0v11h9a1 1 0 0 0 1-1V4H5z\"/></svg>\n+======+\ncreated: 20231025184554693\nmodified: 20231025185849073\ntitle: $:/images/bootstrap/markdown\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: markdown\ninsertHTML: beforeend\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-markdown tc-image-button\" viewBox=\"0 0 16 16\"><path d=\"M14 3a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12zM2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H2z\"/><path fill-rule=\"evenodd\" d=\"M9.146 8.146a.5.5 0 0 1 .708 0L11.5 9.793l1.646-1.647a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 0-.708z\"/><path fill-rule=\"evenodd\" d=\"M11.5 5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 1 .5-.5z\"/><path d=\"M3.56 11V7.01h.056l1.428 3.239h.774l1.42-3.24h.056V11h1.073V5.001h-1.2l-1.71 3.894h-.039l-1.71-3.894H2.5V11h1.06z\"/></svg>\n+======+\ncreated: 20231025184554697\nmodified: 20231025185916488\ntitle: $:/images/coreui-icons/free/cil-indent-increase\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 2.0.1\nlibrary: CoreUI Icons\ncollection: Free\ncaption: cil-indent-increase\ninsertHTML: beforeend\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-cui-cil-indent-increase tc-image-button\" viewBox=\"0 0 512 512\"><rect width=\"424\" height=\"32\" x=\"72\" y=\"63.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"296\" height=\"32\" x=\"200\" y=\"151.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"296\" height=\"32\" x=\"200\" y=\"239.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"296\" height=\"32\" x=\"200\" y=\"327.998\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"424\" height=\"32\" x=\"72\" y=\"415.998\" fill=\"var(--ci-primary-color, currentColor)\"/><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M16,144.909V367.091L171.527,256Zm32,62.182L116.473,256,48,304.909Z\"/></svg>\n+======+\ncreated: 20231025184554698\nmodified: 20231025190032754\ntitle: $:/images/coreui-icons/free/cil-wrap-text\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 2.0.1\nlibrary: CoreUI Icons\ncollection: Free\ncaption: cil-wrap-text\ninsertHTML: afterbegin\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-cui-cil-wrap-text tc-image-button\" viewBox=\"0 0 512 512\"><rect width=\"160\" height=\"32\" x=\"16\" y=\"232\" fill=\"var(--ci-primary-color, currentColor)\"/><rect width=\"392\" height=\"32\" x=\"16\" y=\"392\" fill=\"var(--ci-primary-color, currentColor)\"/><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M408,72H16v32H408c30.878,0,56,28.71,56,64s-25.122,64-56,64H344.8V162.772L210,249l134.8,83.785V264H408c48.523,0,88-43.065,88-96S456.523,72,408,72ZM312.8,275.217,270,248.609,312.8,221.228Z\"/></svg>",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "70e704d96f1c9db8"
            ]
        ]
    },
    {
        "id": "a5e1cd949b72ed73",
        "type": "edit-tiddlers",
        "z": "9434cba69ba3166b",
        "name": "redrom detail dropdown",
        "topic": "",
        "tofield": "payload",
        "template": "created: 20231026083449514\nmodified: 20231026085721848\ntitle: TOC - test.md 1\ntags: \ncaption: Preview\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"test.md-root\"\n\tselectedTiddler=\"$:/temp/toc/selectedTiddler/test.md\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>'test.md' has been exported as Markdown to '.&#x2F;public&#x2F;markdown&#x2F;test.md'.</p>\"\n\ttemplate=\"$:/poc2go/tw5-node-red/redrum/toc/template/view\"\n/>\n\n+======+\ncreated: 20231026083515021\nmodified: 20231026085711496\ntitle: TOC - test.md 2\ntags: \ncaption: Edit\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"test.md-root\"\n\tselectedTiddler=\"$:/temp/toc/selectedTiddler/test.md\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>'test.md' has been exported as Markdown to '.&#x2F;public&#x2F;markdown&#x2F;test.md'.</p>\"\n\ttemplate=\"$:/poc2go/tw5-node-red/redrum/toc/template/edit\"\n/>\n\n+======+\ncreated: 20231026093012371\nmodified: 20231026095424638\ntitle: TOC - test.md 3\ntags: \n\n<h3>Markdown document is in tiddler [[test.md]].</h3>\n\n<$button actions=\"<<node-red 'importmd ./public/markdown/test.md' '[tag[test.md]]'>>\" style=\"margin-right: 1em;\"> Import test.md </$button>\n<$button actions=\"<<node-red 'exportmd ./public/markdown/test.md' '[tag[test.md]]'>>\" style=\"margin-right: 1em;\"> Export test.md </$button>\n\n\n<details class=\"poc2go-details\">\n<summary class=\"poc2go-summary\">Preview</summary>\n<div>\n  <div>\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"test.md-root\"\n\tselectedTiddler=\"$:/temp/toc/selectedTiddler/test.md\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>'test.md' has been exported as Markdown to '.&#x2F;public&#x2F;markdown&#x2F;test.md'.</p>\"\n\ttemplate=\"$:/poc2go/tw5-node-red/redrum/toc/template/view\"\n/>\n\n  </div>\n</div>\n</details>\n\n<details class=\"poc2go-details\">\n<summary class=\"poc2go-summary\">Editor</summary>\n<div>\n  <div>\n\n<$macrocall\n\t$name=\"toc-tabbed-external-nav\"\n\ttag=\"test.md-root\"\n\tselectedTiddler=\"$:/temp/toc/selectedTiddler/test.md\"\n\tunselectedText=\"<p>Select a topic in the table of contents. Click the arrow to expand a topic.</p>\"\n\tmissingText=\"<p>'test.md' has been exported as Markdown to '.&#x2F;public&#x2F;markdown&#x2F;test.md'.</p>\"\n\ttemplate=\"$:/poc2go/tw5-node-red/redrum/toc/template/edit\"\n/>\n  </div>\n</div>\n</details>\n\n",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "ff08cb9467d0e0af"
            ]
        ]
    },
    {
        "id": "7f44be2473dc3df7",
        "type": "inject",
        "z": "9434cba69ba3166b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my topic",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "6369cbcac492e9cf"
            ]
        ]
    },
    {
        "id": "ff08cb9467d0e0af",
        "type": "debug",
        "z": "9434cba69ba3166b",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "3e784ea1e9250105",
        "type": "set-network",
        "z": "9434cba69ba3166b",
        "name": "",
        "topic": "",
        "networkfield": "network.server.tiddlers",
        "twikiName": "$tw.wiki",
        "filter": "[all[]]",
        "field": "",
        "file": "public/tiddlers/icons/tw-icons-01.tid",
        "updtostory": true,
        "tostory": "false",
        "template": "created: 20231025184554690\nmodified: 20231025185816847\ntitle: $:/images/bootstrap/journal-arrow-down\ntags: $:/tags/Image Icons Images SVG\nlibrary_version: 1.3.0\nlibrary: Bootstrap\ncollection: \ncaption: journal-arrow-down\n\n<svg width=\"22pt\" height=\"22pt\" class=\"tc-image-bts-journal-arrow-down tc-image-button\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 5a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5A.5.5 0 0 1 8 5z\"/><path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\"/><path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\"/></svg>\n\n\n§¦topic¦§\n\n\n\n",
        "clear": false,
        "editorIsOpen": true,
        "settingsIsOpen": false,
        "fromIsOpen": true,
        "editorIsX": true,
        "fileIsX": false,
        "networkIsX": false,
        "twikiIsX": false,
        "fieldIsX": false,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "ff08cb9467d0e0af"
            ]
        ]
    },
    {
        "id": "6369cbcac492e9cf",
        "type": "template",
        "z": "9434cba69ba3166b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{=§¦ ¦§=}}\nThis is the topic: §¦topic¦§ !\n",
        "output": "str",
        "x": 400,
        "y": 240,
        "wires": [
            [
                "ff08cb9467d0e0af"
            ]
        ]
    },
    {
        "id": "b3f3017b726e9d6d",
        "type": "link in",
        "z": "9434cba69ba3166b",
        "name": "From Client",
        "links": [
            "4c9c46b76b72965f"
        ],
        "x": 45,
        "y": 60,
        "wires": [
            [
                "1097d795019e0ea6",
                "a6dbedf3f9805c95"
            ]
        ],
        "icon": "@potofcoffee2go/tw5-nodes/networkdown.svg"
    },
    {
        "id": "70e704d96f1c9db8",
        "type": "link out",
        "z": "9434cba69ba3166b",
        "name": "To Client",
        "mode": "link",
        "links": [
            "5f3f98f37ba41eb1"
        ],
        "x": 605,
        "y": 60,
        "wires": [],
        "icon": "@potofcoffee2go/tw5-nodes/networkup.svg"
    },
    {
        "id": "c1fd410c50a20c73",
        "type": "function",
        "z": "9434cba69ba3166b",
        "name": "loadTiddlersFromPath",
        "func": "const $tw = global.get('$tw');\nconst defaultDir = global.get('defaultDir');\nconst wiki = new $tw.Wiki;\n\nvar tiddlers = $tw.loadTiddlersFromPath('./' + defaultDir);\nvar count = 0;\n\n$tw.utils.each(tiddlers, function (tiddlerInfo) {\n    $tw.utils.each(tiddlerInfo.tiddlers, function (tiddler) {\n        wiki.importTiddler(new $tw.Tiddler(tiddler));\n        count++;\n    });\n});\nmsg.count = count;\nmsg.payload = JSON.parse(wiki.getTiddlersAsJson('[all[]]'));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 280,
        "wires": [
            [
                "ff08cb9467d0e0af"
            ]
        ]
    },
    {
        "id": "370779ad367936dd",
        "type": "function",
        "z": "9434cba69ba3166b",
        "name": "Write multi tids individually",
        "func": "const fs = global.get('fs');\nconst $tw = global.get('$tw');\nconst syncDirTiddlers = global.get('syncDir') +'/tiddlers';\n\nfunction writeIndividualTids(inTids) {\n    let tid = [], atLine = 1;\n    let lines = inTids.split('\\n');\n    for (let idx = 0; idx < lines.length; idx++) {\n        if (lines[idx] === '+======+') {\n            fs.writeFileSync(`${syncDirTiddlers}/tid${atLine}.tid`, tid.join('\\n'));\n            atLine = idx+1;\n            tid = [];\n        } else { // skip leading whitespacce\n            if (tid.length === 0 && lines[idx].length === 0) continue;\n            tid.push(lines[idx]);\n        }\n    }\n    // Last tiddler\n    if (tid.length) {\n        fs.writeFileSync(`${syncDirTiddlers}/tid${atLine++}.tid`, tid.join('\\n'));\n    }\n    return atLine;\n}\n\nmsg.test = writeIndividualTids(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "eb95b693bb3411d6",
        "type": "function",
        "z": "9434cba69ba3166b",
        "name": "function 3",
        "func": "const twrepl = global.get('twrepl');\ntwrepl.submit(`showObj(${JSON.stringify(msg)})\\n`);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "134e6cf970918b0e",
        "type": "link out",
        "z": "9434cba69ba3166b",
        "name": "To REPL",
        "mode": "link",
        "links": [
            "771666859c98bac6"
        ],
        "x": 390,
        "y": 400,
        "wires": [],
        "l": true
    },
    {
        "id": "4623743c2e8a7edc",
        "type": "inject",
        "z": "9434cba69ba3166b",
        "name": "",
        "props": [
            {
                "p": "repl",
                "v": "{\"cmd\":\"help.common('versions')\\n\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "134e6cf970918b0e"
            ]
        ]
    }
]